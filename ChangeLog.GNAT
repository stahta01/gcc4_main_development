commit f29076fb8280ff42850ca5a293aa00c717e079c0
2014-03-26  Olivier Hainque  <hainque@adacore.com>

        Backport from GCC 4.9 revision 207488
	* config/host-linux.c (linux_gt_pch_use_address): Don't
	use SSIZE_MAX because it is not always defined.

[N317-018: arm-linux native package]
(Already in GCC 4.9)    

commit 68ea077b15fd5fbea538e5e3b1791668271b8988
2014-03-26  Tristan Gingold  <gingold@adacore.com>

	* config/i386/gnu-user.h (CPP_SPEC): Add path for multiarch.
	(MD_STARTFILE_PREFIX): Define.
	* gcc/config/i386/gnu-user64.h (CPP_SPEC): Add path for multiarch.
	(MD_STARTFILE_PREFIX): Define.

[MA18-016: support for debian multiarch directory layout]
(To be ported)

commit 4be99c20362e110234afacb3389821f2eb523a14
2014-03-20  Douglas B Rupp  <rupp@adacore.com>

	* config.gcc (arm-wrs-vxworks): Make it with t-vxworks-zcx
	* config/arm/t-vxworks-zcx: New file for building just an mrtp multilib

[N320-002: Enable multilib for arm vxworks nightly build]
[N213-004: Switch ARM VxWorks6 RTP to ZCX]
(To be ported)

commit 1041b07bff8f48b11206c0fc1696579add2430c0
2014-03-20  Douglas B Rupp  <rupp@adacore.com>

gcc/
	* config/vxworks.h (VXWORKS_{START,END}FILE_SPEC): Remove mrtp guard.
libgcc/
	* crtstuff.c (__vxworks): Add magic RTP symbols for {de}register_frame
	via {d,c}tors.

[N213-004: Switch ARM VxWorks6 RTP to ZCX]
(To be submitted)

commit d14d23cdd0ec69917e7d4a73bc6b4d4e2eecc09f
2014-03-19  Pierre-Marie de Rodat  <derodat@adacore.com>

	* cfglayout.c (expand_location_with_info): Handle source location that
	have no line map.

[J512-028: get rid of the GNAT encoding for renaming]
(To be submitted)

commit 2230de7d10b34e1339613f8b61d59761486616a6
2014-03-18  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/sparc.c (sparc_reorg): Implement workaround for store
	forwarding issue in the FPU on the UT699.
	* config/sparc/sparc.md (in_branch_delay): Return false for single FP
	loads and operations if -mfix-ut699 is specified.
	(divtf3_hq): Tweak attribute.
	(sqrttf2_hq): Likewise.

[N310-008: implement workaround for new FPU erratum on LEON3]
(Installed in GCC 4.8 on 2014-03-20 - revision 208696)

commit 0f2b11b6e0c0f844f807b0995c330c350f8782a8
commit bc543ec214964580133ae21bd36d492e894211c2
2014-03-14  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/sparc-protos.h (tls_call_delay): Delete.
	(eligible_for_call_delay): New prototype.
	* config/sparc/sparc.c (tls_call_delay): Rename into...
	(eligible_for_call_delay): ...this.  Return false if the instruction
	cannot be put in the delay slot of a branch.
	(eligible_for_restore_insn): Simplify.
	(eligible_for_return_delay): Return false if the instruction cannot be
	put in the delay slot of a branch and simplify.
	(eligible_for_sibcall_delay): Return false if the instruction cannot be
	put in the delay slot of a branch.
	(sparc_reorg): Speed up and use proper constant for the store mode.
	* config/sparc/sparc.md (fix_ut699): New attribute.
	(tls_call_delay): Delete.
	(in_call_delay): Reimplement.
	(eligible_for_sibcall_delay): Rename into...
	(in_sibcall_delay): ...this.
	(eligible_for_return_delay): Rename into...
	(in_return_delay): ...this.
	(in_branch_delay): Reimplement.
	(in_uncond_branch_delay): Delete.
	(in_annul_branch_delay): Delete.

[M611-032: implement workaround for LEON3FT Data Cache Errata]
(Installed in GCC 4.8 on 2014-03-15 - revision 208598)

commit 98ffe699b409755481e48eb3096d58f4bf72e9fc
commit dc89ad2cccaf4d34b1b8b4fd518d1e5486cd5db5
2014-02-23  Eric Botcazou  <ebotcazou@adacore.com>

	* common.opt (ftree-dce): Initialize to 1.
	* doc/invoke.texi (Optimization): Adjust entry of -ftree-dce.
	* opts.c (default_options_table): Remove entry of -ftree-dce.
	* passes.c (init_optimization_passes): Add pass_dce_O0.
	* tree-pass.h (pass_dce_O0): Declare.
	* tree-ssa-dce.c (mark_stmt_if_obviously_necessary): Adjust to -O0.
	(eliminate_unnecessary_stmts): Likewise.
	(gate_no_optimization): New gate function.
	(pass_dce_O0): New pass.
	* tree-ssa-operands.c (create_vop_var): Set DECL_IGNORED_P.
	(append_use): Run at -O0.
	(append_vdef): Likewise.
testsuite/
	* gcc.dg/uninit-B-O0.c: Remove XFAIL.
	* gcc.dg/uninit-I-O0.c: Likewise.
	* gcc.dg/uninit-pr19430-O0.c: Remove some XFAILs.

[N221-004: improve compiler performance for big discriminated types]
(To be submitted)

commit c61bf3f0a36341fd41a47c72f9eafeef912698c6
2014-02-22  Eric Botcazou  <ebotcazou@adacore.com>

	* stor-layout.c (place_field): Finalize non-constant offset for the
	field, if any.

[N221-004: improve compiler performance for big discriminated types]
(To be submitted)

commit 9b67c605ace2db2f1059a114a30224faf5f90b76
commit a12496a8313b985356fa594818fbeaad0e4f2cf7
2014-02-19  Eric Botcazou  <ebotcazou@adacore.com>

	Manual merge of origin/fsf-gcc-4.7-branch into gcc-4.7.

[M703-008: gcc pm activity]
(Obsolete for GCC 4.9)

commit 664fc0cd61fe521905e5cb46ccb1b38bc5d0f666
2014-02-18  Pierre-Marie de Rodat  <derodat@adacore.com>

	* scos.c: Rename to cscos.c.
	* scos.h: Likewise.
	* Makefile.in: Adjust.
	* gimplify.c: Likewise.

[N130-022: gnatcov inaccuracies with multiple stmts on line]
(To be submitted)

commit 47d42b0f3f6eb171946663d6c335453e5dcba6f4
2014-02-17  Pierre-Marie de Rodat <derodat@adacore.com>

	* scos.c (scos_context): Replace the expression level field with a
	boolean one.
	(deferred_leave_expr, enter_expr, generate_scos): Adjust: stop tracking
	expression depth.
	(generate_stmts_scos_helper): Likewise. Do not emit SCO statements for
	nested statements.

[N217-019: C SCOs: crash when handling strcmp expansion at -O1]
(To be submitted)

commit 3a926c0fcbb3bd0125c7ba999a15cfa942c72e2e
2014-02-17  Pierre-Marie de Rodat  <derodat@adacore.com>

	* scos.c (stmt_lines): Turn into an array of bitmaps.
	(multi_stmt_lines_1): New.
	(multi_stmt_lines_obstack): Remove.
	(linemap_to_source_file_index): New.
	(same_line_map): Rename to same_source_file and update its
	implementation to use linemap_to_source_file_index.
	(print_sloc_range, expand_to_sloc_range, sloc_in_range): Adjust.
	(write_unbuffered_stmt): Adjust.
	(generate_scos): Adjust, generate bitmap tables according to the
	linemap to source file mapping.

[N211-046: C SCOs: handle multiple line maps for single files]
(To be submitted)

commit d59a2f1db89c7eb3d7f2de5fddd5065554da03df
2014-02-17  Pierre-Marie de Rodat  <derodat@adacore.com>

	* scos.c (generate_stmts_scos_helper) <SWITCH_EXPR>: Pell BIND_EXPR
	nodes around STATEMENT_LIST ones.

[N214-031: C SCOs: BIND_EXPR nodes under SWITCH_EXPR ones]
(To be submitted)

revert-by c8a0bfc2e13f0192056dfce05f32bc8ab8d0fde7
commit d2fe631b68ed9a7255ae7379203738faeb659944
2014-02-16  Eric Botcazou  <ebotcazou@adacore.com>

	* ipa-prop.c (compute_complex_ancestor_jump_func): Replace overzealous
	assertion with conditional return.

[N216-001: internal error with Ada.Containers.Vectors at -O2]
(Installed in GCC 4.7 on 2014-02-18 - revision 207840)

revert-by 69160e7081270905b05f9062a7f2875192ceae09
commit 3e84bca62ade2736084b84e33de574a9affcf975
2014-02-14  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/i386.c (ix86_expand_prologue): Revert problematic change
	made for PR target/56807.

[N213-061: internal error with big frames on x86-64/Windows]
(Obsolete for GCC 4.7)

commit 84d16ae08796a165b27d7fb57f1aedc58274c7cf
commit e921fdad89ba166248ab0415eae3e7c71af689dd
2014-02-10  Pierre-Marie de Rodat  <derodat@adacore.com>

	* dwarf2out.c (gen_type_die_with_usage): Use the get_array_descr_info
	hook even for strict DWARF2.
	(gen_descr_array_type_die): Don't emit DW_AT_data_location,
	DW_AT_associated, DW_AT_allocated and DW_AT_byte_stride attributes for
	strict DWARF2.

[N207-011: DWARF: wrong array range type on x86_64-darwin]
(To be submitted)

commit 593fc1bd0f5fb6f20c6ab901562109852165f32c
revert-by 35fbac72fba0c5f4ae9113a9470b28016a75b25d
commit d23bdaebf8d9228a3178c96aa32ef0535cb285ab
commit 5d3782d3cfee2505dedd7860740a757c6b4c1b10
2014-02-09  Eric Botcazou  <ebotcazou@adacore.com>

	* expr.c (expand_expr_real_1) <case VIEW_CONVERT_EXPR>: For a bit-field
	destination type, extract only the valid bits if the source type is not
	integral and has a different mode.

[N209-006: failure of N206_028 on PowerPC/Linux and AIX]
(Installed in GCC 4.9 on 2014-02-19 - revision 207902)

commit 6d7782ede10974f5c852bfca44e0ff996a8a2e08
2014-02-09  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.9 revision 207338
	* builtins.c (fold_builtin_memory_op): Make sure to not
	use a floating-point mode or a boolean or enumeral type for
	the copy operation.

[N129-040: wrong code for block copy to aliased float at -O on x86]
(Already in GCC 4.9)

commit cfe0f3fc24a91a4e1f15e6605b423fa6dd74ef3a
2014-02-06  Pierre-Marie de Rodat  <derodat@adacore.com>

	* scos.c (expand_to_sloc_range): Ignore unknown locations.

[N205-045: C SCOs: spurious warnings for sloc-less nodes]
(To be submitted)

commit 2776e5f8fc6e043e6b132445c0b497c7ab4b0918
2014-02-05  Pierre-Marie de Rodat  <derodat@adacore.com>

	* dwarf2out.h (struct array_descr_dimen): Add a bounds_type field.
	* dwarf2out.c (init_array_descr_info): New.
	(gen_type_die_with_usage): Use it.
	(gen_descr_array_type_die): Generate a type DIE only for the type main
	variant. Add a GNAT descriptive type attribute and a type attribute for
	bounds subranges.

[N122-057: DWARF: array subrange base type when indexed by enum]
(To be submitted)

commit 061d0c7741db5b48773033e34074b89144e9b695
2014-02-04  Eric Botcazou  <ebotcazou@adacore.com>

	* optabs.c (expand_float): If all other methods have failed, open-code
	conversions from DImode to SFmode.
	(expand_fix): Split conversions from SFmode and DFmode.
	* config/rs6000/rs6000.c (rs6000_vxworks_init_libfuncs): Disconnect
	the __float[un]disf routines.
	(rs6000_vxworks_init_libfuncs): Likewise.

[N203-046: missing symbols in libgcc.a for ppc-lynx178]
(To be ported)

commit e436e14d269cf26ac4bd2df6b6467cc19b50771a
commit 87ac4ef93216f344eb98692bf84295d2a1bdce50
2014-01-29  Pierre-Marie de Rodat  <derodat@adacore.com>

	* scos.c (struct print_decision_subtree_args): Add a "decision" field.
	(print_decision_subtree): Replace the tree "node" parameter with a
	"decision" one, use it to initialize the args structure.
	(process_decision): Adapt.
	(print_decision_subtree_helper): Add fallback to assign a sloc to
	integer constants.

[N128-008: C SCOs: constant conditions handling]
(To be submitted)

commit [dump-xref]
2014-01-27  Joel Brobecker  <brobecker@adacore.com>

cp/
	* parser.c (cp_parser_primary_expression): Remove the code
	generating an xref before the call to finish_id_expression.
	Instead, do it after the call after having saved the original
	decl.  Rework the condition for generating the xref and its
	associated comment.

[N120-051: integral_constant_value called before decl is complete]
(Superseded by change on gcc-4.9 branch)

commit e91189734fe60d60903a8f45a1c1b2b89058bad0
commit 30fd8dedffd3f4c58896b9571904b582035533d5
2014-01-22  Eric Botcazou  <ebotcazou@adacore.com>

	* optabs.c (expand_float): If all other methods have failed, open-code
	conversions from DImode to DFmode.
	* config/rs6000/rs6000.c (rs6000_vxworks_init_libfuncs): Disconnect
	the __float[un]didf routines.

[KA25-039: VxWorks 653: ACATS regressions due to testing config]
(To be ported)

commit 5b30d1dfceb27591b32bc259f40114207277db58
2014-01-21  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.9 revision 198175
	* tree-vrp.c (simplify_conversion_using_ranges): Do not propagate
	from SSA names occuring in abnormal PHI nodes.

[N117-030: internal error on integer conversion at -O2 with SJLJ]
(Already in GCC 4.9)

commit bbd00972d7e8d3e5214bbf2e3beb07a3034d9901
commit 61d78a9a88ac28424aad0a3602c2bcb24f001e00
2014-01-21  Eric Botcazou  <ebotcazou@adacore.com>

	* expmed.c (expand_divmod): If all other methods have failed, try the
	unsigned version of the library function for a signed remainder.
	* optabs.c (expand_fix): If all other methods have failed, open-code
	conversions from SFmode/DFmode to DImode.
	* config/rs6000/rs6000.c (rs6000_lynxos_init_libfuncs): New function.
	* config/rs6000/lynx-xcoff.h (TARGET_INIT_LIBFUNCS): Define.

[L710-052: missing symbols in libgcc.a for ppc-lynx178]
(To be ported)

commit acb05c378d5796712fc17455cdd1cdd4de0ac3a1
2014-01-20  Tristan Gingold  <gingold@adacore.com>

	* dwarf2out.c (gen_subprogram_die): Do not emit frame_base DIE at -g1.
	(dwarf2out_source_line): Emit line at -g1.
	(dwarf2out_finish): Emit stmt_list DIE at -g1.

[N120-054: -g1 doesn't work with Ada and symbolic traceback]
(To be submitted)

commit d4c1a5ee08a4c33a625e77d03c3f62662d0e4630
2014-01-13  Tristan Gingold  <gingold@adacore.com>

	* config/rs6000/t-aix52 (MULTILIB_DIRNAMES): Remove 64 bit libraries.

[L704-004: -maix64 multilib build failure on ppc-aix]
(Not to be submitted - local setting)

commit e879b3ef98feb0b9c52639352c6c84b1bd57186e
2014-01-09  Olivier Hainque  <hainque@adacore.com>

	* config/vxworksae.h (VXWORKS_OVERRIDE_OPTIONS): Define.

[N108-062: strict dw2 not by default on x86-vx653]

commit a7762b305ad90750fe7e3dc9e10e203070ec4353
commit 3639c6a2a15c52ca105a905a697cb8a307f7ffe6
2013-12-28  Douglas B Rupp  <rupp@adacore.com>

gcc/
	* common/config/arm/arm-common.c (arm_except_unwind_info): Return
	UI_DWARF2 if not otherwise configured.
	* config/arm/arm.c (arm_dbx_register_number): Return INVALID_REGNUM
	#if DWARF_FRAME_REGISTERS.
	* config/arm/vxworks.h (DWARF2_UNWIND_INFO, HAS_INIT_SECTION,
	USE_EH_FRAME_REGISTRY, USE_TM_CLONE_REGISTRY, TARGET_USE_JCR_SECTION):
	Define.
libgcc/
	* config.host (arm-wrs-vxworks): Add crtbegin.o crtbeginT.o crtend.o
	to extra_parts.

[MB26-001: Switch to ZCX on arm-vx6]
(To be submitted)

commit a221947d2f94911540b3f8482b796f237111596a
2013-12-28  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 206230
	* doc/invoke.texi (output file options): Document -fada-spec-parent.

(Already in GCC 4.8)

commit [dump-ada-spec]
2013-12-26  Eric Botcazou  <ebotcazou@adacore.com>

c-family/
	* c-ada-spec.c (print_constructor): New function.
	(print_destructor): Retrieve the origin of the destructor.
	(print_ada_declaration): Revamp handling of constructors/destructors.

[MC25-008: fix fallout of C++ decloning patch]
(Installed in GCC 4.9 on 2013-12-28 - revision 206228)

commit 7504353c3a7eb0780736bb8feb9f64dced9f0963
2013-12-21  Eric Botcazou  <ebotcazou@adacore.com>

	* config/arm/arm.c (arm_output_epilogue): Take into account the number
	of bytes used to save the static chain register in the computation of
	the offset from which the FP registers need to be restored.
	(arm_get_frame_offsets): Revamp long lines.

[MC16-033: wrong code for ACATS cxg tests with -O2 on ARM/VxWorks]
(Installed in GCC 4.9 on 2014-01-04 - revision 206337)

commit 03c86bb885d7b4bf4153404888e033e37b35e9c5
2013-12-21  Olivier Hainque  <hainque@adacore.com>

	revert 46f1e1ade2a057a749d140068e7fae883f3531a2, fsf
        commit introducing suspicious Load/FreeLibrary in crtstuff
        on Windows.

[MC12-061: abort on unload with recent patch in GCC]
(To be submitted)

commit f07ee767f2cd43f3cd29ed491a9ce689907640c0
2013-12-18  Tristan Gingold  <gingold@adacore.com>

libcpp/
	* files.c (STAT_SIZE_RELIABLE): Also consider VFC files

[MC18-030: stat not reliable for VMS vfc files]
(To be submitted)

commit 06c69b634bab1f590fc6f85e2c2b5ec21e9a33d
2013-12-18  Eric Botcazou  <ebotcazou@adacore.com>

	* config/arm/aout.h (REGISTER_NAMES): Use "r10" instead of "sl".
	* config/arm/arm.c (arm_set_return_address): Set MEM_VOLATILE_P on the
	memory reference.
	(thumb_set_return_address): Likewise.

[MC18-017: wrong code for __builtin_eh_return on ARM at -O2]
(Obsolete for GCC 4.8)

commit ed479aea6607c93aec7be0186462275deaa99e64
2013-12-16  Douglas B Rupp  <rupp@adacore.com>

	* config/arm/arm.h (ASM_PREFERRED_EH_DATA_FORMAT): Expose from
	ARM_TARGET2_DWARF_FORMAT.

[MC16-020: Part of ARM Linux ZCX port]
(Submitted at http://gcc.gnu.org/ml/gcc-patches/2014-03/msg01333.html)

commit d111f88803509f8507a095ce72b98fb658dc1235
2013-12-03  Eric Botcazou  <ebotcazou@adacore.com>

	* expr.c (expand_expr_real_1) <normal_inner_ref>: Always return 0 for
	the extraction of a bit-field of null size.

[L604-030: wrong size for packed record with zero-length component]
(Installed in GCC 4.9 on 2013-12-10 - revision 205855)

commit 421f7f1adda365a3203483e10dc2564c11ad5d7e
2013-11-29  Douglas B Rupp  <rupp@adacore.com>

	* config/vms/vms-ld.c (main): For -l, check for and read a .opt file
	with same name as shrareable library.  Move read options file code
	to ...
	(read_options_file): this new function.

[LA18-005: Also search for options files in library search dirs]
(To be submitted)

revert-by 4757b06da570befd6351917bf306559f3a6f8496
commit ceeb95da4cb6e9ad27513007f8fb9860f34e925b
2013-11-28  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/winnt.c (i386_pe_asm_named_section): Be prepared for an
	identifier node.

[MB28-035: compiler crash on C++ file with -g3 on Windows]
(Installed in GCC 4.7 on 2013-12-01 - revision 205570)

commit 6d430e5db6bbe098de4d739aac3ea27b2cdf65ee
2013-11-27  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 190342
	* tree.c (integer_pow2p): Avoid undefined signed overflows.
	* simplify-rtx.c (neg_const_int): Likewise.
	* expr.c (fixup_args_size_notes): Likewise.
	* stor-layout.c (set_min_and_max_values_for_integral_type): Likewise.
	* double-int.c (mul_double_wide_with_sign): Likewise.
	(double_int_mask): Likewise.
	* tree-ssa-loop-ivopts.c (get_address_cost): Likewise.

[MB27-053: wrong value for zero-length component of record type]
(Already in GCC 4.8)

commit db20e10068227db8097aff731dc7a4a546508aad
2013-11-24  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.9 revision 205305
	* gimplify.h (recalculate_side_effects): Delete.
	* gimple.c (recalculate_side_effects): Move to...
	* gimplify.c (recalculate_side_effects): ...here and make static.

(Already in GCC 4.9)

commit 8cc6885612d90e99966ab37c296b9708a3581183
commit a98fdca2b2aee18af15e5ae8c19545e78a6a0ce2
2013-11-16  Douglas B Rupp  <rupp@adacore.com>

	* config/ia64/ia64.c (TARGET_ASM_FILE_END): Define to ...
	(ia64_vms_file_end): New function.
	* config/ia64/ia64.opt: (vms_float_format): New variable.
	* config/alpha/alpha.opt: Add the required terminating blank line
	* config/ia64/ia64.c (ia64_vms_file_end): Move to vms/vms.c
	(TARGET_ASM_FILE_END): Move definition to vms/vms.h
	* config/ia64/ia64.opt (vms_float_format): Move to vms/vms.opt
	* config/vms/vms-protos.h (vms_file_end): Declare
	* config/vms/vms.c (vms_file_end): Moved here from ia64/ia64.c
	* config/vms/vms.h (TARGET_ASM_FILE_END): Moved here from ia64/ia64.c
	* config/vms/vms.opt (vms_float_format): Moved here from ia64/ia64.opt

[MB10-005: New .float_flags pseudo-op]
(To be submitted)

commit fe31831d667f206b4e8b676ba6aa0fa94609e47f
2013-11-13  Eric Botcazou  <ebotcazou@adacore.com>

	* cfgexpand.c (expand_used_vars): Allocate space for partitions based
	on PARM_DECLs or RESULT_DECLs only if they are ignored for debug info
	or if optimization is enabled.
	* tree-ssa-coalesce.c (coalesce_ssa_name): If optimization is disabled,
	require that all the names based on a PARM_DECL or a RESULT_DECL that
	isn't ignored for debug info be coalesced.

[MB07-021: incorrect value for non-In parameters in the debugger]
(Installed in GCC 4.9 on 2013-11-13 - revision 204742)

commit 030648df5afc796c7927c6e6cd3f1c8aff4434c5
commit 3d9fc645132ecbe842df47b6733607cb8ef50a65
commit dd32d9e7850dbbb9c0fa2e99a7b51b55d8cdd45b
2013-11-08  Eric Botcazou  <ebotcazou@adacore.com>

	* config/arm/arm.c (arm_dwarf_register_span): Take into account the
	endianness of the D registers for the legacy encodings.

[MB04-021: GDB: fp_registers_no_tasking fails on arm-eabi-windows]
(Installed in GCC 4.9 on 2013-11-20 - revision 205118)

commit 42fe03ad898bc5165671cde8756f9f1363f4e006
2013-11-08  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.9 revision 199261
	* config/arm/arm.c (arm_dwarf_register_span): Do not use dbx number.

[MB04-021: GDB: fp_registers_no_tasking fails on arm-eabi-windows]
(Already in GCC 4.9)

commit f3a797d3f27bf60fcf0d4fd93f7d1f3ecf3a06e9
2013-10-30  Douglas B Rupp  <rupp@adacore.com>

	* config/vms/vms-ld.c: Tabify.
	(main): Return success code on a successful link with warnings.

[MA10-064: VMS ld wrapper returns failure status code on success]
(To be submitted)

commit 3c97019a2722cfaaa653cc2d1e681424f51467c3
commit eb2365a4f5215f289b0f8cc03693f4b6fc21c199
2013-10-30  Tristan Gingold  <gingold@adacore.com>

	* dwarf2out.c (output_comp_unit_die_trace): Handle empty stmt_list.
	(get_comp_unit_attrs_trace): Ditto.

[MA29-005: compiler crash on units without statements]
(To be submitted)

commit 0657db6b4be22e5606c5c3dfb3798fb7bd1844f2
2013-10-25  Douglas B Rupp  <rupp@adacore.com>

	* config/rs6000/rs6000.c (rs6000_vxworks_init_libfuncs): New function.
	(TARGET_INIT_LIBFUNCS): Move ...
	* config/rs6000/rs6000.h (TARGET_INIT_LIBFUNCS): to here.
	* config/rs6000/vxworks.h (TARGET_INIT_LIBFUNCS): Define for vxworks.

[MA15-002: Fix for broken 64bit division in ppc vxworks cert rtp]
(To be submitted)

commit c321a719cbd6ccc038f3f0cb19d0ed0b0c3b2f75
2013-10-21  Eric Botcazou  <ebotcazou@adacore.com>

	* fold-const.c (LOGICAL_OP_NON_SHORT_CIRCUIT): Move around.
	(fold_range_test): Use BRANCH_COST directly.
	(fold_truth_andor_1): Fix formatting.

[MA21-073: branch cost heuristics for logical ops on the LMP]
(To be submitted)

commit 123f4b95c23e950d465200ae20e68792622020bc
2013-10-21  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 191457
	* fold-const.c (fold_truth_andor): Remove duplicated check on
	BRANCH_COST.

(Already in GCC 4.8)

commit 33974a3080ceb7f30ea513b41b42b7fdaf2fcf23
commit b5947782e78581bc9e0ef0548adc8ac6b03b0772
2013-10-19  Eric Botcazou  <ebotcazou@adacore.com>

	* cfghooks.c (merge_blocks): Adjust the frequency of the block.
	* final.c (compute_alignments): Do not apply loop alignment to a block
	falling through to the exit.

[MA15-015: poor floating-point register allocation on the lmp/gr5]
(To be submitted)

commit 4ce24263dfbdc2e2dd26b73b4b45ea12a469b5f5
2013-10-13  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.9 revision 203490
testsuite/
	* gnat.dg/specs/linker_section.ads: Update test.

(Already in GCC 4.9)

commit 5aca4233c752d63f70a81931e4e065b993a41839
2013-09-29  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/i386.c (ix86_expand_prologue): Likewise.
	* config/ia64/ia64.c (ia64_emit_probe_stack_range): Adjust.
	(ia64_expand_prologue): Likewise.
	* config/mips/mips.c (mips_expand_prologue): Likewise.
	* config/rs6000/rs6000.c (rs6000_emit_prologue): Likewise.
	* config/sparc/sparc.c (sparc_expand_prologue): Likewise.
	(sparc_flat_expand_prologue): Likewise.

[M929-002: optimize stack checking for leaf functions]
(Installed in GCC 4.9 on 2013-11-06 - revision 204450)

commit fb2fc8673658543d3b8fa580e3067bf1e5739d0f
2013-09-22  Eric Botcazou  <ebotcazou@adacore.com>

	* gimplify.c (gimplify_asm_expr): Reset the TREE_CHAIN of clobbers to
	NULL_TREE before pushing them onto the vector.  Likewise for labels.

(Installed in GCC 4.9 on 2013-09-22 - revision 202819)

revert-by 1c59522ace357bf46c1c2aecd6acbf0f17392590
commit 31bc501238c1851fa6dde50b15f9e0e20d03c935
2013-09-17  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-ccp.c (insert_clobber_before_stack_restore): Recurse on copy
	assignment statements.

[M823-029: internal error on string manipulation at -O2 with SJLJ]
(Installed in GCC 4.7 on 2013-09-23 - revision 202835)

commit e5377133f238d4e7c53b0a9e8728f69df7defa3e
commit 07b7dc2c15b482ca75aab2150c9e69d7a9ad39cc
commit 6a62304e348c15e2824b03b1aaa36913b4292037
2013-09-16  Pierre-Marie de Rodat  <derodat@adacore.com>

	* scos.c (stmt_lines, (stmt_lines_initialized,
	multi_stmt_lines_obstack, get_line_map_no): New.
	(write_unbuffered_stmt): Tag lines that contain multiple statements.
	(generate_scos): Initialize multi-statement lines data structures.
	* input.c (multi_stmt_lines): New.
	(expand_location_1): Replace instance parameter with map.
	* input.h (multi_stmt_lines): New.
	(expand_location_1): Adjust prototype.
	* cfglayout.c (expand_location_with_info): New.
	(insn_location, insn_multi_location): Adjust to call
	expand_location_with_info.
	* rtl.h (insn_location, insn_multi_location): Adjust prototypes.
	* print-rtl.c (print_rtx): Adjust call to insn_location.
	* final.c (final_scan_insn, notice_source_line): Adjust calls to
	insn_location and insn_multi_location in order to process accordingly
	multiple statements lines.

[M319-018: column info for specific lines in DWARF]
(To be submitted)

commit 7474857a8d899347ea4b1b7787c16ef1f6391fda
2013-09-13  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.9 revision 200172
	* config/arm/arm.c (neon_vector_mem_operand): Add strict argument.
	Permit virtual register pre-reload if !strict.
	(coproc_secondary_reload_class): Adjust for neon_vector_mem_operand
	change.
	* config/arm/arm-protos.h (neon_vector_mem_operand): Adjust
	prototype.
	* config/arm/neon.md (movmisalign<mode>): Use
	neon_perm_struct_or_reg_operand instead of
	neon_struct_or_register_operand.
	(*movmisalign<mode>_neon_load, *movmisalign<mode>_neon_store): Use
	neon_permissive_struct_operand instead of neon_struct_operand.
	* config/arm/constraints.md (Un, Um, Us): Adjust calls to
	neon_vector_mem_operand.
	* config/arm/predicates.md (neon_struct_operand): Adjust call to
	neon_vector_mem_operand.
	(neon_permissive_struct_operand): New.
	(neon_struct_or_register_operand): Rename to...
	(neon_perm_struct_or_reg_operand): This. Adjust call to
	neon_vector_mem_operand.

[M912-015: internal error on unchecked conversion to 64-bit type]
(Already in GCC 4.9)

commit 175a188684339dffd1733b989ad82682d911c533
2013-09-12  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-loop-ivopts.c (may_be_unaligned_p): Deal with BLKmode as
	the access mode.

[M815-008: unaligned access generated for misaligned array with -O]
(Installed in GCC 4.9 on 2014-01-13 - revision 206576)

commit 9dc2ea9e3ff27e5ff93c040187362631cf7dc8b8
commit dd9d238991a6cede16c1b0a2d78fc2ce780dd77b
2013-09-03  Olivier Hainque  <hainque@adacore.com>

	* config.sub: Remove vxworksmils -> vxworksae.
	* contrib/config-list.mk: Handle vxworksmils as vxworksae.
libgcc/
	* config.host: Likewise.
gcc/
	* config/rs6000/t-vxworksmils: New file.
	* config/rs6000/t-vxworksae: Remove mils related kludge.
	* config/rs6000/vxworksmils.h: Adjust for use on top of vxworks.h,
	without vxworksae.h in between.
	* config.gcc (powerpc-wrs-vxworks*): Add case entry for vxworksmils.

[M905-006: ppc-vxmils build failures, missing system limits.h from libgcc]
[M212-039: considering vxworksmils as a canonical target]
[L817-024: vxworks mils transition to gcc-4.7]
(To be submitted)

commit 77e8c0416a451dde687d6250702c492ce3080117
commit ee5e02d28a09ace0d0d1c3018172628cfc6898dc
2013-09-02  Olivier Hainque  <hainque@adacore.com>

	* gcc.c (spec_env_eval_is_pointless): New global.
	(process_command): Set to true when running for --version or --help
	and variants.
	(getenv_spec_function): Return a static non-empty result when
        spec_env_eval_is_pointless.

[M227-037: spurious env-var undefined error from self-spec ref on --version]
[N117-006: x86-elinos compiler segfault on --version]
(To be submitted)

commit ba216fd587af33e72365e6dc5212dba89b23fd7c
2013-08-30  Jerome Guitton  <guitton@adacore.com>

	* config.gcc: Update list of target-specific headers.
	* config/i386/vxworksae.h: Remove an obsolete constraint
	that used to force the target to vxsim.

[M821-027: resurrect x86-vx653]
(To be submitted)

commit 9126a35426df6701d5efbce40bc99e7c7218cbd5
2013-08-30  Olivier Hainque  <hainque@adacore.com>

	* config/lmp/wcet: Remove.

[M829-012: wcet subdir of the lmp port]
(Obsolete for GCC 4.9)

commit b2c63af1ed90d54ef9f8f6998abda5ba3d892c9d
2013-08-21  Joel Brobecker  <brobecker@adacore.com>

	* config/arm/vxworks.h (LIB_SPEC): Add PATH to RTP libraries if linking
	with -mrtp and without -shared.

[M821-031: missing LIB_SPEC fragment when linking with rtp runtime (arm-vx6)]
(To be submitted)

commit fc3fa87c5a3d74c6812b62c3166c4b8606efb20d
commit 8171982931de07c461798bb19982a1378899583f
2013-08-07  Olivier Hainque  <hainque@adacore.com>

	* config/i386/i386.c (ix86_avoid_jump_mispredicts): Emit the padding
	directive before the labels that precede the instruction to pad, if
	any.

[M412-022: p2align changes sloc of goto destination]
(To be submitted)

commit 0a264672e0ca013f4e8ca321efadd65c61fe6274
commit aed57dc3469288da3f6c1fd09b5b3c1d3e9b35b6
commit 311c9ec0496922a2eaf12c0304335d86041cbf05
2013-08-05  Eric Botcazou  <ebotcazou@adacore.com>

	* configure.ac: Add GAS check for LEON instructions on SPARC.
	* configure: Regenerate.
	* config.in: Likewise.
	* config.gcc (with_cpu): Remove sparc-leon*-* and deal with LEON in the
	sparc*-*-* block.
	* config/sparc/sparc.opt (LEON, LEON3): New masks.
	* config/sparc/sparc.h (ASM_CPU32_DEFAULT_SPEC): Set to AS_LEON_FLAG
	for LEON or LEON3.
	(ASM_CPU_SPEC): Pass AS_LEON_FLAG if -mcpu=leon or -mcpu=leon3.
	(AS_LEON_FLAG): New macro.
	* config/sparc/sparc.c (sparc_option_override): Set MASK_LEON for leon
	and MASK_LEON3 for leon3 and unset them if HAVE_AS_LEON is not defined.
	Deal with LEON and LEON3 for the memory model.
	* config/sparc/sync.md (atomic_compare_and_swap<mode>): Enable if LEON3
	(atomic_compare_and_swap<mode>_1): Likewise.
	(*atomic_compare_and_swap<mode>_1): Likewise.

[L203-009: access to compare-and-swap primitive on LEON3]
(Installed in GCC 4.9 on 2013-08-09 - revision 201622)

commit [dump-ada-spec]
2013-08-01  Arnaud Charlet  <charlet@adacore.com>

	* c-ada-spec.c (print_ada_declaration): Prevent accessing null asm name

[M730-039 -fdump-ada-spec crash on C++ <vector>]
(Installed in GCC 4.8 on 2013-08-09 - revision 201626)

revert-by commit 2eeddfc3d9153f63d18099f27be7835ff7d087b2
commit c60013f647f17c02a8c431bf1a7a48501e27ac84
2013-07-17  Tristan Gingold  <gingold@adacore.com>

	* collect2-aix.h (F_LOADONLY): Define.

[LC09-005: canadian build for AIX]
(Obsolete for GCC 4.7)

commit 9d196c2cffdd651e3e42b384fb2f956f2e57e54e
2013-07-16  Douglas B Rupp  <rupp@adacore.com>

	* config/arm/vxworks.h (VXWORKS_ADDITIONAL_CPP_SPEC): Add -mrtp path.

[M716-049: Preliminary support for rtp-smp runtime for arm-vxworks]
(To be submitted)

commit 84f809e92975cf7ca0a34a82833f14be2d6b4742
2013-07-09  Thomas Quinot  <quinot@adacore.com>

	* convert.c (convert_to_integer): Preserve location of original
	expression.

[M528-002: MC/DC violations with controlled types]
(To be submitted)

commit b8b085c79a1bffddbd82977a61bc9761836b8e32
2013-07-05  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 194834
	* params.def (PARAM_MAX_VARTRACK_REVERSE_OP_SIZE): New param.
	* var-tracking.c (reverse_op): Don't add reverse ops to
	VALUEs that have already
	PARAM_VALUE (PARAM_MAX_VARTRACK_REVERSE_OP_SIZE) or longer locs list.

[M614-001: compile time explosion on huge allocator with -O -g]
(Already in GCC 4.8)

commit f7d8010ff6a63c7f33e6c6a9328f7418ea2eaa48
2013-07-06  Thomas Quinot  <quinot@adacore.com>

	* tree-complex.c (expand_complex_operations_1): Fix typo in comment.

(Installed in GCC 4.9 on 2013-07-05 - revision 200693)

commit 1c9abe7bab4c7911d9301156b4d290e9d8b3b669
2013-07-02  Eric Botcazou  <ebotcazou@adacore.com>

libgcc/
	* config.host (arm-wrs-vxworks): Insert arm/t-elf into tmake_file.
	* config/arm/t-vxworks (LIB1ASMFUNCS): Adjust for above.

[M622-003: Float/Fixed point regressions on arm-vx6]
(Installed in GCC 4.9 on 2013-11-11 - revision 204669)

commit e39af58a7c4b0dbbba53fef323352d830d571109
commit b9a041db56526dcd68b373aaff96067ac44a3f51
commit dba012eae247331ab60aa0aee5eb2149e134e466
commit 0523ec0936114e9bf4b255256f5e01020f0f1ce0
2013-07-01  Pierre-Marie de Rodat  <derodat@adacore.com>

	* dwarf2out.c (gen_subprogram_die): Accept symbol references for
	indirect calls.
	(dwarf2out_var_location): Set the symbol reference for compile-time
	known indirect call targets.
	* var-tracking.c (variable_tracking_no_opt_main,
	gate_handle_var_tracking_no_opt): New functions implement a new pass
	that just adds notes for indirect calls.
	* passes.c (init_optimization_passes): Invoke this new pass.
	* rtl.h (expensive_function_p): Declare its entry point.
	* tree-pass.h: Declare it.

[M523-035: gnatcov: labeling failure for postcondition on ppc-vx6]
(To be submitted)

commit 5ad37e696696370aae341126f91b34cef77d895c
commit 661a6982fa3e138d7a0df94792593a2a34ce7016
2013-07-01  Tristan Gingold  <gingold@adacore.com>

	* tree.h (CONSTRUCTOR_NOCLEAR): Define.
	* tree.def (CONSTRUCTOR): Document it.
	* gimplify.c (gimplify_init_constructor): Handle CONSTRUCTOR_NOCLEAR.

[M628-013: missing aggregate components are cleared]
(Installed in GCC 4.9 on 2013-11-11 - revision 204677)

revert-by 03963941a29e00cd1ea916e5e9296e878f689ae4
commit 4898d45f3dad923dd003f8fdc393fd182dd34e5c
2013-06-28  Douglas B Rupp  <rupp@adacore.com>

	* config/arm/elf.h: Remove libgcc hack.

[M622-003: Float/Fixed Point regressions on arm-vx6]
(Obsolete for GCC 4.7)

revert-by 6538e751555073c0184093167937fef85bc89644
commit b94af7578c9a5bb13acf982efceb05edd39dce95
2013-06-27  Eric Botcazou  <ebotcazou@adacore.com>

	* expmed.c (store_fixed_bit_field): Use the bitsize of the mode for the
	endianness correction in all cases.
	(extract_fixed_bit_field): Likewise.

[M614-029: aggregate for packed array of reverse SSO records]
(Obsolete for GCC 4.7)

commit 0795dea93664e905850d622de7a01f5b3cab354f
commit 2c3cef7c1c12e5441a4273319153480ce87f6378
commit 32a441401385985b72197a02df81ab7a0b9b051d
2013-06-27  Pierre-Marie de Rodat  <derodat@adacore.com>

	* Makefile.in: Add gli.o
	(c-family/c-xref.o): Add gli.h
	(scos.o): Add gli.h
	* gli.c: New file.
	* gli.h: New file.
	* c-family/c-xref.c (output_references, get_filenum): Use common GLI
	handling routines.
	* c-decl.c (c_write_global_declarations): Finalize GLI file handling.
	* scos.c (open_sco_file, emit_sco_header): Remove obsolete code.
	(generate_scos): Use common GLI handling routines.

[KC07-032: merge GLI files from -fdump-xref and -fdump-scos]
[M628-001: GPS: src_info testsuite completely broken today]
(To be submitted)

commit 2580836e9ebfb30922f28c316e9fca00a14d65d8
commit 34fb9d729d34e74c7d0ec97be3465dc4d6cdd258
commit a063ca399c3f7640a93a20484b90e1bb0249e388
2013-06-23  Eric Botcazou  <ebotcazou@adacore.com>

	* config.gcc (sparc*-*-*): Accept leon3 processor.
	(sparc-leon*-*): Merge with sparc*-*-* and add leon3 support.
	* doc/invoke.texi (SPARC Options): Document new leon3 processor value
	and adjust -mfix-ut699 entry.
	* config/sparc/sparc-opts.h (enum processor_type): Add PROCESSOR_LEON3.
	* config/sparc/sparc.opt (enum processor_type): Add leon3.
	(mfix-ut699): Adjust comment.
	* config/sparc/sparc.h (TARGET_CPU_leon3): New define.
	(CPP_CPU32_DEFAULT_SPEC): Add leon3 support.
	(CPP_CPU_SPEC): Likewise.
	(ASM_CPU_SPEC): Likewise.
	* config/sparc/sparc.c (leon3_cost): New constant.
	(sparc_option_override): Add leon3 support.
	(mem_ref): New function.
	(sparc_reorg): Enable if -mfix-ut699.  Look into the instruction in a
	delay slot and adjust accordingly.  Add fix for the data cache errata
	of the UT699.  Change insertion position for the NOP.
	* config/sparc/leon.md (leon_fpalu, leon_fpmds, write_buf): Delete.
	(leon3_load): New reservation.
	(leon_store): Bump latency to 2.
	(grfpu): New automaton.
	(grfpu_alu): New unit.
	(grfpu_ds): Likewise.
	(leon_fp_alu): Adjust.
	(leon_fp_mult): Delete.
	(leon_fp_div): Split into leon_fp_divs and leon_fp_divd.
	(leon_fp_sqrt): Split into leon_fp_sqrts and leon_fp_sqrtd.
	* config/sparc/sparc.md (cpu): Add leon3.
	* config/sparc/sync.md (atomic_exchangesi): Disable if -mfix-ut699.
	(swapsi): Likewise.
	(atomic_test_and_set): Likewise.
	(ldstub): Likewise.

[M611-032: implement workaround for LEON3FT Data Cache Errata]
(Installed in GCC 4.9 on 2013-07-22 - revision 201147)

commit 3539b55636b8c6d8a1e8ec32b095d23e84b69576
commit b7dae820108785a59d2084b5185b0ffb992408f6
commit a5ab53a1412d42fba9e30341ab23f6514ceda691
2013-06-18  Eric Botcazou  <ebotcazou@adacore.com>

	* config/arm/arm.c (arm_expand_prologue): In a nested APCS frame with
	arguments to push onto the stack and no varargs, save ip into the last
	stack slot if r3 isn't available on entry.

[M618-003: register r3 wrongly used to save ip in nested APCS frame]
(Installed in GCC 4.9 on 2013-12-20 - revision 206154)

commit 96bae14f781ae8fc428e5b0d4c2de80b0fa43243
commit 20a1dae302fdb43aac1ee3b4465c0e2b8117b17b
commit b4ee4ab326f0cfe44a1ef87a7774527dd9776262
2013-06-10  Eric Botcazou  <ebotcazou@adacore.com>

	* function.c (assign_parm_setup_reg): For a parameter passed by pointer
	and which can live in a register, always retrieve the value on entry.
	* var-tracking.c (add_stores): Treat the copy on entry for a parameter
	passed by invisible reference specially.
	(emit_notes_in_bb) <MO_VAL_USE>: Emit notes before the instruction.
	(vt_add_function_parameter): Correctly deal with a parameter passed by
	invisible reference.

[M610-010: string printing regression on multiple platforms]
(Installed in GCC 4.9 on 2013-08-30 - revision 202102)

commit f195605f63538ed91bbfd7077712bb2477d0a18c
2013-05-31  Eric Botcazou  <ebotcazou@adacore.com>

testsuite/
	* ada/acats/floatstore.lst: New.
	* ada/acats/run_all.sh: Process it.

[M529-004: cxg2021 fails at -O2 on i686]
(Installed in GCC 4.9 on 2013-05-31 - revision 199558)

commit 8757fad42c2d98c2f0ade421d9d253e83bcfda61
commit e6318abaaa6c27701caf6cff6266a678c135e1cb
2013-05-30  Jerome Guitton  <guitton@adacore.com>

	* config/rs6000/vxworks.h (LIB_SPEC): link against certRtp.o.
	* config/vxworks.h (VXWORKS_LIB_SPEC, VXWORKS_LIBGCC_SPEC)
	(VXWORKS_STARTFILE_SPEC): Remove libraries and start files
	from link on VxWorks 6 Cert.

[M213-025: link against the partially-linked object on vxcert]
[M602-007: continuation of the previous change]
(To be submitted)

commit 7eb444510438708c40922fc5586904998f6285f3
2013-05-29  Douglas B Rupp  <rupp@adacore.com>

	* config/arm/vxworks.h (TARGET_OS_CPP_BUILTINS): Refine ARMARCH7* CPU
	definitions.

[M523-045: Update arm-vxworks to armv7 architecture]
(To be submitted)

revert-by d48b370a3c8bc6b1c5b773927d38e4be39f02f0f
commit 62588f58aab71fc6096a45ca4fab8504246b670d
2013-05-28  Douglas B Rupp  <rupp@adacore.com>

	* config/arm/arm.c (FL_FOR_ARCH7A): Unset thumb2 flag.

[M523-045: Update arm-vxworks to armv7 architecture]
(Obsolete for GCC 4.7)

commit 4b7f8ba97e00802b22c5be453bc4b0b1eae264c2
commit 06efab7b39876c820276b3717e7043b0758fd958
2013-05-27  Thomas Quinot  <quinot@adacore.com>

	Bring in FreeBSD AMD64 support from GNAT AUX.
gcc/
	* config/i386/freebsd.h: Define TARGET_96_ROUND_53_LONG_DOUBLE to 0.
	Define HAVE_ENABLE_EXECUTE_STACK.
libgcc/
	* config/i386/freebsd-unwind.h: Robust sysctl-based unwinder.
	* config.host (i*86-*-freebsd, x86_64-*-freebsd):
        Define md_unwind_header.

[K518-022: building for x86_64-freebsd]
(To be submitted)

commit 3aea3e04369dbe522d363a345ee4ce5667ce0502
2013-05-24  Douglas B Rupp  <rupp@adacore.com>

	* config/ia64/vms.h (SUBTARGET_OVERRIDE_OPTIONS): Remove
	dwarf_version = 3. Keep only strict_dwarf.

[L926-031: Default to strict dwarf on IVMS]
(To be submitted)

commit 6de60642ca1765355eba17572d0fd560f9f8895a
2013-05-23  Douglas B Rupp  <rupp@adacore.com>

	* config/arm/t-vxworks (MULTILIB_OPTIONS): Add t7* libs.
	* config/arm/vxworks.h (TARGET_OS_CPP_BUILTINS): Add ARMARCH7* CPU
	definitions.
	(CC1_SPEC): Add t7 switches.
	* config/arm/vxworks.opt: Add t7* options.

[M523-045: Update arm-vxworks to armv7 architecture]
(To be submitted)

commit e8ac44c8370aa5d650ca89b2ba98c9ae3056d89c
commit 13eeb2e477e59a193137728bccd291fdf1688bee
2013-05-22  Douglas B Rupp  <rupp@adacore.com>

gcc/
	* config/arm/vxworks.h (CLEAR_INSN_CACHE): Define as not used.
libgcc/
	* config/arm/lib1funcs.S (_clear_cache) [__vxworks]: New function.
	* config/arm/t-vxworks (LIB1ASMFUNCS): Add _clear_cache.

[M506-002: implement clear_cache for ARM VxWorks to fix trampolines]
(To be submitted)

commit 39ef21982c273f1fc7a9cc88beb1e674d9893292
revert-by c6a6bf8c6ba655b1a6b066a3eb8b4bc96cb96917
commit 2673e0865e90fc667cfcc5ac654405ac827ecd25
commit 0a81fdac6f36c998c8395e833b9bb952b3ba6fe8
commit 126f4313d2fd88d214e7e5658e14a6dd0f2c5168
commit a3cb372c409d5864a650300e868e6a586e51590e
commit 574888ca692d8d9835ed2ad07b1ba6ced1d846fa
commit 3367256d14f97193b34c592a4b5ad909ca969744
commit 72bb0da95dfb10d610c8787bc7bc4e346e066d01
commit 67ea68f49c42ee4d2634f71cdd5f12af6c1d391e
commit 8aa74d346581714235fddba1e51231d24912c4e8
2013-05-17  Eric Botcazou  <ebotcazou@adacore.com>

	* config/arm/linux-elf.h (STACK_CHECK_STATIC_BUILTIN): Define.
	* config/arm/arm-protos.h (output_probe_stack_range): Declare.
	* config/arm/arm.c: Include common/common-target.h.
	(use_return_insn): Return 0 if the static chain register was saved
	above a non-APCS frame.
	(arm_compute_static_chain_stack_bytes): Adjust for stack checking.
	(arm_output_epilogue): Add the saved static chain register, if any, to
	the set of pre-pushed registers to unwind for a non-APCS frame.
	(struct scratch_reg): New.
	(get_scratch_register_on_entry): New function.
	(release_scratch_register_on_entry): Likewise.
	(arm_emit_probe_stack_range): Likewise.
	(output_probe_stack_range): Likewise.
	(arm_expand_prologue): Factor out code dealing with the IP register
	for nested function and adjust it for stack checking.
	Invoke arm_emit_probe_stack_range if static builtin stack checking
	is enabled.
	(thumb1_expand_prologue): Sorry out if static builtin stack checking
	is enabled.
	(arm_frame_pointer_required): Return true if static stack checking is
	enabled and we want to catch the exception with the EABI unwinder.
	* config/arm/arm.md (UNSPEC_PROBE_STACK): New constant.
	(UNSPEC_PROBE_STACK_RANGE): Likewise.
	(probe_stack): New insn.
	(probe_stack_range): Likewise.

[M304-033: implement STACK_CHECK_STATIC_BUILTIN for ARM]
(Submitted at http://gcc.gnu.org/ml/gcc-patches/2013-06/msg01421.html)

commit b7400771e58f4ebf276975e3a6803433e79d7578
2013-05-15  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 192713
	* config/mips/linux.h (STACK_CHECK_STATIC_BUILTIN): Define.
	(STACK_CHECK_PROTECT): Likewise.
	* config/mips/linux64.h (STACK_CHECK_STATIC_BUILTIN): Define.
	(STACK_CHECK_PROTECT): Likewise.
	* config/mips/mips.h (MIPS_PROLOGUE_TEMP2_REGNUM): Likewise.
	(MIPS_PROLOGUE_TEMP2): Likewise.
	* config/mips/mips-protos.h (mips_output_probe_stack_range): Declare.
	* config/mips/mips.c: Include common/common-target.h.
	(mips_emit_probe_stack_range): New function.
	(mips_output_probe_stack_range): Likewise.
	(mips_expand_prologue): Invoke mips_emit_probe_stack_range if static
	builtin stack checking is enabled.
	* config/mips/mips.md (UNSPEC_PROBE_STACK_RANGE): New constant.
	(probe_stack_range_<P:mode>): New insn.

[M515-006: backport STACK_CHECK_STATIC_BUILTIN support for MIPS]
(Already in GCC 4.8)

commit eeaddf939d2e6160d7e045a250220a8cc8454c31
2013-05-15  Eric Botcazou  <ebotcazou@adacore.com>

	* config/arm/arm.c (arm_r3_live_at_start_p): New predicate.
	(arm_compute_static_chain_stack_bytes): Use it.  Tidy up.
	(arm_expand_prologue): Likewise.

[M503-016: add stack checking support to ARM/VxWorks]
(Installed in GCC 4.9 on 2013-06-06 - revision 199752)

commit 6cdb847905c7d465c7f97daae53411f6b9b12dc0
2013-05-14 Douglas B Rupp  <rupp@adacore.com>

	* config/ia64/vms.h (SUBTARGET_OVERRIDE_OPTIONS): New macro.
	* config/ia64/ia64.c (ia64_option_override): Call it if defined.

[L926-031: Default to strict dwarf-3 on IVMS]
(To be submitted)

revert-by ec2abeeaf0212d8e5c8781f38330c41722e9a80b
commit cd8f52550b56bf574288fc7c824717b5e8af409e
2013-05-14  Tristan Gingold  <gingold@adacore.com>

	* config/i386/darwin.h (STACK_CHECK_PROTECT): Define.

[M318-004: Missing back-port for darwin]
[MA21-026: Improve stack-checking on darwin]
(Obsolete for GCC 4.7)

revert-by 6d545ab0612f31ed9d9c2f2491532ffe76dddfc1
commit c9e3d7346ac9c22184a0155bf4d8b67b6cb88edc
2013-05-05  Douglas B Rupp  <rupp@adacore.com>

	* gcc.c (execute) [VMS]: Remove ifdef disabling -pipe.

[M505-003: Enable gcc -pipe on VMS]
(Obsolete for GCC 4.7)

commit 3722518ca0c5533502ab628d8e37cf2ceed7622e
2013-04-22  Eric Botcazou  <ebotcazou@adacore.com>

	* final.c (final_scan_insn): Remove obsolete assertion.

[M422-047: improve scheduling on the LMP]
(To be ported)

revert-by 4d3d877c0f2e49f10b0c50462ab61fc7f634e341
commit 237305e5e42e29f3aa3f090be29fe50d0813978d
2013-04-09  Douglas B Rupp  <rupp@adacore.com>

libgcc/
	* config.host (arm-wrs-vxworks): Configure with other soft float.

[M328-001: Fix for broken floating point]
(Installed in GCC 4.7 on 2013-06-06 - revision 199749)

commit 1420938b82d28a58cc75d2202a0ec45a5f773cfe
2013-04-09  Douglas B Rupp  <rupp@adacore.com>

	* config/arm/vxworks.h (VXWORKS_ADDITIONAL_CPP_SPEC): Add path to
	IP header files.

[M409-052: Path to IP header files]
(To be submitted?)

revert-by 124ba921aa6b3dbe4ed3465fa0447ede082cf10f
commit 90e490a81ff8006dbf55edf0717ba9bc7ad983c4
commit 31faae28e1497fdbcda97e6a0e3393a1f1f254c0
2013-04-08  Eric Botcazou  <ebotcazou@adacore.com>

	* Makefile.in (postreload.o): Add $(PARAMS_H).
	* postreload.c: Include params.h.
	(reload_cse_simplify): Do not pass CSELIB_RECORD_MEMORY to cselib if
	the number of potential memory locations visited per basic block is
	gigantic.
	* sched-rgn.c (disable_schedule_if_too_large): New function.
	(find_single_block_region): Call it on every basic block.
	(haifa_find_rgns): Likewise.

[M405-027: M403_014 takes a very long time on IA-64 platforms]
(Obsolete for GCC 4.7)

commit 7f9311dfdc227567bc7fd9a6132e02863aafea56
commit 0dd3d9ab09dcfab337a3d224848a177bddcfbd42
commit 270de5f3556269963750ef66133424c26432ed19
commit 8813dc402d8a151c548e955011d6d45600406c3e
commit cc08ece1d30b405d3210b7ca21a66cf5427ee70f
commit b6af898c70a48dda6d2686a048f14f23b23afd37
revert-by f778010e482d3c92a12f82d66bdef264f552abfe
commit bbc5ddf17c683e1a0d5edcb535d3e5fa230ef83d
commit 2dd796983cf8aa8f809512a53ae06a63d9bc375a
commit 08b6db931d6811d6e9203e401fc39fdcd1f664a8
commit 71d1fc78a7dd638918796a3901b5d7755482296f
commit 0144ebb39b89c5983b2cf950c3542a915f8fc8b8
commit 1f35592ef6b3a86a6ed797a4edc3878b3fabe4f5
commit 78279affb42364088d0528136a67cf1900ad4312
commit ae5308958f731bee9d1c257a425c2dcbf305b092
commit 04d8b6a7078a598582394010694fe22ab32eb0b6
commit 348fb76df8918befa35d5938fdb7e2708deb032d
commit b19d1fb0d020d9270e46711028d152eb5b045d90
commit 843635fd297478eaa937168a1ae260c803797c46
commit a23cabe6a15e91b7770665bac9e15ff1acd8ba28
commit 1f79b2643cf9daab3ef28aa55fde05863af6e1f8
commit e7f64942f60e0423af1022fb589e27fbb6b51ba3
2013-04-08  Pierre-Marie de Rodat  <derodat@adacore.com>

	* scos.h: Complete rewriting.
	* scos.c: Complete rewriting.
	* toplev.c: Enable extra slocs when -fdump-scos.
	* c-common.h (build_binary_op_with_locs): New.
	* c-typeck.c (build_binary_op_with_locs): New.
	(build_binary_op): Call build_binary_op_with_locs.
	(parser_build_binary_op): Add arguments to pass to
	build_binary_op_with_locs.
	* c-tree.h (parser_build_binary_op): Adjust prototype.
	* c-parser.c (c_parser_build_expression): Adjust call to
	parser_build_binary_op.

[M306-044: generate complete SCOs for C]
(To be submitted)

commit 3d537878fc7a7df1ad061a9863a5e364a9f5807b
2013-04-07  Eric Botcazou  <ebotcazou@adacore.com>

	* stor-layout.c (skip_simple_constant_arithmetic): Move to...
	* tree.c (skip_simple_constant_arithmetic): ...here and make public.
	(skip_simple_arithmetic): Tidy up.
	* tree.h (skip_simple_constant_arithmetic): Declare.

[M404-026: undefined reference at link time for array size symbol]
(Installed in GCC 4.9 on 2013-04-11 - revision 197815)

revert-by d31ab6cdd744ec19ae6d57b9ba9238b10afa4189
commit 79e276bc67c55dbd91de29afb9006418b120349a
2013-04-05  Olivier Hainque  <hainque@adacore.com>

	* sched-deps.c (add_dependence_list_and_free): Simplify.
	(flush_pending_list_and_free): Fix a hack that was fixing a hack.
        Free lists when add_dependence_list_and_free doesn't free them.

[M404-046: compiler SEGV compiling qemu monitor.c]
(Already in GCC 4.7)

commit 7f90face62e4ae2a48583143b4819491db36e40c
commit 64040e54761be2f877ff0a18e48abc2d9349a299
2013-04-05  Eric Botcazou  <ebotcazou@adacore.com>

	* cgraph.c (cgraph_create_virtual_clone): Compute the DECL_NAME of the
	clone from the DECL_NAME of the original function.
testsuite/
	* gcc.dg/tree-ssa/ipa-cp-1.c: Adjust regexp.

[M404-037: bogus subprog name in stack-usage file with constprop]
(Installed in GCC 4.9 on 2013-08-29 - revision 202086)

commit 882907643a37516cc4197f8836a23353e1d3d2da
2013-04-04  Eric Botcazou  <ebotcazou@adacore.com>

	* rtl.h (update_alignments): Declare.
	* final.c (grow_label_align): New function extracted from...
	(shorten_branches): ...here.  Call it.
	(update_alignments): New function.
	* reorg.c (sibling_labels): New variable.
	(get_label_before): Add SIBLING parameter.  If it is non-zero, push
	the new label along with it onto the sibling_labels vector.
	(fill_simple_delay_slots): Adjust call to get_label_before.
	(fill_slots_from_thread): Likewise.
	(relax_delay_slots): Likewise.
	(make_return_insns): Likewise.
	(dbr_schedule): Invoke update_alignment on the sibling_labels vector.

[M213-053: first C testsuite results for the LMP]
(Installed in GCC 4.9 on 2013-08-07 - revision 201575)

commit ca232e89a231672ec3bfe6216f0d2e5e99089efe
2013-04-04  Olivier Hainque  <hainque@adacore.com>

	* cfgexpand.c (defer_stack_allocation): When optimizing, defer
	allocation of DECL_IGNORED decls unless really small.  Factorize
	the size threshold computation with the one already issued for
	the !optimize case.
	(expand_used_vars): Refine comment about variables not associated
	with any blocks reaching here.

[M319-027: abnormal stack usage with case stmt and aggregates]
(Installed in GCC 4.9 on 2013-11-14 - revision 204830)

commit ed565f6e65621ac8aac45c17df94fedb23aedb25
2013-04-02  Nicolas Roche  <roche@adacore.com>

	* Makefile.in: Ensure INSTALL, INSTALL_DATA, INSTALL_SCRIPT and
	INSTALL_PROGRAM are propagated to recursive make invocations.

[L921-018: executable non stripped on installation]
(To be submitted)

commit 5ea263b491b8bc1e9193331e2753a593571b4751
2013-03-22  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-dfa.c (add_referenced_var): Find variables referenced in the
	initializers of global variables declared in parent functions.

[M320-056: crash on exception referenced in nested package at -O]
(Obsolete for GCC 4.8)

commit 2c96b6f287a3bead766c9e3e7fbe15ececd42e57
commit d9eb41cff3c1f99feaf67fe3cd6a9bc3f2aaa018
commit df453a85a288ed7d6e439d1e7e3391655bc312cb
2013-03-13  Eric Botcazou  <ebotcazou@adacore.com>

	* config/arm/arm.md (thumb1_zero_extendhisi2): Add pool_range and
	neg_pool_range attributes.
	(arm_zero_extendhisi2): Likewise.
	(arm_zero_extendhisi2_v6): Likewise.
	(thumb1_zero_extendqisi2_v6): Likewise.
	(arm_zero_extendqisi2): Likewise.
	(arm_zero_extendqisi2_v6): Likewise.

[M220-001: run C testsuite for the ARM]
(Submitted at http://gcc.gnu.org/ml/gcc-patches/2013-03/msg00939.html)

commit 1a7950eebf58a002d14262ea8bb203a4dca6e80d
2013-03-13  Eric Botcazou  <ebotcazou@adacore.com>

	* calls.c (expand_call): Add missing guard to code handling return
	of non-BLKmode structures in MSB.
	* function.c (expand_function_end): Likewise.

[M220-001: run C testsuite for the ARM]
(Installed in GCC 4.9 on 2013-03-23 - revision 197003)

commit 18c4779b76e4da5c692530e97076feb437770798
2013-03-13  Eric Botcazou  <ebotcazou@adacore.com>

	* combine.c (try_combine): Adjust comment.  Do not add the set of
	insn #0 if the destination indirectly is set or dies in insn #2.
	Tidy up code to distribute a new note.

[M220-001: run C testsuite for the ARM]
(Installed in GCC 4.9 on 2013-03-23 - revision 197002)

commit ed5ddad40faeebb84b1ba9768f4d67196bbc0d91
2013-03-12  Eric Botcazou  <ebotcazou@adacore.com>

	* config/rs6000/predicates.md (rs6000_cbranch_operator): Accept some
	unordered comparison operators when -fno-trapping-math is in effect
	on the e500.
	* config/rs6000/rs6000.c (rs6000_generate_compare): Remove dead code
	and implement unordered comparison operators properly on the e500.

[E117-003: coordinate FE and BE floating-point settings]
(Installed in GCC 4.9 on 2013-05-31 - revision 199557)

commit 44def25d951042771a3cbd8605bc73478136d4b4
2013-03-10  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/sparc.c (sparc_emit_probe_stack_range): Fix small
	inaccuracy in the probing code.

	* config/sparc/sparc.md (ctrapsi4): Add predicate for operand #3.
	(ctrapdi4): Likewise.

[M304-035: need STACK_CHECK_STATIC_BUILTIN with limits for SPARC]
(Installed in GCC 4.9 on 2013-03-23 - revision 197003)

commit 1cc9c78545919e41fa4e7e4ff8ac9a707a072cf2
commit 65db1d6bb1e2b752f7fb7bb9b250c4cbce14535
2013-03-09  Eric Botcazou  <ebotcazou@adacore.com>

	* config/ia64/predicates.md (ia64_cbranch_operator): Accept unordered
	comparison operators when -fno-trapping-math is in effect.
	* config/ia64/ia64.c (ia64_expand_compare): Add support for unordered
	comparison operators in TFmode and assert that unsupported operators
	cannot reach here.
	(ia64_print_operand): Likewise.

[E117-003: coordinate FE and BE floating-point settings]
(Installed in GCC 4.9 on 2013-09-21 - revision 202814)

commit c71399b4fcd4dff0752aa35aec21ee861cd03561
2013-03-05  Douglas B Rupp  <rupp@adacore.com>

	* config/vms/vms-ld.c (process_args): Remove duplicate .map extension.

[LA16-053: on VMS -map switch produces a file a double extension]
(To be submitted)

commit dff9ea08e30c401b5f09bd169a308b12ced680db
2013-03-04  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/sparc-protos.h (widen_mem_for_ldd_peep): Declare.
	(registers_ok_for_ldd_peep): Move around.
	* config/sparc/sparc.c (widen_mem_for_ldd_peep): New.
	* config/sparc/sparc.md (widening peepholes): Use it.

[M304-047: internal error for g-awk.adb at -O2 on SPARC/Solaris]
(Installed in GCC 4.9 on 2013-10-14 - revision 203518)

commit 50a7adef9483f90d5b54bd900e2399a4374793a4
commit 53840acbd89d2294afdcba5ccbdfcacfc378fd3d
commit 2aa6e30c385fc1529555c8537056f41b999a63ed
2013-03-03  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-inline.h (struct copy_body_data): Add transform_parameter.
	* tree-inline.c (is_parameter_of): New predicate.
	(remap_gimple_op_r): Do not propagate TREE_THIS_NOTRAP on MEM_REF if
	a parameter has been remapped.
	(copy_tree_body_r): Likewise on INDIRECT_REF and MEM_REF.  Deal with
	missing flags for the latter.
	(optimize_inline_calls): Initialize transform_parameter.
	(unsave_expr_now): Likewise.
	(copy_gimple_seq_and_replace_locals): Likewise.
	(tree_function_versioning): Likewise.
	(maybe_inline_call_in_expr): Likewise.

[M301-002: wrong code for access comparison to null at -O or above]
(Installed in GCC 4.9 on 2013-09-17 - revision 202647)

commit 61e5208aaafba26d432b48afeb09532c42d05be6
commit b642e40c3aa1ae6c9fa9bf15d2b3bf694e45af0a
commit c811fb7acc8ac3233bf0349e20d2e115148ecd63
2013-02-26  Douglas B Rupp  <rupp@adacore.com>

	* config/vms/vms-ld.c (inhibit_exec): Change default to match
	VMS LINK default of preserve executable after linker warnings.

[M129-032: Bogus warnings from VMS LINK]
(To be submitted)

revert-by 0fc6be48b423a6db56923ebf7905f9a12af0acdb
commit 958dcb827ddd0f12544b8e0921b8a2f37795c513
commit ba6d91c171c988d76d36e5102b0a03a272871d8b
2013-02-26  Ramon Fernandez  <fernandez@adacore.com>

	* config/rs6000/lynx-xcoff.h (LINK_SPEC): Remove /lib to avoid
	using the system's libgcc.
	(LIB_SPEC): Add /lib so it's available for users.

[M222-038: LynxOS-178: change default libgcc]
(Obsolete for GCC 4.7)

commit 4e8f497ef8c9af497c9098928fd95fe97ba8fb44
2013-02-15  Eric Botcazou  <ebotcazou@adacore.com>

	* reorg.c (get_branch_condition): Deal with conditional returns.
	(fill_simple_delay_slots): Remove dead code dealing with jumps.

[M213-053: first C testsuite results for the LMP]
(Installed in GCC 4.9 on 2013-04-02 - revision 197340)

revert-by 9286e511ef4a1b862284d2f86e701fa117c89ae7
commit 8e526cb3fe4c15f9c3bb32b65f7795b4cef37e32
2013-02-15  Eric Botcazou  <ebotcazou@adacore.com>

	* toplev.c (process_options): Do not disable -fomit-frame-pointer on a
	general basis if unwind info is requested and ACCUMULATE_OUTGOING_ARGS
	is not enabled.
	* ira.c (ira_setup_eliminable_regset): Instead disable it only on a per
	function basis if the stack pointer is not unchanging in the function.

[M213-053: first C testsuite results for the LMP]
(Obsolete for GCC 4.7)

commit 16d4e1effc7520fdd10cf4ed27b07568657797b8
2013-02-15  Eric Botcazou  <ebotcazou@adacore.com>

	* function.c (emit_use_return_register_into_block): On cc0 targets,
	do not emit the sequence between cc0 setter and user.
	* postreload.c (reload_combine): Fix code detecting returns.

[M213-053: first C testsuite results for the LMP]
(Installed in GCC 4.9 on 2013-03-25 - revision 197036 & 197037)

commit 77cb6ac2aae7a48595ac6d873ed71fc118232bec
2013-02-15  Eric Botcazou  <ebotcazou@adacore.com>

testsuite/
	* gcc.c-torture/execute/20011008-3.c: Cap VLEN with STACK_SIZE too.

[M213-053: first C testsuite results for the LMP]
(Installed in GCC 4.9 on 2013-03-26 - revision 197125)

commit 7e6d42f4dcc14730b0fdd372f2b01992ac9f6fb4
commit a327e6e5e5d83ecea5433c678a350a617d7ca2c9
commit ce3882c1d5ac5909ea9caededfa67910aff414e1
2013-02-07  Eric Botcazou  <ebotcazou@adacore.com>

libgcc/
	* config/sparc/sol2-unwind.h (sparc64_frob_update_context): Do it for
	signal frames as well.
	(MD_FALLBACK_FRAME_STATE_FOR): Add the STACK_BIAS to the CFA offset.
	Do not set fs->signal_frame for SIGFPE raised for IEEE-754 exceptions.
	* config/i386/sol2-unwind.h (x86_fallback_frame_state): Likewise.

[M205-038: trap on divide-by-zero not properly caught on Solaris]
(Installed in GCC 4.9 on 2013-05-28 - revision 199381)

commit a4bcdeffb0569ab9dc227fb95a80549b4e06d477
2013-02-04  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 195721
	* config/i386/i386.c (function_value_ms_64): Add additional valtype
	argument and improve checking of return-argument types for 16-byte
	modes.
	(ix86_function_value_1): Add additional valtype argument on call
	of function_value_64.
	(return_in_memory_ms_64): Sync 16-byte sized mode handling with
	handling infunction_value_64 function.

[M201-027: GDB: finish fails in fun returning array of integers]
(Already in GCC 4.8)

commit 81920a3218e3a923f32ace9d2ef5bf1d314c3ecc
2013-02-03  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (fixup_limbo_list): New function extracted from...
	In LTO mode, iterate until the list is fully drained.
	(dwarf2out_finish): ...here.  Call it both after regular processing
	and after the call to resolve_addr in LTO mode.

[L925-028: fix LTO bootstrap failure with --disable-libada]
(To be ported)

commit 81920a3218e3a923f32ace9d2ef5bf1d314c3ecc
2013-02-03  Eric Botcazou  <ebotcazou@adacore.com>

lto/
	* lto.c (lto_register_var_decl_in_symtab): Do not change the assembler
	name in LTRANS mode.  Do not call rest_of_decl_compilation here.

[L925-028: fix LTO bootstrap failure with --disable-libada]
(Obsolete for GCC 4.9)

commit 7e2933d18ed3c642d40cda521e45d198f7a91b88
commit e3ac45703db70ab926d87b8023295438b0001ba6
commit 323f8a813ba178afc8cf32f0814650047761817f
commit 0343cc4e615d7a91d51dedfbd36c7fdc49f83071
commit aeb2f247203316729ab52d27297fa1c902105a5e
2013-01-29  Eric Botcazou  <ebotcazou@adacore.com>

	* alias.c (nonoverlapping_component_refs_p): Protect again LTO glitch.
	* tree-ssa-alias.c (nonoverlapping_component_refs_of_decl_p): New.
	(decl_refs_may_alias_p): Add REF1 and REF2 parameters.
	Use nonoverlapping_component_refs_of_decl_p to disambiguate component
	references.
	(refs_may_alias_p_1): Adjust call to decl_refs_may_alias_p.
	* tree-streamer.c (record_common_node): Adjust reference in comment.
testsuite/
	* gcc.dg/vect/slp-24-big-array.c: Beef up anti-vectorization trick.
	* gcc.dg/vect/slp-24.c: Likewise.
	* gcc.dg/vect/vect-strided-a-mult.c: Likewise.
	* gcc.dg/vect/vect-strided-a-u16-i2.c: Likewise.
	* gcc.dg/vect/vect-strided-a-u16-i4.c: Likewise.
	* gcc.dg/vect/vect-strided-a-u16-mult.c: Likewise.
	* gcc.dg/vect/vect-strided-a-u8-i2-gap.c: Likewise.
	* gcc.dg/vect/vect-strided-a-u8-i8-gap2-big-array.c: Likewise.
	* gcc.dg/vect/vect-strided-a-u8-i8-gap2.c: Likewise.
	* gcc.dg/vect/vect-strided-a-u8-i8-gap7-big-array.c: Likewise.
	* gcc.dg/vect/vect-strided-a-u8-i8-gap7.c: Likewise.
	* gcc.dg/vect/vect-strided-mult-char-ls.c: Likewise.
	* gcc.dg/vect/vect-strided-mult.c: Likewise.
	* gcc.dg/vect/vect-strided-same-dr.c: Likewise.
	* gcc.dg/vect/vect-strided-u16-i2.c: Likewise.
	* gcc.dg/vect/vect-strided-u16-i4.c: Likewise.
	* gcc.dg/vect/vect-strided-u32-i4.c: Likewise.
	* gcc.dg/vect/vect-strided-u32-i8.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i2-gap.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i2.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i8-gap2-big-array.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i8-gap2.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i8-gap4-big-array.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i8-gap4-unknown.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i8-gap4.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i8-gap7-big-array.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i8-gap7.c: Likewise.
	* gcc.dg/vect/vect-strided-u8-i8.c: Likewise.

[M129-026: internal error on variable with discriminated type at -O]
(Installed in GCC 4.9 on 2013-04-17 - revision 198024)

commit 1742e5356a11455a8f2867a8f58518500ccca1e1
2013-01-19  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 193815
	* tree.h (DECL_RESTRICTED_P): Delete.
	(DECL_READ_P): Add comment.
	(DECL_NONSHAREABLE): Likewise.
	(TYPE_NO_FORCE_BLK): Fix comment.
	(struct tree_decl_common): Remove decl_restricted_flag, add decl_flag_3.
	* tree-emutls.c (new_emutls_decl): Do not deal with DECL_RESTRICTED_P.
	* tree-streamer-in.c (unpack_ts_decl_common_value_fields): Likewise.
	* tree-streamer-out.c (pack_ts_decl_common_value_fields): Likewise.
fortran/
	* trans-decl.c (gfc_finish_var_decl): Do not set DECL_RESTRICTED_P.

[LB08-028: optimization of null pointer checks for by-ref type]
(Already in GCC 4.8)

commit b4e52d4134e2be33c8d5b9b5049bca8b966c2c98
2013-01-18  Olivier Hainque  <hainque@adacore.com>

	* config/i386/lynx.h (USE_IX86_FRAME_POINTER): Define to 1.

[M107-029: SEGV on x86-lynx traceback computation]
(Superseded by change on gcc 4.9 branch)

commit 5e7f61f5712c6946662fdf0bf7ba696c87e4edba
2013-01-17  Eric Botcazou  <ebotcazou@adacore.com>

	* basic-block.h (EDGE_LOOP_NO_UNROLL): New define.
	(EDGE_LOOP_UNROLL): Likewise.
	(EDGE_LOOP_NO_VECTOR): Likewise.
	(EDGE_LOOP_VECTOR): Likewise.
	(EDGE_LOOP_HINTS): Likewise.
	* cfghooks.c (split_edge): Propagate loop hints onto the new edge.
	* cfgloop.h (struct loop): Make boolean fields bitfields, replace,
	estimate_state with estimate_available and add optimization hints.
	* cfgloop.c (flow_loops_find): For loop with a single latch edge,
	set the loop hints from the latch edge.
	* cfgrtl.c (rtl_verify_flow_info_1): Robustify test.
	* gimple.h (enum gf_mask): Add GF_GOTO_LOOP_* values.
	(gimple_goto_loop_no_unroll_p): New accessor.
	(gimple_goto_set_loop_no_unroll): Likewise.
	(gimple_goto_loop_unroll_p): Likewise.
	(gimple_goto_set_loop_unroll): Likewise.
	(gimple_goto_loop_no_vector_p): Likewise.
	(gimple_goto_set_loop_no_vector): Likewise.
	(gimple_goto_loop_vector_p): Likewise.
	(gimple_goto_set_loop_vector): Likewise.
	* gimplify.c (gimplify_expr) <GOTO_EXPR>: Propagate loop hints.
	* loop-unroll.c (decide_unrolling_and_peeling): Handle hints.
	(decide_peel_once_rolling): Likewise.
	(decide_peel_completely): Likewise.  Fix broken logic.
	* tree-cfg.c (make_goto_expr_edges): Propagate loop hints.
	* tree-cfgcleanup.c (remove_forwarder_block): Propagate loop hints onto
	the forwarded edges.
	* tree-ssa-loop-ivcanon.c (try_unroll_loop_completely): Handle hints.
	(tree_unroll_loops_completely): Likewise.
	* tree-ssa-loop-niter.c (estimate_numbers_of_iterations_loop): Adjust
	for renaming of struct loop field.
	(free_numbers_of_iterations_estimates_loop): Likewise.
	* tree-vect-loop.c (vect_analyze_loop_operations): Handle hints.
	(vect_analyze_loop): Likewise.
	* tree.h (GOTO_LOOP_NO_UNROLL): New flag.
	(GOTO_LOOP_UNROLL): Likewise.
	(GOTO_LOOP_NO_VECTOR): Likewise.
	(GOTO_LOOP_VECTOR): Likewise.

[L914-008 : implement pragmas to control loop optimizations]
(Superseded by change on gcc-4.9 branch)

revert-by d95fe0c7ebeac8b4b43cf80a95c9d2d4547c66cd
commit 1eed9a5504fcaafe336a655720acf7cd6103e81f
2013-01-17  Eric Botcazou  <ebotcazou@adacore.com>

	* fold-const.c (make_range_step) <TRUTH_NOT_EXPR>: Bail out if the
	range isn't testing for zero.

[M111-011: bogus overflow exception raised for bit shift with -O]
(Installed in GCC 4.7 on 2013-02-01 - revision 195643)

commit edfef7fc3de8a9f0ae6e180d5211fc1e87386afe
2013-01-16  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 193094
	* basic-block.h (EDGE_ABNORMAL_CALL): Fix comment.
	* cfgrtl.c (rtl_verify_flow_info_1): Adjust error messages.
	Deal with EDGE_SIBCALL and fix the EDGE_ABNORMAL check.

[L914-008 : implement pragmas to control loop optimizations]
(Already in GCC 4.8)

commit 445c254657b0827217b997200fd83c62d68a2dcf
2013-09-25  Eric Botcazou  <ebotcazou@adacore.com>

	* doc/md.texi (Machine constraints): Document 'l' for the LMP.
	* config/lmp/*: arrange to restrict usage of r31 as required for gr6.

[M430-007: restrict usage of r31 for branches on lmp/gr6]
(To be ported)

commit 3ac11bae63d87c2df52c4748c267a9c2ee630af5
2013-09-22  Eric Botcazou  <ebotcazou@adacore.com>

	* doc/md.texi (Machine constraints): Add LMP section.
	* config/lmp/constraints.md: Minor tweaks throughout.
	* config/lmp/lmp.md: Adjust.

[M218-001: fix various pessimizations in the LMP back-end]
(To be ported)

revert-by 22c31536526c62f64c2944e98b489e1e398ebd54
commit ccfb2ecc993dcfd2ba9182ac0df78e32573993f4
2014-02-27  Olivier Hainque  <hainque@adacore.com>

	* <placeholder>: introduce and document -mnosys.

[M116-038: flexible zfp rts for lmp]
[M507-039: rely on newlib for lmp]
[N227-050: lmp-elf transition to gcc-4.9]
(Obsolete for GCC 4.9)

commit 0bccb9a98d3155618ca1476c90c5ae7531ed0234
2013-09-23  Eric Botcazou  <ebotcazou@adacore.com>

gcc/
	* config/lmp/*: Introduce -mcpu=gr6 + bmd/bmi support.
	* doc/invoke.texi (LMP options): Adjust description of -mcpu=gr6.
	* doc/md.texi (Machine constraints): Document t, u, v for the LMP.
libgcc/
	* config/lmp/*memcpy*: Cleanup & leverage the block move insns.

[M729-014: support for the lmp/gr6 block move insns]
(To be ported)

commit 87d3e998db1dd947f198bbef2d8a74f2be0ccaa8
2013-03-05  Eric Botcazou  <ebotcazou@adacore.com>

	* configure.ac (dwarf2 debug_line support): Enable for LMP.
	* configure: Regenerate.

[M116-035: lmp (aec gr5/gr6) toolchain]
(To be ported)

revert-by d02289aeb3047db3e0a9c2b5225509cf05506c99
commit 8d5bd86d6f1270d5dca55e11c62f0a43106ddd53
2013-03-09  Eric Botcazou  <ebotcazou@adacore.com>

	Temporary experimental changes.

(Obsolete for GCC 4.7)

commit 89e06aa154fe86171b0e9557ad1cc85639475efd
2013-02-15  Eric Botcazou  <ebotcazou@adacore.com>

libgcc/
	* config.host (lmp-*-elf*): Re-enable double FP support.

[M116-035: lmp (aec gr5/gr6) toolchain]
(To be ported)

commit 6fc3219f5c25426f1ae39eff5172ebae62fe71a2
2013-02-08  Eric Botcazou  <ebotcazou@adacore.com>

	* doc/invoke.texi (Submodel Options): Document LMP options.
	* config/lmp/*: Introduce gr5 and gr6 cpu values. Refinements to
	lmp options processing.

[M123-010: introduce -mcpu=gr5/gr6 into the lmp port]
(To be ported)

commit 74e432d8ab8c72b186087dfcaf45f1d0fb7e7ad8
2013-02-01  Eric Botcazou  <ebotcazou@adacore.com>

libgcc/
	* config.host (lmp-*-elf*): Add t-fpbit to tmake_file.
	* config/lmp/t-lmp: Remove obsolete stuff.
gcc/
	* config/lmp/*: Cleanups.

[M116-035: lmp (aec gr5/gr6) toolchain]
(To be ported)

commit /lmp/
2014-02-27  Eric Botcazou  <ebotcazou@adacore.com>
            Olivier Hainque  <hainque@adacore.com>

	* <placeholder>: extra bits local to lmp only files.

[MC03-050: transition to gcc-4.9]
(To be ported)

commit 0f6a006b34c5100bfadaf66b075ce9a25deab911
2013-01-10  Olivier Hainque  <hainque@adacore.com>

	* config.sub: Recognize "lmp" and "lmp-*".
gcc/
	* config.gcc: Handle lmp-*-elf.
	* config/lmp: New subdir. Base LMP port from AEC, post quick cleanup.
libgcc/
	* config.host: Handle lmp-*-elf.
	* config/lmp: New subdir. Initial lib support for LMP.

[M110-016: grounds for a gr5/gr6 (lmp) toolchain]
(To be submitted)

commit 1f33ed87b182696c9937c3de1c51e926e02a5352
2013-01-08  Eric Botcazou  <ebotcazou@adacore.com>

	* diagnostic.c (diagnostic_classify_diagnostic): Accept zero index and
	document its semantics.
	(diagnostic_report_diagnostic): Adjust accordingly.

[C822-009: coordinate FE and BE warnings]
(Installed in GCC 4.9 on 2013-08-07 - revision 201574)

commit 511ddaf09a4fa482d8d07acf842314bd015398ed
commit 9d6c792aa5d6cc5c61a9d8d4ed8e9116af7e4bf5
commit a9f4bb7d43999940686f6c50376d42cc6b115b99
2013-01-05  Douglas B Rupp  <rupp@adacore.com>

	* doc/invoke.texi (mlongcall): Tweak documentation for IA-64

[LA23-051 enhancement: -mlongcall for IA64]
(To be submitted)

commit 2e03098c7953d80f2fd78f9194b945c9eca8fd44
commit 79ec4d83df4b7224c1341d334b882dc1ab29dc3
commit 0d2d4e7c1798abe0d46cfd4319cbb55f97605b9f
commit 84c4f0c11eae935bf0afae0acebd46579deb2da5
commit 8fa04c30661febf5948a7e530b183a2f908d7030
commit efd088ec7356158b5b29ffd403e740aae26ced3a
commit 3896d75b403d99ba64125b3a2e22cf7eb6fc926f
2013-01-01  Eric Botcazou  <ebotcazou@adacore.com>

	* var-tracking.c (track_expr_p): Do not track declarations for parts
	of tracked parameters.
	(add_stores): Do not track values for tracked parameters passed in
	multiple locations.
	(vt_get_decl_and_offset): Handle PARALLEL.
	(vt_add_function_parameter): Handle parameters with incoming PARALLEL.

[LC25-001: string parameter reported as optimized out at -O1]
(Installed in GCC 4.9 on 2013-11-27 - revision 205461)

commit [dump-xref]
2013-01-01  Joel Brobecker  <brobecker@adacore.com>

c-family/
	* c-xref.c (output_typeref): Renames generate_typeref.
	Update all callers throughout this file.

[LC30-008: Rename generate_typeref into output_typeref]
(Superseded by change on gcc-4.9 branch)

commit dd91320b2cb71b880fc319fc7cf1aedf03403ba4
2012-12-30  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revisions 190540 & 191283
	* config/sparc/predicates.md (input_operand): Do not consider TImode
	constants as 1-instruction integer constants.
	Use register_or_zero_operand instead of register_operand and tidy up.
	* config/sparc/sparc.md (movti): New expander.
	(movti_insn_sp64): New instruction.
	(movti_insn_sp64_hq): Likewise.
	(TImode splitters): New splitters.
	* config/sparc/sparc.c (sparc_expand_move) <TImode>: New case.
	(sparc_legitimate_address_p): Return 0 for REG+REG in TImode.
	* config/sparc/sparc.h (MAX_FIXED_MODE_SIZE): Define.

	* config/sparc/sparc-protos.h (arith_double_4096_operand): Delete.
	(arith_4096_operand): Likewise.
	(zero_operand): Likewise.
	(fp_zero_operand): Likewise.
	(reg_or_0_operand): Likewise.

[LC25-001: string parameter reported as optimized out at -O1]
(Already in GCC 4.8)

commit 1a04cc01c4751d60b8957e00bf61de5dfe13a60e
2012-12-30  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 190492
	* config/i386/i386.c (ix86_member_type_forces_blk): New function.
	(TARGET_MEMBER_TYPE_FORCES_BLK): New macro.
	* config/i386/i386.h (MAX_FIXED_MODE_SIZE): New macro.

[LC25-001: string parameter reported as optimized out at -O1]
(Already in GCC 4.8)

commit [dump-xref]
2012-12-30  Joel Brobecker  <brobecker@adacore.com>

cp/
	* parser.c (cp_parser_enum_specifier): Move the code calling
	generate_type_reference inside the block protected by
	a type != error_mark_node check.

[LC06-008: Missing dump-xref end of enum reference in C++]
(Superseded by change on gcc-4.9 branch)

commit 0f481764c8f4bb711ef6d0e3c25d42f762aac730
commit 78df7d0dd4041017cfec51b85b2d796069360fe2
2012-12-29  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 190488
	* stor-layout.c (compute_record_mode): Replace
	MEMBER_TYPE_FORCES_BLK with targetm.member_type_forces_blk.
	(layout_type): Likewise.
	* system.h: Poison MEMBER_TYPE_FORCES_BLK.
	* target.def (member_type_forces_blk): New target hook.
	* targhooks.c (default_member_type_forces_blk): New.
	* targhooks.h (default_member_type_forces_blk): Likewise.
	* doc/tm.texi.in (MEMBER_TYPE_FORCES_BLK): Removed.
	(TARGET_MEMBER_TYPE_FORCES_BLK): New hook.
	* doc/tm.texi: Regenerated.
	* config/ia64/hpux.h (MEMBER_TYPE_FORCES_BLK): Removed.
	* config/ia64/ia64.c (ia64_member_type_forces_blk): New function.
	(TARGET_MEMBER_TYPE_FORCES_BLK): New macro.
	* config/rs6000/rs6000.c (TARGET_MEMBER_TYPE_FORCES_BLK): New macro.
	(rs6000_member_type_forces_blk): New function.
	* config/rs6000/rs6000.h (MEMBER_TYPE_FORCES_BLK): Removed.
	* config/xtensa/xtensa.c (xtensa_member_type_forces_blk): New function.
	(TARGET_MEMBER_TYPE_FORCES_BLK): New macro.
	* config/xtensa/xtensa.h (MEMBER_TYPE_FORCES_BLK): Removed.

[LC25-001: string parameter reported as optimized out at -O1]
(Already in GCC 4.8)

commit 2de81df363d966d6b4b175d67e1c1b5aeb3ce6cf
commit 9acaff1c89aa29613fe6759c6545a1e5fcc8c68e
commit 59209ef3de2c4c8d3daf869af3b00a6a736f9f39
2012-12-26  Douglas B Rupp  <rupp@adacore.com>

	* config/ia64/ia64.opt (mlongcall): New option
	* config/ia64/ia64.md: New insns for mlongcall
	* doc/invoke.texi (mlongcall): Document for IA-64

[LA23-051 enhancement: -mlongcall for IA64]
(To be submitted)

commit [dump-xref]
2012-12-23  Joel Brobecker  <brobecker@adacore.com>

cp/
	* parser.c (cp_parser_enum_specifier): If found, add call to
	generate_type_reference with the location of the CPP_CLOSE_BRACE
	token.

[LC06-008: Missing dump-xref end of enum reference in C++]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-12-21  Joel Brobecker  <brobecker@adacore.com>

c-family/
	* c-xref.c (output_references): Generate a name for anonymous
	enumeral types the same way we do for anonymous struct types.

[LC06-008: Missing dump-xref reference for anonymous enum type in C]
(Superseded by change on gcc-4.9 branch)

commit 75c6c8b4f994bf1793906b4f2014b93a69cd6c95
2012-12-21  Tristan Gingold  <gingold@adacore.com>

	* config/arm/t-armv7-elf: Add cortex-m3.

[LB28-027: recompilable runtimes for ARM cortex m3]
(Local change)

commit 25867668fde647f7ac976f8c8dad08465fe5e397
2012-12-19 Jose Ruiz  <ruiz@adacore.com>

        * config.sub: Rename sparc-wrs-vxworks to leon-wrs-vxworks.

[LB23-008: tool prefix for leon-vx6]
(To be submitted)

commit 26aba0fd19b55a944998470fb4db8d0e6cd9bb43
2012-12-18  Olivier Hainque  <hainque@adacore.com>

libgcc/
	* crtstuff.c (__vxworks section): Arrange for the frame
	registration constructors to be visible in crtbeginT.

[LC15-002: support for vx6 kernel noauto-register broken]
(To be submitted)

commit 88d2eacc7a4d529c2f943dc6e4719620a7cc95ca
commit 52eb57aec421aa9c4c9c88ab6db2fef738185437
2012-12-14  Olivier Hainque  <hainque@adacore.com>

testsuite/
	* gcc.dg/guality/vla-1.c: xfail.
	* gcc.dg/guality/vla-2.c: xfail.

[LC14-010: improve gdb re guality/vla FAILs on fsf suite for C]
(Not to be submitted, minor gdb weakness to be addressed instead)

commit [dump-xref]
2012-12-14  Joel Brobecker  <brobecker@adacore.com>

c-family/
	* c-xref.c (output_references): Delete local variable "current",
	replacing it with xref->ent instead.

[LB30-025: Minor code cleanup]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-12-14  Joel Brobecker  <brobecker@adacore.com>

c-family/
	* c-xref.c (same_entity_p): New function.
	(compare_xref): Replace test by call to new function.
	(output_references): Likewise.  Delete unused variables
	"current_dloc" and "current_name".

[LB30-025: Minor code factorization]
(Superseded by change on gcc-4.9 branch)

commit 3e9b725a85bef4f2e5b1c2a769e69a7935e6d3bf
2012-12-10  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-loop-ivopts.c (prepare_decl_rtl) <ADDR_EXPR>: Generate RTL
	only for a DECL which HAS_RTL_P.

[LC05-013: internal error on loop over constant vector at -O]
(Installed in GCC 4.8 on 2012-12-11 - revision 194387)

commit 47c22d2b3768ad2d2875887699c723fddfd189f2
2012-12-10  Eric Botcazou  <ebotcazou@adacore.com>

cp/
	* Make-lang.in (cp/typeck.o): Add dependency on $(PARAMS_H).
	(cp/name-lookup.o): Likewise.

(Installed in GCC 4.8 on 2012-12-10 - revision 194369)

commit bc712e823c50c11c37a95bdb84d64f55809c24e8
2012-12-10  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 190594
	* tree-ssa-alias.h (get_continuation_for_phi): Add alias query
	counter output argument.
	(walk_non_aliased_vuses): Add alias query counter argument
	to the walker callback.
	* tree-ssa-alias.c (maybe_skip_until): Add alias query counter
	output argument and count alias queries.
	(get_continuation_for_phi_1): Likewise.
	(get_continuation_for_phi): Likewise.
	(walk_non_aliased_vuses): Add alias query counter argument
	to the walker callback and allow it to abort the walk by
	returning -1.
	* tree-ssa-pre.c (translate_vuse_through_block): Adjust.
	* tree-ssa-sccvn.c (vn_reference_lookup_2): Add alias query
	counter parmeter, abort walk if that is bigger than
	--param sccvn-max-alias-queries-per-access.
	* params.def (sccvn-max-alias-queries-per-access): New param.
	* doc/invoke.texi (sccvn-max-alias-queries-per-access): Document.

[LB17-004: E221-018 is 10 times slower with 7.1 than with 6.4]
(Already in GCC 4.8)

commit 2b705efc53613661436e193dc969b94973f04759
2012-12-10  Olivier Hainque  <hainque@adacore.com>

	* Makefile.in: Define CROSS from @CROSS@.

[GC07-006: suppress warnings during bootstrap first stage]
(Superseded by change on gcc-4.9 branch)

commit 3b0d5ea8ed2862eabae5f487859bf2c3400b2567
2012-12-06  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-loop-im.c (for_each_index) <CONST_DECL>: New case.

[LC05-013: internal error on loop over constant vector at -O]
(Installed in GCC 4.8 on 2012-12-08 - revision 194320)

commit 961840794118dcf1a1b2956a08342bd2f38216fa
2012-12-06  Tristan Gingold  <gingold@adacore.com>

libgcc/
	* Makefile.in: Install the .ci files, if any.

[IB09-008: libgcc stack-usage info]
(To be ported)

commit [dump-xref]
2012-12-06  Arnaud Charlet  <charlet@adacore.com>

c-family/
	* c-xref.c (output_references): Generate special 'i' reference
	before subprogram parameter references.

[L623-001: regression on cpp_overloading2]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-12-06  Joel Brobecker  <brobecker@adacore.com>

c-family/
	* c-xref.c (output_references): Use the file's basename
	when writing the X file.

[LB27-009: output basename in X lines]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-12-02  Joel Brobecker  <brobecker@adacore.com>

c-family/
	* c-xref.c (generate_reference): Fold the handling of LOC == 0
	with the handing of TYP == 0, and improve identical definition
	matching.  Add comment.  Adjust the "else" branch of the code
	accordingly.  Move the last call to VEC_safe_push insie the
	"else" branch as well.
	(generate_macro_reference): For every macro redefinition,
	make all previous references point to the new definition.
	For previous definitions, also set their loc.  Move the push
	of the new reference at the end of the function rather than
	the beginning.  Same thing for the call to add_decl_name.
	(compare_location): Use safe_filename_cmp instead of filename_cmp.
	(compare_xref): Check that the references dloc are different
	before using the reference's location as the comparison factor.
	(output_references): New variable current_loc.  Use it when
	testing for a new entity.
	(traverse_tree_xref): Call generate_reference for artificial
	enum types.

[LB10-002: -fdump-xref: missing enum type in enum typedefs]
(Superseded by change on gcc-4.9 branch)

commit 6b16673d75e929ad1dfe767f12ab73cdc60e82cb
2012-11-29  Olivier Hainque  <hainque@adacore.com>

libgcc/
	* config/rs6000/aix-unwind.h: Handle AIX 7.1 specificities.

[LB29-026: dwarf-eh fallback support for ppc-aix 7.1]
(To be submitted)

commit 6179f48da244dac752fb7c38f7d857890eb1867e
revert-by 2855dfb9cbb46fe9f02c3f307732ef31f9afce1f
commit f37274304e9b6e921e1474dfb9786348ac0fb932
2012-11-21  Tristan Gingold  <gingold@adacore.com>

	* collect2.c (collect_exit): Do not unlink the response file here...
	(do_wait): Likewise.
	(collect_wait): ...but here instead.

[LB19-011: temporary files not deleted on AIX]
(To be submitted)

commit aaf9a65299788528b08eb1f0dd57734a0ef9fe89
2012-11-12  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 187268
	* gimple-fold.c (fold_const_aggregate_ref_1) <ARRAY_REF>: Do the offset
	computation using the precision of the index type.
	* tree-ssa-ccp.c (dump_lattice_value) <CONSTANT>: Fix duplication.

[LB12-018: wrong code for small constant array at -O2 on x86]
(Already in GCC 4.8)

revert-by df0b9a177b424cd417e6cc8c464bb88e0349074d
commit 6c8074855740a07866e39e342ad2aa835aaa3407
2012-11-08  Eric Botcazou  <ebotcazou@adacore.com>

	* common.opt (fvar-tracking-uninit): Document.
	* toplev.c (process_options): Fix handling of flag_var_tracking_uninit.
	* config/darwin.c (darwin_override_options): Likewise.

[LB08-031: GDB/darwin: breakpoint no longer skips prologue]
(Installed in GCC 4.7 on 2012-11-12 - revision 193458)

revert-by f949692c8923a5d447d793304ae314eca101b5ad
commit 2cbc9f50cb5239b49b2ea3ec7eb9c9c889a62c50
2012-11-06  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/i386.c (release_scratch_register_on_entry): Also adjust
	sp_offset manually.

[LB05-029: internal error with -O -fstack-check on x86/Linux]
(Installed in GCC 4.7 on 2012-11-09 - revision 193353)

commit 36dd56c62245de1cfe9bf9bd056500057db26421
commit 0bf954e4252af0b8093ed5fd4437fd795ffd1c57
2012-10-29  Olivier Hainque  <hainque@adacore.com>

	* tree.h (tree_block): New end_locus field.
	(BLOCK_SOURCE_END_LOCATION): New accessor.
	* gimplify.c (gimplify_bind_expr): When we have it, propagate the
	BIND_EXPR_BLOCK end location to the stack_restore and clobbers.

[HA16-013: assign cleanup code for dynamic stack alloc to end of block sloc]
[M513-017 incorrect labeling of cond branch instructions for coverage analysis]
(To be submitted)

commit 5d58fb9008d430e07c59910ad2387655f9d610e5
2012-10-29  Eric Botcazou  <ebotcazou@adacore.com>

	* doc/invoke.texi (SPARC Options): Document -mfix-ut699.
	* builtins.c (expand_builtin_mathfn) <BUILT_IN_SQRT>: Try to widen the
	mode if the instruction isn't available in the original mode.
	* config/sparc/sparc.opt (mfix-ut699): New option.
	* config/sparc/sparc.md (muldf3_extend): Disable if -mfix-ut699.
	(divdf3): Turn into expander.
	(divdf3_nofix): New insn.
	(divdf3_fix): Likewise.
	(divsf3): Disable if -mfix-ut699.
	(sqrtdf2): Turn into expander.
	(sqrtdf2_nofix): New insn.
	(sqrtdf2_fix): Likewise.
	(sqrtsf2): Disable if -mfix-ut699.

[LA25-024: implement workarounds for bugs in LEON3 FPU]
(Installed in GCC 4.9 on 2013-05-28 - revision 199366)

commit [dump-xref]
2012-10-28  Arnaud Charlet  <charlet@adacore.com>

c-family/
	* c-xref.c (xref_entity_letter): Handle abstract subprograms.

[L910-042: -fdump-xref: handle abstract subprograms]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-10-26  Arnaud Charlet  <charlet@adacore.com>

c-family/
        * c-xref.c (compare_location): New function, copied from c-ada-spec.c.
	(compare_xref): Fix comparison of slocs since virtual slocs can no
	longer be compared directly.
	(safe_filename_cmp): New.

[LA11-026: -fdump-xref: code completion for C++ typedef struct]
(Superseded by change on gcc-4.9 branch)

commit 389d19c4ef08e64d53dfded374b443d02bbf3e29
2012-10-22  Tristan Gingold  <gingold@adacore.com>

	* config/alpha/alpha.md: Turn splitters that call alpha_split_const_mov
	into post-reload only splitters.  Fail instead of creating new pseudos
	in the add-constant splitter.

[K118-021: alpha-vms cross compiler crash processing sinfo.adb]
(To be ported)

commit [dump-ada-spec]
2012-10-18  Eric Botcazou  <ebotcazou@adacore.com>

c-family/
	* c-ada-spec.c (LOCATION_COL): Delete.
	(compare_location): New function.
	(compare_node): Use it.
	(compare_comment): Likewise.

[LA16-007: failure of HC23_006 on gcc-head]
(Installed in GCC 4.8 on 2012-10-18 - revision 192574)

revert-by 4ce8fe919f8163c33edcce4c6deec5f7e7d51676
commit fe90e9ec9cbf67d849683882a7c64251aecdec1a
2012-10-17  Olivier Hainque  <hainque@adacore.com>

	Revert fsf commit, then revert the revert.

[LA11-008: build failures for targets with non-toplevel gthread support]
(Obsolete for gcc-4.9)

commit a228c3b3584505b2a6cabcb785b92f09d47a3006
2012-10-16  Olivier Hainque  <hainque@adacore.com>

	* scos.c (open_sco_file): Emit a "A -g" line when
	debug_info_level >= DINFO_LEVEL_NORMAL.

[LA15-003: gnatcov warn on unit not compiled with -g]
(To be submitted with -fdump-scos)

commit [dump-ada-spec]
2012-10-16  Eric Botcazou  <ebotcazou@adacore.com>

c-family/
	* c-ada-spec.c (ADA_HOST_WIDE_INT_PRINT_DOUBLE_HEX): Define.
	(dump_generic_ada_node) <INTEGER_CST>: Deal with sizetype specially.
	Remove POINTER_TYPE handling, add large unsigned handling and use
	ADA_HOST_WIDE_INT_PRINT_DOUBLE_HEX for big numbers.

[LA15-016: failure of HB28_003 on gcc-head]
(Installed in GCC 4.8 on 2012-10-16 - revision 192489)

commit cf77ca8f15da5252c787b80af735565ea1a9e01d
2012-10-12  Olivier Hainque  <hainque@adacore.com>

	* config/vxworks.h (VXWORKS_LIBGCC_SPEC): Don't link shared RTPs with
	libc_internal.

[G104-003: shared libgnat support for VxWorks]
(To be submitted)

commit 2ec7dabf7ea6962f720d6a8a920d2a810ca606d2
2012-10-11  Geert Bosch  <bosch@adacore.com>

	* config.gcc: Force with_mode=thumb for armv7 and use t-armv7-elf
	* config/arm/t-armv7-elf: New file with full multilib support for
	armv7 family

[L320-041: multilib changes for armv7]
(local setting - may submit some variation?)

commit [dump-ada-spec]
2012-10-11  Eric Botcazou  <ebotcazou@adacore.com>

c-family/
	* c-ada-spec.c (dump_ada_template): Bail out for template declarations
	declaring something coming from another file.

[L825-002: crash for I511_012 on gcc-head]
(Installed in GCC 4.8 on 2012-10-11 - revision 192353)

commit [dump-ada-spec]
2012-10-10  Arnaud Charlet  <charlet@adacore.com>

c-family/
	* c-ada-spec.c (print_ada_struct_decl): Increase buf size.

[LA09-031: buffer overflow on -fdump-ada-spec]
(Installed in GCC 4.8 on 2012-10-10 - revision 192290)

commit 1a8e0d4b487220ab0f659d67bea104aa9f993763
commit f21dfadc2db2f95dd9dbd6d7586162c4b889a708
2012-10-09  Jerome Lambourg  <lambourg@adacore.com>

	* config/sol2.h (LIB_SPEC): Use libgnatmon when profiling.

[L328-017: port changes to gcc 4.5 to gcc 4.7]
[LA14-003: missing fentry for gprof on x86_64-windows] 
[LC07-027: gprof failure on windows] 
(To be ported)

commit b5ed59247f83745f0ca475e7cd98fc6abd78822d
commit 5c918ae0560fa36654df9bdccf5f74910f96e9fb
2012-10-07  Eric Botcazou  <ebotcazou@adacore.com>

	* expr.c (expand_expr_real_1) <VIEW_CONVERT_EXPR>: Do not unnecessarily
	copy the object in the MEM_P case.

[LA05-036: double write of unchecked conversion to atomic variable]
(Installed in GCC 4.8 on 2012-10-15 - revision 192452)

commit 5a37d4602a36caa01347ef19be80eba3b9f96dbd
2012-10-05  Olivier Hainque  <hainque@adacore.com>

	* config.sub: Defer the e500 mapping to powerpc down to the
	very end, where it can be factorized and once the os is known
	and we can decide to add a "spe" suffix if needed.

[LA04-023: fp ABI mishaps on e500v2-srw-linux]
(To be submitted)

commit c7f3487ebf506fd9692bdb09319c6881ef977c29
2012-10-05  Olivier Hainque  <hainque@adacore.com>

	* config/i386/vxworks.h (USE_IX86_FRAME_POINTER): Define.

[L801-030: segv during Aunit tests on x86-vxworks]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-10-04  Arnaud Charlet  <charlet@adacore.com>

c-family/
	* c-xref.c (output_references): Add fallback to find name of struct.

[L814-016: -fdump-xref: code completion for typedef struct]
(Superseded by change on gcc-4.9 branch)

revert-by cb0d2d900479ec1b0079e7689be0b480b02b29d0
commit ddd7c1fbafd1e959d6ef294a51610e05f3f17894
2012-09-28  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/i386.c (ix86_expand_prologue): Emit frame info for the
	special register pushes before frame probing and allocation.

[L928-007: wrong debug info for big stack frame on x86-64/Windows]
(Installed in GCC 4.7 on 2012-10-31 - revision 193045)

commit 7e8f5cdb56e92e7971fe62c2a6aa1910c47dc121
2012-09-28  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 187879
	* contrib/compare-debug (remove_comment): New function.
	Remove any .comment sections if the first cmp failed.

[L928-010: backport fix for PR bootstrap/53472]
(Already in GCC 4.8)

revert-by 81920a3218e3a923f32ace9d2ef5bf1d314c3ecc
commit 841bcc89a58fb632364f1550273004c100062564
2012-09-28  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (gen_call_site_die): Do not generate address references
	for not-yet-seen subprograms in LTO mode.

[L925-028: fix LTO bootstrap failure with --disable-libada]
(Obsolete for GCC 4.7)

revert-by 82dcfdf0a27bcee04bce5676c7a9f30e80dfaef1
commit 52cc05949e856a69a077d7fa947ff6f2a85c6fbc
2012-09-25  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (fixup_limbo_list): New function extracted from...
	(dwarf2out_finish): ...here.  Call it both after the regular processing
	and after the call to resolve_addr.

[L925-028: fix LTO bootstrap failure with --disable-libada]
(Obsolete for GCC 4.7)

commit ab871bf24da354488f8b54f9c139a5cf4116ce60
2012-09-25  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/vxworksmils.h: New target configuration file.  Define
	a MILS specific value for VXCPU_FOR_8548.
	* config.gcc (powerpc-wrs-vxworksae): Include it on top of the
	canonical set for VxWorks AE.

[L817-024: vxworks mils transition to gcc-4.7]
(To be submitted)

commit ad44a44cb63a821dec9ec7191a1fb6f3382bd952
commit 9bc02c24650d9b2dcab281f15148798cec1aa15f
commit 74c6eedf7c138c7bdeec0e83456b372c24e09423
2012-09-25  Olivier Hainque  <hainque@adacore.com>

gcc/
	* config/rs6000/lynx.h: Rework definitions of GP_SAVE_INLINE and
	FP_SAVE_INLINE to match those from sysv4.h, restricting externals
	to -Os.
	* config/rs6000/lynx-xcoff.h: Rework definitions of GP_SAVE_INLINE
	and FP_SAVE_INLINE to disable externals.
libgcc/
	* config.host (powerpc-*-lynxos!178): Add rs6000/t-savresfgpr to
	tmake_file.

[L925-006: unresolved ref to fp save/restore on lynxos5]
[N115-047: internal error with -Os switch on PowerPC/LynxOS-178]
(To be ported)

revert-by de851406af5e8c5d76100af7e05d3ea72f1a7bb0
commit bc211acba489b4a2bfb4112c695326f361a65c01
2012-09-23  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-streamer-in.c (unpack_ts_type_common_value_fields): Stream in
	TYPE_NONALIASED_COMPONENT flag.
	* tree-streamer-out.c (pack_ts_type_common_value_fields): Stream out
	TYPE_NONALIASED_COMPONENT flag.

[J924-028: improve SPARKSkein performances]
(Installed in GCC 4.7 on 2012-09-24 - revision 191663)

commit e094b9c2eaf703984df4862df8335e22a9915dac
commit 0044cee5d23dd4bc143fc7fe48f327ede24d49bd
2012-09-23  Olivier Hainque  <hainque@adacore.com>

gcc/
	* config/rs6000/t-vxworksae: Remove mvthreads from MULTILIB_OPTIONS.
	Force -mvthreads in TCFLAGS instead.
libgcc/
	* config/t-vxworks (LIBGCC2_INCLUDES): Handle -mvthreads.

[L817-024: vxworks-mils transition to gcc 4.7]
(Not be submitted. Local setting)

commit [dump-ada-spec]
2012-09-18  Arnaud Charlet  <charlet@adacore.com>

c-family/
	* c-ada-spec.c: Style fixes.

(Installed in GCC 4.8 on 2012-09-18 - revision 191428)

commit 12e168768c75a722887549dc57d85f2ee4dc9cae
2012-09-18  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-affine.h (MAX_AFF_ELTS): Bump to 12.
	(aff_combination_zero): Declare.
	* tree-affine.c (aff_combination_zero): Make global.
	* tree-ssa-loop-ivopts.c (determine_use_iv_cost_address): Do not
	return negative costs for auto-increment addresses.
	(rewrite_use_address): Try to build common patterns in addresses.

[G427-025: pessimization for perturbated multi-dim array references]
(To be ported)

commit 6b285fafcc600312eb1b327453b8084a0232ff46
2012-09-14  Tristan Gingold  <gingold@adacore.com>

	* config/i386/mingw32.h (LINK_ENABLE_LARGE_ADDRESS): New macro.
	(LINK_SPEC): Use it.

[IA28-027: enable large address space support on win32]
[L914-015: x86-windows transition to gcc 4.7]
(To be ported)

commit 9dad6e7c97ad3b2671f72cd8204541e7b54d2098
2012-09-13  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/vxworks.h (VXCPU_FOR_8548): New macro, valued
	"PPC85XX" by default.
	(CPP_SPEC): Use it.
	* config/rs6000/vxworksae.h (VXCPU_FOR_8548): Redefine to "PPCE500V2".

[L913-013: wrong CPU value for e500v2-vx653 psc2.4]
(To be submitted)

commit ffee434854b90f9e507bc048a04efa8574627e6d
2012-09-12  Eric Botcazou  <ebotcazou@adacore.com>

	* passes.c (init_optimization_passes): Run first EH cleanup pass early.

[L910-044: sloc on composite assignment lost at -O on LEON]
(Submitted at http://gcc.gnu.org/ml/gcc-patches/2014-01/msg00848.html)

commit 3fdfeafc3a13671758b22abd28f30da165e41224
2012-09-07  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/vxworks.h (CPP_SPEC): Arrange for -mcpu=8548 to set
	CPU=85XX as well (as for mcpu=8540).

[L817-017: gcc-4.7 transition, ppc-vx653-linux]
(To be submitted)

commit 19f6bac0cb8bf6f0c892a2d0b4b072bf3a8d4725
2012-09-07  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/vxworksae.h (VXWORKSAE_TARGET_DIR): Leverage WIND_BASE
	instead of using a harcoded path to reach the system headers tree.
	(VXWORKS_ADDITIONAL_CPP_SPEC): Adjust accordingly, and key the -isystem
	selection on lone -DVTHREADS as well.

[L817-017: gcc-4.7 transition, ppc-vx653-linux]
(To be refined prior to submission)

commit 614dc3f4e1de784a6a81dea147336cc8570ae311
2012-09-06  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.7 revision 191025
	* tree-inline.c (remap_gimple_op_r): Copy TREE_SIDE_EFFECTS also.

[L906-029: tentatively prevent merge conflict on gcc-4.7]
(Already in GCC 4.7)

commit 411f3ca8c735753842859617f61dba436bac59d0
2012-09-06  Thomas Quinot  <quinot@adacore.com>

	* common.opt (-fada-spec-parent): Remove, move to...
c-family/
	* c.opt (-fada-spec-parent): ... here instead, since -fdump-ada-spec is
	specific of C family compilers.

[L807-019: make -fada-spec-parent specific to C family compilers]
(Installed in GCC 4.8 on 2012-09-18 - revision 191427)

commit [dump-xref]
2012-09-04  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c, tree-xref.h: Rename c-family/c-xref.[ch]
	* c-family/c-xref.c: Replace manual expandable array with VEC type.
	Add support for GC
	* cgraphunit.c: Remove corresponding GC kludge.
	* common.opt: Now handle -fdump-xref here. Introduce -fextra-slocs.
	* c-config-lang.in, cp/config-lang.in, objc/config-lang.in,
	objcp/config-lang.in (gtfiles): Add c-family/c-xref.c

[L903-024: remove GC kludge]
[L904-006: add -fextra-slocs switch]
[L917-001: -fdump-xref not recognized by gnat1]
(Superseded by change on gcc-4.9 branch)

commit 7c81ed1ecb8684745754b104c1f089039b1e10fe
commit 9089e75bf3edcd043ca0dd16807c2931ad48e82f
commit f8b7bf58f634f54a19745dfabb4d42b3eaaeeb93
commit 3ec9e3335d29faa37f88630029f13f7c59f5005f
2012-09-03  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-cfgcleanup.c (cleanup_control_expr_graph) <GIMPLE_COND>: Remove
	code doing propagation from degenerate PHI nodes.
	* tree-ssa-loop-ivcanon.c (propagate_into_all_uses): New function.
	(propagate_constants_for_unrolling): Likewise.
	(tree_unroll_loops_completely): If the current loop has been unrolled
	and its father isn't the entire function, propagate constants within
	the new basic blocks by means of propagate_constants_for_unrolling.

[L828-001: memory exhaustion on loop nest at -O2 with GCC 4.7]
(Installed in GCC 4.8 on 2012-09-17 - revision 191387)

commit 9515ee148ee80879b27bea752b7eef62314b6ce9
2012-09-03  Olivier Hainque  <hainque@adacore.com>

	* Makefile.in (FLAGS_TO_PASS): Pass STAMP as well.

[L817-018: gcc-4.7 transition, avr-elf]
(Obsolete for GCC 4.9, AVR port baselined)

commit [dump-ada-spec]
2012-08-23  Arnaud Charlet  <charlet@adacore.com>

c-family/
	* c-ada-spec.c (dump_generic_ada_node): Fix handling of name_only
	for pointers, and add missing Convention C pragma.
	(print_ada_struct_decl): Add missing aliased keyword.
	(dump_ads): Add pragma Ada_2005 and Style_Checks (Off).

[L813-009 & L813-010 -fdump-ada-spec improvements]
(Installed in GCC 4.8 on 2012-08-23 - revision 190623)

commit 9d4dff4426898c1138e2aa127653f0bc10368752
2012-08-17  Olivier Hainque  <hainque@adacore.com>

	* config.sub (case $os): Canonicalize -vxworksmils into -vxworksae.

[L817-024: ppc/e500-vxworksmils transition to gcc-4.7]
(To be submitted)

commit 3a948c4bce3e1dd62f3108a459e82a3b6460e80f
2012-08-17  Olivier Hainque  <hainque@adacore.com>

	* config/avr/elf.h (PREFERRED_DEBUGGING_TYPE): Reset to DWARF2_DEBUG.

[L817-018: avr-elf ports transition to gcc 4.7]
(Obsolete for GCC 4.9, AVR port baselined)

commit 8b63c4e3d7fa0666bd547209c0b749784c58d8a8
2012-08-13  Thomas Quinot  <quinot@adacore.com>

	* common.opt (-fada-spec-parent): Define new command line switch.
	* c-family/c-ada-spec.c (get_ada_package): When -fada-spec-parent
	is specified, generate binding spec as a child of the specified unit.
	* doc/invoke.texi: Document -fada-spec-parent.

[L807-019: specify parent unit for -fdump-ada-spec]
(Installed in GCC 4.8 on 2012-09-18 - revision 191427)

commit 65dfe21fc33a61e2d63af9a9c6dc54850551193d
commit 9b804e3dec8987d8466ce8d42561ece63541f6fe
2012-08-13  Olivier Hainque  <hainque@adacore.com>

contrib/
	* make_sunver.pl (<ELFDUMP> loop): Move around table header handling
	and also skip a "Symbol Table:" header.

[L813-006: libgomp build failure on x86-solaris gcc 4.7]
(To be submitted)

commit d5d7130aa186927296c8a7713d645c6df9056ba7
2012-08-12  Olivier Hainque  <hainque@adacore.com>

gcc/
	* config.sub: canonicalize e500 and leon triplets here.
	* config.gcc: Pick a default with_cpu for e500 here instead of
	within configure.
	* configure.ac: Remove e500 and leon triplets translations. Remove
	the selection of a default with_cpu for e500.
	* configure[.ac]: Regenerate.
libgcc/
	* configure.ac: Remove e500 and leon triplets translations.
	* configure: Regenerate.
libcpp/
	* configure.ac: Remove e500 and leon triplets translations.
	* configure: Regenerate.

[L808-027: leverage config.sub for triplets canonicalization]
(To be submitted)

commit 62b14eb6a2d66a208bcf6b85330c50e2147f07f8
commit dee8c5cc1bf7f9c6ecdddb3750c9e0777b4d0d19
commit 38f7df4accda8aeaeb133ac158c1c4f76b9ba2f9
commit 5b5b33320621550f7930cd358d90c23d16cc0a63
2012-08-12  Eric Botcazou  <ebotcazou@adacore.com>

	* tree.h (DECL_NONLOCAL_FRAME): New macro.
	* gimple.c (gimple_ior_addresses_taken_1): Handle non-local frame
	structures specially.
	* tree-nested.c (get_frame_type): Set DECL_NONLOCAL_FRAME.
	* tree-ssa.c (get_base_of_component_ref): New static function.
	(lookup_decl_for_field): Likewise.
	(split_nonlocal_frames_op): Likewise.
	(execute_update_addresses_taken): Break up non-local frame structures
	into variables when possible.
	* tree-streamer-in.c (unpack_ts_decl_common_value_fields): Stream in
	DECL_NONLOCAL_FRAME flag.
	* tree-streamer-out.c (pack_ts_decl_common_value_fields): Stream out
	DECL_NONLOCAL_FRAME flag.

[J924-028: improve SPARKSkein performances]
[M514-001: internal error on nested use of packed record at -O]
(Superseded by change on gcc-4.9 branch)

commit 06a675a556838c823821bbcfc622607325dc6034
2012-08-09  Geert Bosch  <bosch@adacore.com>

libgcc/
	* config.host: Reinstate t-softmul support for LEON.

[L403-035: gcc-4.7 transition, leon*-elf]
(Not to be submitted)

commit ea67568dff33f13a4b6e6ffddf043324c4702d07
revert-by f219240c80427d9cb990efce4b5513233ea0cbe7
commit 206fa8d1fc51f911a34df1adb49a6f101ecc91f9
2012-08-08  Jerome Guitton  <guitton@adacore.com>

	* config.sub: Map pikeos to elf.

[L808-010: port to x86-pikeos]
(Not to be submitted. To be replaced by the use of --with-program-prefix)

commit 04824bdf5ed6f8b0149771ef3320f771975d4279
commit 8c1dd6f4e5ae3c94522ba4569ef92e8f3dcafb24
commit c10ef4f43b6cd785eaa2d7bd152d5d0d82a14f01
commit f9ea3d4b382ae30e48f92c584d94502ff0260c9d
commit 7e470d74c8b62c683b622aadf0580553ba3a430c
commit a0658b187fd858981472ecbac722d461b9989a75
commit 3f37c41b39f1a8d83b617a76acc424d8f4c5985b
commit 8d1c1efa20d63bc2f0fb974579d0599bedb6977a
commit c4cee8da7cd796dd4f5841ecc5c41cceefe654aa
commit a1eaba8ab154d8df910dcee7fefb40b00a500aa5
commit a1f78e43e448dc06ed67adf4575b1698e7804751
commit b48561e305c14f1aabb75a41e7c957da1baa932b
commit 83c9ef50e4e77713a1b63cee4aeb5521f4282f14
commit 4bdc921cf3a723750453e924927494447b20fd1c
commit ce8d302c6c1bbda427aa34716cd457973c011501
commit a53bc2e42a4a00959b65ba86d80771a5731ca87a
commit 1d788b5e5bf53dbc4bf681eecf67eeed4b0fe0a9
2012-08-08  Thomas Quinot  <quinot@adacore.com>

	* cfglayout.c (insn_location): Add instance parameter.
	(insn_multi_location): Likewise.
	* common.opt (flag_debug_instances): New internal flag.
	* final.c (bb_discriminator): New static variable.
	(last_bb_discriminator): Likewise.
	(last_final_sequence): Likewise.
	(final_start_function): Initialize them.
	(final_scan_insn): Set bb_discriminator instead of discriminator.
	For a line with multiple locations, output instance information.
	(notice_source_line): If flag_debug_instances is set, set discriminator
	to current instance id, or else to bb_discriminator.  Force a location
	note with column info for the next instruction after a delayed jump.
	* input.c (instance_table): New global variable.
	(expand_location): Rename into...
	(expand_location_1): ...this and add instance parameter.
	* input.h (instance_table): Declare.
	(expand_location_1): Likewise.
	(expand_locatio): New macro.
	* print-rtl.c (print_rtx): Adjust call to insn_location.
	* rtl.h (insn_location): Adjust prototype.
	(insn_multi_location): Likewise.
	* tree-inline.c (copy_bb): Copy the discriminator too.

[L803-021: include instantiation info in DWARF]
[LB26-019: activate -fdebug-instances when -fdump-scos is used]
[M409-007: 64-bit compiler SEGV on instanciation with -fdump-scos]
[M729-020: incorrect inherited slocs on basic block boundary]
[L725-007: per-instance coverage analysis with gnatcov]
[N227-030: incorrect column info after delayed jump on LEON at -O1]
(To be submitted)

commit 2253bc5798620d55efbfc5ad3b5a0c9cdd54b648
2012-08-03  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/sol2.h (USE_IX86_FRAME_POINTER): Define.

[L803-009: gprbuild SEGVs on x86-solaris gcc-4.7]
(Superseded by change on gcc-4.9 branch)

commit e077120eccb60c59406eac729c305085a73eb8d1
commit b222d50fc65c82324cc0fea2425cb0e45e0ff9db
2012-08-03  Eric Botcazou  <ebotcazou@adacore.com>

	* loop-invariant.c: Include target.h.
	(check_dependency): Return false for an uninitialized argument register
	that is likely to be spilled.
	* Makefile.in (loop-invariant.o): Add $(TARGET_H).

[L731-004: internal error on loop over complex numbers at -O]
(Installed in GCC 4.8 on 2012-10-18 - revision 192566)

commit 6e10bff290b45626793c2cdecad1e05289e596f5
2012-07-30  Jose Ruiz  <ruiz@adacore.com>

gcc/
	  * configure.ac: Turn leon-unknown-elf into sparc-leon-elf.
	  Do not set with_cpu because it is not needed.
	  * configure: Regenerate.
libcpp/
	  * configure.ac: Turn leon-unknown-elf into sparc-leon-elf.
	  * configure: Regenerate.
libgcc/
	  * configure.ac: Turn leon-unknown-elf into sparc-leon-elf.
	  * configure: Regenerate.

[L403-035: gcc-4.7 transition, leon*-elf]
(Not to be submitted. To be replaced by the use of --with-program-prefix)

commit b80d235b6782a1c2d7c2134494180024ec1c5c53
commit 2ce0ee317690a3ebec3099317109988474383d71
commit d8958d0345103eae1c94918c4e81f23f370ab6eb
commit 968f7f1cb9c4ccbd8f9139563286be5c250567b9
commit abbb4ff5aadb73597a75b9b5c0ce02c93fe8e740
commit 364e0e0de229d9cfd325c2de67dd210ed51af6ee
commit eb13b9d1d10e71971c8077221312e510cb8731e5
commit 34d376fc67a3613f9215b6834dea67006bb477e8
commit 32887ca0718b724665c7836c9b73569379c342ab
commit 271d8660c0bc5bbf8878ec280a260e4bd74bf861
commit c4c6aeddb8321cea162f811d0d7f406c28cbd697
commit f46463e296505edc3476844fc2c387378a556798
commit 0a8236bbdfb9b0dc3e023ab1722c9cd021eee6f3
commit 1ca0de98c5943e6f500246313c7869bb2ab2615e
commit fb5dcddb53d1351267063b2d86cfa85d26e8e8ee
commit 24bd160f432e0c8926766bd4740531d2320a5e40
commit f624097b765a869dc0191791cd3a68d50a97f0cc
2012-07-29  Eric Botcazou  <ebotcazou@adacore.com>

	* builtins.c (get_object_alignment_1): Adjust call to
	get_inner_reference.
	(fold_builtin_memory_op): Adjust calls to get_ref_base_and_extent.
	* calls.c (store_unaligned_arguments_into_pseudos): Adjust calls to
	extract_bit_field.
	(initialize_argument_information): Adjust call to store_expr.
	* cfgexpand.c (expand_debug_expr): Adjust call to get_inner_reference
	and get_ref_base_and_extent.
	* dbxout.c (dbxout_expand_expr): Likewise.
	* dojump.c (do_jump): Likewise.
	* dwarf2out.c (add_var_loc_to_decl): Likewise.
	(loc_list_for_address_of_addr_expr_of_indirect_ref): Likewise.
	(loc_list_from_tree): Likewise.
	(fortran_common): Likewise.
	(native_encode_initializer): Adjust call to native_encode_expr.
	* expmed.c (flip_storage_order): New function.
	(store_bit_field_1): Add REVERSE parameter.  Flip the storage order
	of the value if it is true.  Pass REVERSE to recursive call after
	adjusting the target offset.
	Test the result of mode_for_extraction instead of second-guessing it.
	Do not use extraction or movstrict instruction if REVERSE is true.
	Pass REVERSE to store_fixed_bit_field.
	(store_bit_field): Add REVERSE parameter and pass to it to above.
	(store_fixed_bit_field): Add REVERSE parameter and pass to it to
	store_split_bit_field.  Flip the storage order of the value if it
	is true and adjust the target offset.
	(store_split_bit_field): Add REVERSE parameter and pass it to
	store_fixed_bit_field.  Adjust the target offset if it is true.
	(extract_bit_field_1): Add REVERSE parameter.  Flip the storage order
	of the value if it is true.  Use BACKWARDS local variable.
	Pass REVERSE to recursive call after adjusting the target offset.
	Delete the new instructions and return NULL if the call has failed.
	Do not use extraction or subreg instruction if REVERSE is true.
	Pass REVERSE to extract_fixed_bit_field.
	(extract_bit_field): Add REVERSE parameter and pass to it to above.
	(extract_fixed_bit_field): Add REVERSE parameter and pass to it to
	extract_split_bit_field.  Flip the storage order of the value if it
	is true and adjust the target offset.
	(extract_split_bit_field): Add REVERSE parameter and pass it to
	extract_fixed_bit_field.  Adjust the target offset if it is true.
	* expr.c (emit_group_load_1): Adjust calls to extract_bit_field.
	(emit_group_store): Adjust call to store_bit_field.
	(copy_blkmode_from_reg): Likewise.
	(copy_blkmode_to_reg): Likewise.
	(write_complex_part): Likewise.
	(read_complex_part): Likewise.
	(optimize_bitfield_assignment_op): Add REVERSE parameter.  Assert
	that it isn't true if the target is a register.
	<PLUS_EXPR>: If it is, do not optimize unless bitsize is equal to 1,
	and flip the storage order of the mask.
	<BIT_IOR_EXPR>: Use str_mode/str_bitsize instead of more convoluted
	expressions and flip the storage order of the mask.
	(get_bit_range): Adjust call to get_inner_reference.
	(expand_assignment): Adjust calls to get_inner_reference, store_expr,
	optimize_bitfield_assignment_op and store_field.  Handle MEM_EXPRs
	with reverse storage order.
	(store_expr): Add REVERSE parameter and pass it to recursive calls
	and call to store_bit_field.  Force the value into a register if it
	is true and then flip the storage order of the value.
	(store_constructor_field): Add REVERSE parameter and pass it to
	recursive calls and call to store_field.
	(store_constructor): Add REVERSE parameter and pass it to calls to
	store_constructor_field and store_expr.  Set it to true for an
	aggregate type with TYPE_REVERSE_STORAGE_ORDER.
	(store_field): Add REVERSE parameter and pass it to recursive calls
	and calls to store_expr and store_bit_field.  Flip the storage order
	of the value with record type and integral mode and adjust the shift
	if it is true.
	(get_inner_reference): Add PREVERSEP parameter and set it to true
	upon encoutering a reference with reverse storage order.
	(expand_expr_addr_expr_1): Adjust call to get_inner_reference.
	(expand_constructor): Adjust call to store_constructor.
	(expand_expr_real_2) <CASE_CONVERT>: Pass TYPE_REVERSE_STORAGE_ORDER
	of the union type to store_expr in the MEM case and assert that it
	isn't set in the REG case.  Adjust call to store_field.
	(expand_expr_real_1) <MEM_REF>: Handle reverse storage order.
	<normal_inner_ref>: Add REVERSEP variable and adjust calls to
	get_inner_reference and extract_bit_field.  Flip the storage order
	of the value with record type and integral mode and adjust the shift
	if it is true.  Flip the storage order of the value if it is true.
	<VIEW_CONVERT_EXPR>: Add REVERSEP variable and adjust call to
	get_inner_reference.  Do not fetch an inner reference if it is true.
	* expr.h (flip_storage_order): Declare.
	(store_expr): Ajust prototype.
	(store_bit_field): Likewise.
	(extract_bit_field): Likewise.
	* fold-const.c (make_bit_field_ref): Add REVERSEP parameter and set
	REF_REVERSE_STORAGE_ORDER on the reference according to it.
	(optimize_bit_field_compare): Deal with reverse storage order.  Adjust
	calls to get_inner_reference and make_bit_field_ref.
	(decode_field_reference): Add PREVERSEP parameter and adjust call to
	get_inner_reference.
	(fold_truthop): Deal with reverse storage order.  Adjust calls to
	decode_field_reference and make_bit_field_ref.
	(native_encode_int): Add REVERSE parameter and flip the endianness
	according to it.
	(native_encode_real): Likewise.
	(native_encode_complex): Add REVERSE parameter and pass it to
	native_encode_expr.
	(native_encode_vector): Likewise.
	(native_encode_expr): Add REVERSE parameter and pass it to above
	functions.
	(fold_flip_storage_order): New function.
	(fold_view_convert_expr): Adjust call to native_encode_expr.
	(fold_unary_loc) <CASE_CONVERT>: Adjust call to get_inner_reference.
	<VIEW_CONVERT_EXPR>: Propagate the REF_REVERSE_STORAGE_ORDER flag.
	(fold_comparison): Adjust call to get_inner_reference.
	(split_address_to_core_and_offset): Likewise.
	* gimple-fold.c (maybe_fold_reference): Propagate the
	REF_REVERSE_STORAGE_ORDER flag.
	(gimple_extract_devirt_binfo_from_cst): Adjust call to
	get_ref_base_and_extent.
	(get_base_constructor): Likewise.
	(fold_const_aggregate_ref_1): Likewise.
	* gimple.c (gimple_types_compatible_1) <ARRAY_TYPE>: Take into account
	the TYPE_REVERSE_STORAGE_ORDER flag.
	<RECORD_TYPE>: Likewise.
	* gimplify.c (gimplify_expr) <MEM_REF>: Propagate the
	REF_REVERSE_STORAGE_ORDER flag.
	* ifcvt.c (noce_emit_move_insn): Adjust calls to store_bit_field.
	* ipa-cp.c (ipa_get_jf_ancestor_result): Adjust call to
	build_ref_for_offset.
	* ipa-prop.c (extr_type_from_vtbl_ptr_store): Adjust call to
	get_ref_base_and_extent.
	(compute_complex_assign_jump_func): Likewise.
	(get_ancestor_addr_info): Likewise.
	(compute_known_type_jump_func): Likewise.
	(ipa_modify_call_arguments): Set REF_REVERSE_STORAGE_ORDER on MEM_REF.
	* ipa-prop.h (ipa_parm_adjustment): Add REVERSE field.
	(build_ref_for_offset): Adjust prototype.
	* rtl.h (CONST_DOUBLE_AS_INT_P): New macro.
	(CONST_SCALAR_INT_P): Likewise.
	* print-tree.c (print_node): Convey TYPE_REVERSE_STORAGE_ORDER.
	* simplify-rtx.c (delegitimize_mem_from_attrs): Adjust call to
	get_inner_reference.
	(simplify_unary_operation_1) <NOT>: Deal with BSWAP.
	(simplify_byte_swapping_operation): New.
	(simplify_binary_operation_1): Call it for AND, IOR and XOR.
	(simplify_relational_operation_1): Deal with BSWAP.
	* stor-layout.c (compute_record_mode): Force BLKmode if the type has
	TYPE_REVERSE_STORAGE_ORDER set.
	(layout_type) <ARRAY_TYPE>: Likewise.
	* tree-affine.c (tree_to_aff_combination): Adjust call to
	get_inner_reference.
	(get_inner_reference_aff): Likewise.
	* tree-data-ref.c (split_constant_offset_1): Likewise.
	(dr_analyze_innermost): Likewise.  Punt if reverse storage order.
	* tree-dfa.c (get_ref_base_and_extent): Add PREVERSE parameter and set
	it to true upon encoutering a reference with reverse storage order.
	* tree-flow.h (get_ref_base_and_extent): Adjust prototype.
	* tree-flow-inline.h (storage_order_barrier_p): New inline predicate.
	* tree-inline.c (remap_gimple_op_r): Propagate the
	REF_REVERSE_STORAGE_ORDER flag.
	(copy_tree_body_r): Likewise.
	* tree-outof-ssa.c (insert_value_copy_on_edge): Adjust call to
	store_expr.
	* tree-sra.c (struct access): Add REVERSE field.
	(create_access): Adjust call to get_ref_base_and_extent and set the
	REVERSE according to the result.
	(build_access_from_expr_1): Preserve storage order barriers.
	(build_accesses_from_assign): Likewise.
	(build_ref_for_offset): Add REVERSE parameter and set the
	REF_REVERSE_STORAGE_ORDER flag accordingly.
	(build_ref_for_model): Adjust call to build_ref_for_offset and clear
	the REF_REVERSE_STORAGE_ORDER flag if there are components.
	(analyze_access_subtree): Likewise.
	(get_access_for_expr): Adjust call to get_ref_base_and_extent.
	(turn_representatives_into_adjustments): Propagate REVERSE flag.
	(sra_ipa_modify_expr): Adjust call to get_ref_base_and_extent.
	* tree-ssa.c (useless_type_conversion_p): Return false for array types
	with different TYPE_REVERSE_STORAGE_ORDER flag.
	* tree-ssa-alias.c (ao_ref_base): Likewise.
	(ao_ref_init_from_ptr_and_size): Likewise.
	(aliasing_component_refs_p): Likewise.
	(stmt_kills_ref_p_1): Likewise.
	* tree-ssa-dce.c (mark_aliased_reaching_defs_necessary_1): Likewise.
	* tree-ssa-loop-ivopts.c (may_be_nonaddressable_p) <MEM_REF>: New case.
	Return true if reverse storage order.
	<BIT_FIELD_REF>: Likewise.
	<COMPONENT_REF>: Likewise.
	<ARRAY_REF>: Likewise.
	<ARRAY_RANGE_REF>: Likewise.
	(may_be_unaligned_p): Adjust call to get_inner_reference.
	(split_address_cost): Likewise.  Punt if reverse storage order.
	* tree-ssa-pre.c (create_component_ref_by_pieces_1) <MEM_REF>: Set the
	REF_REVERSE_STORAGE_ORDER flag.
	<BIT_FIELD_REF>: Likewise.  Tidy up.
	* tree-ssa-sccvn.h (struct vn_reference_op_struct): Add REVERSE field.
	* tree-ssa-sccvn.c (vn_reference_eq): Return false on storage order
	barriers.
	(copy_reference_ops_from_ref) <MEM_REF>: Set REVERSE field according to
	the REF_REVERSE_STORAGE_ORDER flag.
	<BIT_FIELD_REF>: Likewise.
	<VIEW_CONVERT_EXPR>: Set it for storage order barriers.
	(contains_storage_order_barrier_p): New predicate.
	(vn_reference_lookup_3): Adjust calls to get_ref_base_and_extent and to
	native_encode_expr.  Punt on storage order barriers if necessary.
	(visit_reference_op_load): Do not look through a storage order barrier.
	* tree-ssa-structalias.c (get_constraint_for_component_ref): Likewise.
	(do_structure_copy): Likewise.
	* tree-streamer-in.c (unpack_ts_base_value_fields): Deal with
	TYPE_REVERSE_STORAGE_ORDER and REF_REVERSE_STORAGE_ORDER.
	* tree-streamer-out.c (pack_ts_base_value_fields): Likewise.
	* tree-vect-data-refs.c (vect_check_gather): Adjust call to
	get_inner_reference.
	(vect_analyze_data_refs): Likewise.
	* tree.c (stabilize_reference) <BIT_FIELD_REF>: Propagate the
	REF_REVERSE_STORAGE_ORDER flag.
	* tree.h (TYPE_REVERSE_STORAGE_ORDER): New flag.
	(TYPE_SATURATING): Adjust to above.
	(REF_REVERSE_STORAGE_ORDER): New flag.
	(get_inner_reference): Adjust prototype.
	(native_encode_expr): Likewise.
	(fold_flip_storage_order): Declare.
	* var-tracking.c (track_expr_p): Adjust call to get_ref_base_and_extent
	* varasm.c (output_constant): Move bulk of processing to...
	(output_constant_1): ... new function.  Add REVERSE parameter.
	<INTEGER_TYPE>: Flip the storage order of the value if REVERSE is true.
	<REAL_TYPE>: Likewise.
	<COMPLEX_TYPE>: Pass it to recursive calls.
	<ARRAY_TYPE>: Likewise.  Adjust call to output_constructor.
	<RECORD_TYPE>: Likewise.  Adjust call to output_constructor.
	(struct oc_local_state): Reorder fields and and REVERSE.
	(output_constructor_array_range): Adjust calls to output_constant.
	(output_constructor_regular_field): Likewise.
	(output_constructor_bitfield): Replace OUTER parameter with BIT_OFFSET
	and adjust accordingly.  Adjust call to output_constructor.  Flip the
	storage order of the value if REVERSE is true.
	(output_constructor): Add REVERSE parameter.  Set it to true for an
	aggregate type with TYPE_REVERSE_STORAGE_ORDER.  Reorder and adjust
	call to output_constructor_bitfield.
fortran/
	* target-memory.c (encode_integer): Adjust call to native_encode_expr.
	(encode_float): Likewise.
	(encode_logical): Likewise.
	(gfc_encode_character): Likewise.

[L207-008: attribute Scalar_Storage_Order development]
(Superseded by change on gcc-4.9 branch)

commit 54027c15c9831596f3807d2efcd2ab9829839a5f
2012-07-27  Tristan Gingold  <gingold@adacore.com>

	* config/darwin.opt (framework): Add Joined.

[L706-013: Darwin: accept -framework=xxx]
(To be submitted)

commit c8d71e7254ebdac31c8b9cdd7a422f4ad0d8db63
2012-07-22  Jose Ruiz  <ruiz@adacore.com>

	* config.sub: Acknowledge leon*-* as a supported configuration.
gcc/
	* configure.ac: Once we're done with the variable settings
	intended to influence the install directory names, turn leon into
	sparc in $target and set with_cpu to leon.
	* configure: Regenerate.
libcpp/
	* configure.ac: Turn leon* into sparc in $target.
	* configure: Regenerate.
libgcc/
	* configure.ac: Turn leon* into sparc in $target.
	* configure: Regenerate.
	* config.host: Take into account that for leon targets we
	do not want t-softmul.

[L403-035: gcc-4.7 transition, leon*-elf]
(Not to be submitted. To be replaced by the use of --with-program-prefix)

commit 273195ca4416fdad2b6fdf7e9ac4d582b46cdec8
2012-07-20  Jose Ruiz  <ruiz@adacore.com>

	* config/sparc/vxworks.h (TARGET_OS_CPP_BUILTINS): Use CPU=SPARC
	instead of SIMSPARCSOLARIS because we are targeting embedded
	VxWorks and not the simulator.
	(LIB_SPEC): Add the path to the VxWorks libraries required for
	building RTPs.

[L330-014: Add LEON VxWorks configuration, using the prefix sparc-wrs-vxworks]
(To be submitted)

revert-by 139a03444ff50e84b9602fd25e8132d5c94f993a
commit 7fd957c955b5b383b880c961c771133b81925778
2012-07-13  Eric Botcazou  <ebotcazou@adacore.com>

	* gimple-fold.c (canonicalize_constructor_val): Strip only useless type
	conversions.

[L712-034: verification failure on KC21_022 with GCC 4.7]
(Installed in GCC 4.7 on 2012-07-19 - revision 189686)

commit 22e7bd60271e93ec2f5e1e494ed335c78c1b97c8
2012-07-11  Olivier Hainque  <hainque@adacore.com>

	* scos.c (open_sco_file): Generate a -fpreserve-control-flow A line
	when the flag is set.

[KC08-045: gnatcov check for -fpreserve-control-flow]
(To be submitted)

revert-by 9cd397034697bf7ff2b5dce27e8ea656ff3bf65d
commit a8ae325bdd4636efbc112a302f63daec2a737c66
2012-07-06  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/sparc.md (adddi3_insn_sp32): Add earlyclobber.

[L706-008: miscompilation of g-calend.adb on SPARC/Solaris GCC 4.7]
(Installed in GCC 4.7 on 2012-07-19 - revision 189690)

revert-by a31546151d94b9da5ee90c3155e57e5a839bc8d0
commit 6a03fb6e6e05c757bc210949a316923c7807f88c
commit e9e0ebd7fcc79776d5b9d607daa62a9bf5954a44
2012-07-05  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-ccp.c (valid_lattice_transition): Allow transitioning from
	as well as to INTEGER_CST.

[L705-005: internal error on loop at -O with SJLJ and GCC 4.7]
(Obsolete for GCC 4.7)

commit 152641da274ba62fc1d7470d2607c4f3d21a6342
2012-07-05  Olivier Hainque  <hainque@adacore.com>

	* config/vxworks.h (VXWORKS_LIB_SPEC): Condition -lnet -ldsi on vxcert.

[L410-020: port to e500v2 vx6cert]
(To be submitted)

revert-by 0f87080fd0b214afb6f6c20ffc01d1bbfbee5266
commit f5301fc83cb765aafb447b3a74322393e3b49fbf
2012-07-05  Olivier Hainque  <hainque@adacore.com>

	* config/vxworks.h (STARTFILE_SPEC, ENDFILE_SPEC): Move the
	crtbegin/crtend inclusion directions from here to ...
	* config/rs6000/vxworks.h (STARTFILE_SPEC, ENDFILE_SPEC): here.
	Remove the crtbe/nocrtbe control.
	* config/vxworks.opt: Remove crtbe/nocrtbe.

[L504-017: powerpc-vxworks transition to gcc 4.7]
(To be submitted)

commit 850b56fc09a265cd481fbcf6c17061022cb79af7
2012-07-05  Eric Botcazou  <ebotcazou@adacore.com>

	* gimple-low.c (lower_try_catch): New function.
	(lower_stmt) <GIMPLE_TRY>: Use it to lower GIMPLE_TRY_CATCH.
	<GIMPLE_CATCH>: Delete.
	<GIMPLE_EH_FILTER>: Likewise.

[L703-040: spurious no-return warning with exception block]
(Installed in GCC 4.8 on 2012-07-25 - revision 189865)

commit b3ac719aa00fda36fb51cdd10cbc04d947c4e346
2012-07-05  Olivier Hainque  <hainque@adacore.com>

libstdc++-v3/
	* acinclude.m4 (check for mutex_timelock): Check straight
	on _POSIX_TIMEOUTS, regardless of defined (_PTHREADS).
	* configure: Regenerate.

[L705-004: gcc 4.7 build failure from mutex_timedlock on aix 5.2]
(To be submitted)

commit 00eec9e9b2a420fd1b3fa887e9daddd2cd795873
2012-07-04  Olivier Hainque  <hainque@adacore.com>

	* config.sub: Acknowledge e500v[12]-* as a supported configuration.
gcc/
	* config/vxworks.opt (vxcert, vxsmp): New options.
	* config/rs6000/vxworks.h (LIB_SPEC): Adjust to select -L for rtp
	static links depending on cert/smp/cpu.
	* configure.ac: Once we're done with the variable settings intended
	to influence the install directory names, turn e500v[12] into powerpc
	in $target and set with_cpu.
	* configure: Regenerate.
libgcc/
	* configure.ac: Turn e500v[12] into powerpc in $target.
	* configure: Regenerate.

[L628-048: gcc-4.7 transition, e500v2-vxworks]
(To be ported or replaced by use of --with-program-prefix)

commit 5cb49b58ed85e582c5e6bc2c84d755c1fab2da33
2012-07-04  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/aix52.h (TARGET_EXTRA_BUILTINS): Define as 0.

[L704-004:  gcc 4.7 -maix64 multilib build failure on ppc-aix]
(Already in GCC 4.8)

commit 35d41c53d8a17dc498c23edc70fdc1289a7e9ee3
commit e275463baf0d34a1f28653406783a9b17c1a49da
2012-07-02  Olivier Hainque  <hainque@adacore.com>

libgcc/
	* config/t-vxworks (LIBGCC2_INCLUDES): Add explicit include path to
	object directory. Improve comments.

[L629-005: ppc-vx6-win gcc 4.7 libgcc/stddef build failure]
(To be submitted)

revert-by 6e571d8f63afb8d0f5b1e8d6c40c6e158b9416d2
commit a9d17001af1179202db556dbcca302e15d0108c1
2012-07-02  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-forwprop.c (combine_conversions): Punt if the RHS of the
	defining statement is a SSA name that occurs in abnormal PHIs.

[L702-006: internal error for LocalInstantiations at -O1]
(Installed in GCC 4.7 on 2012-07-19 - revision 189688)

commit c15980b80cde26a806879460e2b8b2a00cf1d563
2012-06-28  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 189042
testsuite/
	* gnat.dg/deep_old.adb, gnat.dg/old_errors.adb: Removed, obsolete.

[K330-011: allow 'Old attribute only in postconditions]
(Already in GCC 4.8)

commit 3f18a7274867a3c2a72b7a0a02dd774744db4334
2012-06-28  Olivier Hainque  <hainque@adacore.com>

	* tree-emutls.c (new_emutls_decl): When a var_section is requested by
	the target, attach the new decl to that, not to the template section.

[L628-017: vxworks tls support broken with gcc 4.7]
(Installed in GCC 4.8 on 2012-08-06)

commit 15bacc0c49c151f8d2eb340f612e2b3b50dda0ed
2012-06-27  Olivier Hainque  <hainque@adacore.com>

	* config/vxworks.opt: Add entry for -vxsim.
	* config/i386/vxworks.h: Augment LIB_SPEC to include the -L options
	that will allow to find crt0 for mrtp !shared.

[L627-013: gcc-4.7 transition, i586-vxworks]
(To be submitted)

commit 3b993fe6d41ca3ceadc3fc3a077f5b0fb6c6dab5
2012-06-25  Olivier Hainque  <hainque@adacore.com>

	* config/vxworks.opt: Add crtbe/nocrtbe as well as
	auto-register/noauto-register.
	* config/vxworks.h (DWARF2_UNWIND_INFO): Define.
	(VXWORKS_STARTFILE_SPEC): Adjust to include the	crtstuff objects on
	demand for dwarf eh support.
	(VXWORKS_ENDFILE_SPEC): Likewise.
	(HAS_INIT_SECTION): Define.
	(INIT_ASM_SECTION_OP, FINI_ASM_SECTION_OP): Undef.
	(USE_TM_CLONE_REGISTRY, USE_EH_FRAME_REGISTRY):	Define.
	(TARGET_USE_JCR_SECTION): Define.
	* crtstuff.c (JCR_SECTION_NAME): #undef if TARGET_USE_JCR_SECTION is 0.
	(USE_EH_FRAME_REGISTRY && vxworks): Provide ctor/dtor functions for
	eh registration, with names that kernel builds will recognize as a
	ctor/dtor to run as well. Include _ctors/_dtors auto-call VxWorks hooks
	in crtbegin, not crtbeginT.

[L504-017: ppc-vxworks transition to gcc 4.7]
(To be submitted)

revert-by c7e11a94e9612fe961e9501671dac09a922bbfa4
commit ef2db536f8a9d11ad3d8b622736aed50f20cf8a6
2012-06-23  Olivier Hainque  <hainque@adacore.com>

libgcc/
	* Makefile.in (clean): Remove libgcc_tm.stamp as well.
	Use a separate command for stamp removals.

[L504-017: gcc-4.7 transition, ppc/e500-vxworks]
(Installed in GCC 4.7 on 2013-05-20 - revision 199091)

commit [dump-xref]
2012-06-22  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c (output_references): Generate special 'i' reference
	for global C++ mangled names.
	(output_asm_reference): New function, dealing with internal names.

[L503-002: Generate C++ mangled names]
(Superseded by change on gcc-4.9 branch)

commit c5d90d1f45ed7100b3ee435dd7490f292fbc9403
2012-06-21  Tristan Gingold  <gingold@adacore.com>

	* tree-eh.c (emit_eh_dispatch): Add loc argument.
	(lower_catch): Adjust call.
	(lower_eh_filter): Likewise.
	(lower_eh_dispatch): Set location.

[L620-003: gnatcov ppc-vx6 failure on handler stmt]
(To be submitted)

revert-by cdc021c2cec739209a0bd6de9b88535b689aeedb
commit b3413af7ad28ad4db5424998487ec319bd64e648
2012-06-21  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-ssa-live.c (remove_unused_scope_block_p): Remove again
	DECL_IGNORED_P non-reg vars even if they are used.

[L621-010: internal error on return statement with LTO and -g]
(Installed in GCC 4.7 on 2012-06-22 - revision 188873)

commit 1b1e6778c658b5d7cdc4f7dd054d9fa6be4deda8
2012-06-19  Tristan Gingold  <gingold@adacore.com>

	* doc/extend.texi (X86 Built-in Functions): Document
	__builtin_establisher_frame.
	* config/i386/i386.md: Delete unused UNSPEC_REG_SAVE,
	UNSPEC_DEF_CFA constants.
	Add UNSPEC_ESTABLISHER_FRAME.
	(establisher_frame): Add insn.
	* config/i386/i386.c (enum ix86_builtins): Add
	IX86_BUILTIN_ESTABLISHER_FRAME.
	(ix86_init_builtins): Add __builtin_establisher_frame.
	(ix86_expand_builtin): Handle IX86_BUILTIN_ESTABLISHER_FRAME.
	(ix86_output_establisher_frame): New function.
	* config/i386/i386-protos.h (ix86_output_establisher_frame): Declare.

[L427-009: move to native SEH on x86_64-windows]
(Already in GCC 4.8)

commit 6e914001d5f2bf310a216bf4858b7139aac9a943
2012-06-19  Tristan Gingold  <gingold@adacore.com>

libgcc/
	* config.host (powerpc-*-eabispe*): Add t-fdpbit.

[L618-032 - p55-elf missing fp/dp-bit]
(To be submitted)

revert-by 7adb7b4976ef7e9eccd30c34a3a19b8cd0ce01e2
commit 5b2671a5f8d74f7009bf8c5959e45fa4169fdb79
2012-06-09  Eric Botcazou  <ebotcazou@adacore.com>

	* config/rs6000/sync.md (atomic_load): Fix thinko.
	(atomic_store): Likewise.

[K606-022: properly implement atomic on all targets]
(Obsolete for GCC 4.7)

revert-by 8adb0624461f979dc63622eef11dba902f1c9837
commit ab290f8bc9fe41c258560ea92ed7941ffd8cb5ea
2012-06-07  Tristan Gingold  <gingold@adacore.com>

	* config/i386/i386.c (ix86_compute_frame_layout): Adjust fp
	location on SEH targets.
	(ix86_expand_prologue): Push int registers before setting fp.
libgcc/
	* unwind-seh.c: Minor cleanup.

[L427-009: move to native SEH on x86_64-windows]
(Obsolete for GCC 4.9)

commit 509fd3ad0dce8f7289090edb62b3612c00aa96e5
2012-06-05  Eric Botcazou  <ebotcazou@adacore.com>

	* doc/extend.texi (Other Builtins): Document __builtin_bswap16.
	(PowerPC AltiVec/VSX Built-in Functions): Remove it.
	* doc/md.texi (Standard Names): Add bswap.
	* builtin-types.def (BT_UINT16): New primitive type.
	(BT_FN_UINT16_UINT16): New function type.
	* builtins.def (BUILT_IN_BSWAP16): New.
	* builtins.c (expand_builtin_bswap): Add TARGET_MODE argument.
	(expand_builtin) <BUILT_IN_BSWAP16>: New case.  Pass TARGET_MODE to
	expand_builtin_bswap.
	(fold_builtin_bswap): Add BUILT_IN_BSWAP16 case.
	(fold_builtin_1): Likewise.
	(is_inexpensive_builtin): Likewise.
	* optabs.c (expand_unop): Deal with bswap in HImode specially.  Add
	missing bits for bswap to libcall code.
	* tree.c (build_common_tree_nodes): Build uint16_type_node.
	* tree.h (enum tree_index): Add TI_UINT16_TYPE.
	(uint16_type_node): New define.
	* config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_BSWAP_HI): Delete.
	* config/rs6000/rs6000.c (rs6000_expand_builtin): Remove handling of
	above builtin.
	(rs6000_init_builtins): Likewise.
	* config/rs6000/rs6000.md (bswaphi2): Add TARGET_POWERPC predicate.
c-family/
	* c-common.h (uint16_type_node): Rename into...
	(c_uint16_type_node): ...this.
	* c-common.c (c_common_nodes_and_builtins): Adjust for above renaming.
	* c-cppbuiltin.c (builtin_define_stdint_macros): Likewise.
testsuite/
        * gcc.dg/builtin-bswap-1.c: Test __builtin_bswap16 & __builtin_bswap64.
        * gcc.dg/builtin-bswap-4.c: Test __builtin_bswap16.
        * gcc.dg/builtin-bswap-5.c: Likewise.
        * gcc.target/i386/builtin-bswap-4.c: New test.

[L207-008: attribute Scalar_Storage_Order development]
(Installed in GCC 4.8 on 2012-04-11 - revision 186308)

commit d2bdca18cda45af1d0182948e19ba0c883b686d6
2012-06-04  Olivier Hainque  <hainque@adacore.com>

libgcc/
	* config/t-vxworks (LIBGCC2_INCLUDES): Remove extraneous $
	in attempt at fetching the value of MULTIDIR.

[L504-017: gcc-4.7 transition, ppc/e500-vxworks]
(Superseded by change on gcc-4.9 branch)

commit be83e1079aa187842093dd3cbdbc5d5f7e15b6f3
commit 9db8f5a094e563d584a93e8d2934fcb25e1b44ff
commit e671b5242b86b995f6f5203dead95a786ea00607
commit 44def25d951042771a3cbd8605bc73478136d4b4
commit 00ab774e0a57dbf256a6966be78748dc7408f838
2012-06-02  Eric Botcazou  <ebotcazou@adacore.com>
            Jose Ruiz  <ruiz@adacore.com>

	* calls.c (emit_library_call_value_1): Clear the ECF_NOTHROW flag if
	the libcall is LCT_THROW.
	* explow.c (stack_check_symbol): New public variable.
	(stack_check_libfunc): Make public.
	(set_stack_check_symbol): New function.
	(STACK_HIGH, STACK_LOW): New macro.
	(probe_stack_range): Pass LCT_THROW to emit_library_call for the
	checking routine.  Add support for stack limits provided by the
	stack_check_symbol variable.
	Do not include gt-explow.h.
	* libfuncs.h (set_stack_check_symbol): Declare.
	* rtl.h (stack_check_symbol): Likewise.
	(stack_check_libfunc): Likewise.
	* Makefile.in (explow.o): Remove gt-explow.h.
	* config/arm/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Define to 1.
	(STACK_CHECK_PROTECT): Reserve 8KB of stack to propagate exceptions
	reliably in case of stack overflow.
	* config/arm/arm.c (arm_emit_probe_stack_range): Handle stack limits.
	(output_cond_trap): New function.
	* config/arm/arm-protos.h (output_cond_trap): Declare.
	* config/arm/arm.md (type attribute): Add 'trap' value.
	(trap): New insn.
	(cond_trap): Likewise.
	* config/i386/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Define to 1.
	(STACK_CHECK_PROTECT): Reserve 8KB of stack to propagate exceptions
	reliably in case of stack overflow.
	* config/i386/vxworksae.h (STACK_CHECK_PROTECT): Redefine to 4KB
	which is enough for executing a possible last chance handler.
	* config/i386/i386.c (ix86_compute_frame_layout): Do not force use of
	push instructions to save registers if stack limits are enabled.
	(ix86_emit_probe_stack_range): Handle stack limits.
	(output_cond_trap): New function.
	* config/i386/i386-protos.h (output_cond_trap): Declare.
	* config/i386/i386.md (cond_trap): New insn.
	* config/rs6000/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Define to 1.
	(STACK_CHECK_PROTECT): Reserve 8KB of stack to propagate exceptions
	reliably in case of stack overflow.
	* config/rs6000/vxworksae.h (STACK_CHECK_PROTECT): Redefine to 4KB
	which is enough for executing a possible last chance handler.
	* config/rs6000/rs6000.c (rs6000_emit_probe_stack_range): Handle
	stack limits.
	* config/sparc/vxworks.h (STACK_CHECK_STATIC_BUILTIN): Define to 1.
	(STACK_CHECK_PROTECT): Reserve 8KB of stack to propagate exceptions
	reliably in case of stack overflow.
	* config/sparc/sparc.c (sparc_emit_probe_stack_range): Handle stack
	limits.

[JB15-001: stack checking symbol missing on ppc-vxworks]
[M304-035: add STACK_CHECK_STATIC_BUILTIN with limits for SPARC]
[M503-016: add stack checking support to ARM/VxWorks]
(To be ported)

commit daf22db47042f00c3abdc5fda2c5e8235dca2868
2012-06-01  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/vxworks.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Restore
	the "do {" part of the do-while(0) loop.

[L504-017: gcc-4.7 transition, ppc/e500-vxworks]
(Installed in GCC 4.8 on 2012-06-01 - revision 188114)

commit ceac5678972f0888a191b83c8638c288a4eed99c
commit fbbc86f5261ed2c17376f3da17490325ccc19d80
2012-06-01  Tristan Gingold  <gingold@adacore.com>

libgcc/
	* config/ia64/unwind-ia64.h: Handle HP-UX.
	* config/ia64/fde-hpux.c: New file.
	* config/ia64/hpux-unwind.h: New file.
	* config/ia64/t-eh-hpux: New file.
	* config/ia64/unwind-ia64.c (struct _Unwind_Context): Add
	sigctxt field.
	* config.host: Conditionnaly use t-eh-ia64 and t-eh-hpux,
	and defines md_unwind_header.
gcc/
	* config.gcc (ia64*-*-hpux*): Conditionnaly use t-libunwind.
	* config/ia64/t-hpux (T_CFLAGS): Remove.
	* config/ia64/hpux.h (LINK_GCC_C_SEQUENCE_SPEC): Define if
	USE_LIBUNWIND_EXCEPTIONS isn't defined.

[L427-021: gcc-4.7 transition, ia64-hpux (switch to ZCX)]
(To be submitted)

commit ca82a8b59341517313543850e2612532bd27b151
2012-06-01  Tristan Gingold  <gingold@adacore.com>

libgcc/
	* config/ia64/unwind-ia64.h: Declare unw_word and unw_sword.
	(unw_table_entry): Use unw_word instead of unsigned long.
	(_Unwind_FindTableEntry): Likewise.
	* config/ia64/fde-glibc.c (_Unwind_FindTableEntry): Likewise.
	* config/ia64/fde-vms.c (vms_unwtable_entry): Likewise.
	(_Unwind_FindTableEntry): Likewise.
	* config/ia64/unwind-ia64.c (unw_reg_info, unw_reg_state)
	(unw_labeled_state, unw_state_record, unw_stack, _Uwind_Context)
	(set_reg, alloc_spill_area, finish_prologue, ia64_rse_slot_num)
	(ia64_rse_is_rnat_slot, ia64_rse_rnat_addr, ia64_rse_num_regs)
	(ia64_rse_skip_regs, ia64_copy_rbs, unw_access_gr)
	(uw_frame_state_for, uw_update_reg_address, uw_update_context)
	(uw_init_context_1, uw_install_context): Likewise.
	(unw_word): Move to unwind-ia64.h

[L427-021: gcc-4.7 transition, ia64-hpux (switch to ZCX)]
(Already in GCC 4.8)

commit [dump-xref]
2012-06-01  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-xref.c (is_system_include): Rename to...
	(skip_location): ...this.  Apply C++ specific treatment here.
	(skip_xref): Adjust for above change.
	(skip_xref_macro): Delete.
	(generate_macro_reference): Call skip_location directly.

[L510-028: couple of -fdump-xref failures with GCC 4.7]
(Superseded by change on gcc-4.9 branch)

revert-by 814442ece08e7da9ff9c761cb8115f1ef04069fc
commit 5f1b4d1ac2f1a2bceff1ae3b55451ebe196b506a
2012-05-30  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-dfa.c (get_ref_base_and_extent): Compute the offset using
	double ints throughout.
	<ARRAY_REF>: Do the offset computation using the precision of the
	index type.

[L525-017: internal error on huge composite type at -O2 or above]
(Installed in GCC 4.7 on 2014-03-18 - revision 208640)

commit 5f1b4d1ac2f1a2bceff1ae3b55451ebe196b506a
2012-05-30  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-sra.c (build_user_friendly_ref_for_offset) <RECORD_TYPE>:
	Check that the position of the field is representable as an integer.

[L525-017: internal error on huge composite type at -O2 or above]
(Installed in GCC 4.8 on 2012-05-31 - revision 188060)

commit 7c2e27238bdfee7e2c6724b5fe3fec25ed33a69b
commit e8f5bd3543d8263cef8bd104942d3d10f3820243
commit 4f2f5b62c7fff743d0d707f231a3f57dc1f1be63
commit 175dcd65bd1d06e4b29f115be499e81f1158016d
commit 65c3ab868d4434b66b0d5cfc8dee1fa7358db342
commit 220f5419ef6d132f77026d40d33eaea22a329c47
commit 816980c261a0c9b759310dddd65b354ecd4f7c8b
2012-05-29  Eric Botcazou  <ebotcazou@adacore.com>

	* rtl.h (HAS_MULTI_LOCATION): New macro.
	(insn_multi_location): Declare.
	(insn_location): Likewise.
	(add_insn_locator): Likewise.
	* cfglayout.c (multi_locators_locs): New variable.
	(multi_locators_vals): Likewise.
	(insn_locators_alloc): Initialize them if -fpreserve-control-flow is
	enabled.
	(insn_locators_free): Free them if -fpreserve-control-flow is enabled.
	(add_insn_locator): New global function.
	(remove_multi_locator): New function.
	(locator_scope): Invoke it on the locator.
	(locator_location): Likewise.
	(insn_multi_location): New global function.
	(insn_location): Likewise.
	* debug.h (struct gcc_debug_hooks): Add COL parameter to source_line.
	(debug_nothing_int_charstar_int_bool): Delete.
	(debug_nothing_int_charstar_int_int_bool): Declare.
	* debug.c (do_nothing_debug_hooks): Replace former with latter.
	(debug_nothing_int_charstar_int_bool): Delete.
	(debug_nothing_int_charstar_int_int_bool): New function.
	* dbxout.c (dbxout_source_line): Add COL parameter.
	(dbxout_begin_prologue): Adjust call to above function.
	* dwarf2out.c (dwarf2out_source_line): Add COL parameter and handle it.
	(dwarf2out_begin_prologue): Adjust call to above function.
	(new_line_info_table): Set column number to 0.
	* sdbout.c (sdbout_source_line): Add COL parameter.
	* vmsdbgout.c (vmsdbgout_source_line): Add COL parameter and handle it.
	(vmsdbgout_write_source_line): Likewise.
	(vmsdbgout_end_prologue): Adjust call to above function.
	(vmsdbgout_begin_epilogue): Likewise.
	(vmsdbgout_end_epilogue): Likewise.
	* xcoffout.h (xcoffout_source_line): Add COL parameter.
	* xcoffout.c (xcoffout_source_line): Likewise.
	* final.c (last_colnum): New static variable.
	(final_scan_insn): Pass last_colnum to source_line hook.  Deal with
	multi-location insns.
	(notice_source_line): Use insn_location to retrieve the insn location.
	If -fpreserve-control-flow is enabled, force a source line before each
	control flow change.  Set last_colnum.  Return true for an insn in a
	delay slot and with multiple location and if it doesn't have the same
	locator as the delayed insn.
	* print-rtl.c (print_rtx) <i>: Print column information as well.
	* var-tracking.c (delete_debug_insns): If -fpreserve-control-flow is
	enabled, add the source locations of the debug insns to real insns.
testsuite/
	* lib/scanasm.exp (dg-function-on-line): Accept a column number.

[L521-035: implement -fpreserve-control-flow in 4.7 compiler]
(To be submitted)

commit d44ae8676b2f3a06c35dae94ea67aa60fb1df48f
commit 27accb1ccab1b067d6b5b4a2cdfdf1ebd6c7e91e
commit 8035a85a272f9fecc13ac17b5619cd8027b09056
commit b5dfb0c256b9d98fa43c903ca1071bc4c4a0ce2b
commit 1ca6896f7669839027754905465ada4ff3641740
commit e577fdbafc6349fffab91c298f20dc50b17449f6
revert-by db256d7ab6dce8168b09379b100af97d3182d89e
commit f94025916494c1d0a35b9aff32ee20e144af7f24
commit fb8b3f61699eadd6f6a8210a398abb3c0eb26965
commit 0b7099ec620216425f9351d4121da342580d2605
revert-by de674cbd03f9f859e2a2bda8425b8f21040b6a50
commit c41491afe8eb4a790fd0416ff9e03c45bb54c284
commit 838c16aad14270c7fb8163f2b8347d7d5096fcfb
commit a88b21288c57412c27d0de88e4326708a8192964
commit 00499e9d08c54a7e771b80db5971833fa3b4bea8
commit d0d14e3c28309277385a704489030cbb58312cd3
commit a7a2c18f856464736cc91180d521d0f3dcb7f60b
commit f3819cc8d795df1c567cb0eb8224a05a1406d501
commit e60414a58b4cbaaa3be5523b45afeac39c4040c1
2012-05-29  Eric Botcazou  <ebotcazou@adacore.com>

	* calls.c (expand_call): Before the call, set the current location to
	that of the expression, if any.
	* cfgbuild.c (make_label_edge): Set goto_locus to the locator of the
	last instruction in the block if this is the return label.
	* cfgexpand.c (expand_gimple_cond): Adjust calls to jumpif[not]_1.
	(expand_gimple_basic_block): If a return doesn't have a location and is
	the first statement after a label in the basic block, set the current
	location to the locus of the function's end.
	(gimple_expand_cfg): Deal specially with instructions inserted on the
	single successor edge of the entry block.  Call commit_edge_insertions
	instead of inserting the other instructions manually.
	* cfglayout.c (set_insn_locators): New function moved from...
	* cfgrtl.c (next_actual_insn): New function.
	(EDGE_TABLE_SIZE): Define.
	(EDGE_TO_SPLIT): Likewise.
	(EDGE_TO_REDIRECT): Likewise.
	(edge_hash): New helper function.
	(edge_eq): Likewise.
	(hash_edge): New function.
	(split_edges): Likewise.
	(commit_edge_insertions): Hash the incoming edges of each basic block
	to avoid creating duplicate basic blocks when the instructions are
	inserted in the RTL stream.
	* dojump.c (do_jump_by_parts_greater): Before doing the jump, set the
	current location to that of the expression, if any.
	(do_jump_by_parts_equality): Likewise.
	(do_compare_and_jump): Likewise.
	(do_jump_1): Make static.  Add LOC parameter.  Adjust calls to above
	functions.
	(do_jump): Make static.  Add LOC parameter.  Adjust calls to self.
	Set the source location on the jump.
	(jumpifnot): Move around.  Adjust call to do_jump.
	(jumpif): Likewise.
	(jumpifnot_1): Add LOC parameter.  Adjust call to do_jump_1.
	(jumpif_1): Likewise.
	* except.c (emit_to_new_bb_before): Make sure to put a location on SEQ.
	* expr.h (do_jump): Delete.
	(do_jump_1): Likewise.
	(jumpifnot_1): Add LOC parameter.
	(jumpif_1): Likewise.
	* expr.c (expand_expr_real_2): Adjust calls to jumpifnot_1.
	(expand_expr_real_1): Call jumpif[not] instead of do_jump.
	* function.c (set_insn_locators): ...there.
	(thread_prologue_and_epilogue_insns): Set epilogue_locator for returns.
	* gimplify.c (adjusted_expr_location): New static function.
	(shortcut_cond_expr): Set adjusted location on the new branch.
	(gimplify_cond_expr): Set adjusted location on the statement.
	(gimplify_variable_sized_compare): Preserve the source location of the
	expression.
	(gimplify_expr): Set input_location to the adjusted location.
	* loop-invariant.c (move_invariant_reg): Remove LOOP parameter, add BB
	and CLEAR_LOC parameter.  Clear the locator of the invariant's insn if
	CLEAR_LOC is true and adjust recursive calls.
	(empty_bb_p): New predicate.
	(move_invariants): Adjust to above change.  Clear the locator of moved
	invariants unless it cannot be taken from the preheader.
	* reg-stack.c (compensate_edge): Set the locator if the sequence is
	inserted on the edge.
	* reorg.c (emit_delay_sequence): Do not copy INSN_LOCATOR.  Do not zap
	INSN_LOCATOR of insns put into a delay sequence.  If the delayed insn
	has no location, inherit that of the last insn in the delay slot.
	(dbr_schedule): Likewise for that of the epilogue, if any.
	(relax_delay_slots): Preserve the INSN_LOCATOR when an insn in a delay
	slot is re-emitted in the stream.
	(make_return_insns): Likewise.  Use emit_copy_of_insn_after for the
	insns in the delay slot and add_insn_after for the jump insn.
	* rtl.h (set_insn_locators): Declare.
	* tree-cfg.c (gimple_make_forwarder_block): Propagate location info on
	phi nodes if possible.
	* tree-eh.c (replace_goto_queue_1) <GIMPLE_GOTO>: Propagate location.
	* tree-scalar-evolution.c (scev_const_prop): Propagate location info
	on phi arguments.
	* tree-sra.c (generate_subtree_copies): Add BLOCK argument and set it
	along with the location.
	(init_subtree_with_zero): Likewise.
	(sra_modify_expr): Propagate the block along with the location.
	(handle_unscalarized_data_in_subtree): Likewise.
	(load_assign_lhs_subreplacements): Likewise.
	(sra_modify_constructor_assign): Likewise.
	(sra_modify_assign): Likewise.
	(initialize_parameter_reductions): Likewise.
	* tree-ssa-loop-im.c (move_computations_stmt): Clear location and block
	of the invariant's statement after it has been moved.
	* tree-ssa-loop-manip.c (create_iv): Set location information on the
	newly created statement.
	* config/sparc/sparc.c (output_return): Output the source location of
	the insn in the delay slot, if any.
	(output_sibcall): Likewise.
testsuite/
	* gcc.dg/noreturn-1.c: Adjust line of warning.

[L521-035: implement -fpreserve-control-flow in 4.7 compiler]
(To be submitted)

commit e6c73ea12c45fddc6e1c023f38b87a388890e17a
commit 4348d8a4736435f59ce382f80cfa40e3151cbf97
commit be990988c9e624bcea37a954c3229418e935542a
commit 6429ca784e3c3f537e57cb93d3e25c9cc6fd99b7
commit 6cf50f1bef3a189e6cabb7ea01d8365cb3227a4c
commit 382fdab5de8cfedb6155679790a1ee987679dccc
commit 8082bd922545ee2ec18b553b83b49864098e7e3a
commit e1729b36a5e8ec8ec622cd7a067e41839e881f0e
commit 4aab5560c7847928464324e97c34e2a5a1269bde
commit 3e732ebc193a74ee8f7165c7bd49ae9194960feb
commit 3077d99ff8ee6502ae9164a18369e660297ba63a
commit 47f343a80a64521a36e1c3b20b477604ca000768
commit 7605ddcbec6119cbb0e52f43735beaeb29fb3ffd
commit 271a22581a2ceaf149e96bb0dfde3e3336556b2f
commit e293e7e9193223497ab164b8f3c251b0e709f181
commit 2ab880fbf175999a18e4dcfe5193b6cf9f8f4dd3
commit d6ebbe5521d1398b1b48fc081271bdee23a77175
commit 0f164d1119bd85fd6041089894e8072b0c47c36a
commit 780e6fe6628f623e873276335baf1ade01d31dfc
commit cc2bdc36bac29611cacd77147e0e1834476e6f6c
commit 092b2b63ed57f15bd693faefb63d640648125279
2012-05-29  Eric Botcazou  <ebotcazou@adacore.com>
            Olivier Hainque  <hainque@adacore.com>
            Tristan Gingold  <gingold@adacore.com>

	* common.opt (-fpreserve-control-flow): New option.
	* doc/invoke.texi (Optimize Options): Document it.
	* doc/gcov.texi (Precise Decision Coverage): New section.
	* basic-block.h (unique_locus_on_edge_between_p): Declare.
	* flags.h (optimize_cfg): New macro.
	* cfglayout.c (fixup_reorder_chain): Test it in lieu of optimize and in
	conjunction with DECL_IGNORED_P.
	* dce.c (delete_unmarked_insns): Preserve nops that carry source locus
	if -fpreserve-control-flow is enabled.
	* gimple-low.c (lower_gimple_return): Likewise.
	* cfgcleanup.c (move_debug_insns_from_forwarder_block): New function.
	(try_forward_edges): Call it.  Test optimize_cfg in lieu of optimize.
	Do not forward the goto_locus on the edge if it is already present on
	the cond jump in the block.
	(try_simplify_condjump): Punt if not optimizing CFG and there is a
	unique locus on the single successor edge of the jump block.
	(try_optimize_cfg): Call move_debug_insns_from_forwarder_block.
	* cfgrtl.c (unique_locus_on_edge_between_p): New global function,
	extracted from cfg_layout_merge_blocks.  Search farther insns with
	matching locus if optimization is enabled.  Scan block A last.  When
	optimizing, return true if block B is the original epilogue's block.
	(emit_nop_for_unique_locus_between): New static function.
	(rtl_merge_blocks): Invoke it if not optimizing CFG and DECL_IGNORED_P
	is false, and adjust.
	(cfg_layout_merge_blocks): Likewise.
	* cse.c (insn_live_p): Do not return false for consecutive debug insns
	if -fpreserve-control-flow is enabled.
	* fold-const.c (combine_comparisons): Disable some optimizations of
	short-circuit operators if -fpreserve-control-flow is enabled.
	(fold_truth_not_expr) <TRUTH_NOT_EXPR>: Likewise.
	(fold_range_test): Likewise.
	(fold_truth_andor_1): Likewise.
	(fold_truth_andor): Likewise.
	(fold_binary_loc): Likewise.  If -fpreserve-control-flow is enabled,
	do not fold operations on conditional expressions and comparisons of
	boolean expressions against zero.
	(fold_ternary_loc) <COND_EXPR>: Do not try to fold if the condition is
	a comparison and -fpreserve-control-flow is enabled.
	Do not fold if the expression is a redundant instantiation of a truth
	value and -fpreserve-control-flow is enabled.
	* function.c (thread_prologue_and_epilogue_insns): When attempting to
	generate return instructions, do not redirect an edge holding a unique
	locus if -fpreserve-control-flow is enabled.
	* opts.c (finish_options): Disable a few selected optimizations if
	-fpreserve-control-flow is enabled.  Inform that the option is not
	supported at -O2 or above and disable it in this case.
	* reload1.c (preserve_location_for_nop): New predicate.
	(reload): If not optimizing CFG, emit a nop when discarding a no-op
	move if deemed necessary.
	* reorg.c (dbr_schedule): If -fpreserve-control-flow is enabled, do
	not call fill_eager_delay_slots and relax_delay_slots.
	* tree-cfg.c (gimple_can_merge_blocks_p): Do not remove user labels if
	not optimizing CFG.  Also punt in this case if the edge is the only
	place in GIMPLE which holds some unique locus.
	* tree-cfgcleanup.c (tree_forwarder_block_p): Test optimize_cfg in
	lieu of optimize.
	* tree-inline.c (remap_gimple_stmt): Force input_location on the copy
	if DECL_IGNORED_P is set on the source function.
	(copy_edges_for_bb): Add ID parameter.  Copy locus and remap block of
	edges if DECL_IGNORED_P isn't set on the source function.  And, if
	-fpreserve-control-flow is enabled, preserve the source location of
	user returns.
	(copy_phis_for_bb): Do not copy locus of arguments if DECL_IGNORED_P is
	set on the source function.
	(copy_cfg_body): Adjust call to copy_edges_for_bb.
	(expand_call_inline): Likewise onto the assignment of the return value,
	if any.  Otherwise preserve it if -fpreserve-control-flow is enabled.
	* tree-ssa-dce.c (eliminate_unnecessary_stmts): Record the location of
	the last removed statement in each block and put it onto the fallthru
	edge if the block is now empty and -fpreserve-control-flow is enabled.
	* tree-ssa-phiopt.c (gate_phiopt): Disable if -fpreserve-control-flow
	is enabled.
	* tree-ssa-ifcombine.c (gate_ifcombine): Likewise.
	* tree-ssa-loop.c (gate_tree_complete_unroll): Likewise.
	* config/rs6000/rs6000.md (swap_add_and_compare insns): Enable only if
	optimizing CFG.

[L521-035: implement -fpreserve-control-flow in 4.7 compiler]
[N219-031: ternary operations folding invalidates decisions]
(To be submitted)

revert-by f0a22a09cad745b69264ed20258649e2193e51b7
commit 587ad218eb6a923a87d526396c1db8631683005a
2012-05-24  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-inline.c (remap_gimple_op_r): Fix handling of FIELD_DECL.
	* tree.c (RETURN_TRUE_IF_VAR): Do not return true for PLACEHOLDER_EXPR.

[L524-051: couple of type merging issues in LTO mode]
(Installed in GCC 4.7 on 2012-05-25 - revision 187893)

revert-by 2c83ae18b5ae6774674c82ea91a638314abbc361
commit 0c3283e1775b43f1a5049ffd06637e99d48ab7dc
2012-05-19  Eric Botcazou  <ebotcazou@adacore.com>

	* gimple.c (gimple_types_compatible_p_1) <ARRAY_TYPE>: Remove bogus
	size handling.
	(gimple_canonical_types_compatible_p) <ARRAY_TYPE>: Likewise.
	(iterative_hash_gimple_type): Adjust comment.
	(iterative_hash_canonical_type): Likewise.  Hash the bounds of the
	domain for an array type.

[L519-003: type merging issue in LTO mode with GCC 4.7]
(Installed in GCC 4.7 on 2012-05-23 - revision 187809)

commit bd5f35f9e606ac5a99f49ca7e0c1bdf311aaf677
2012-05-19  Eric Botcazou  <ebotcazou@adacore.com>

libgcc/
	* config.host (powerpc-*-elf*): Add rs6000/t-savresfgpr to tmake_file.
	(powerpc-wrs-vxworks): Likewise.

[K907-036: missing save/restore routines with -Os on PowerPC]
(Installed in GCC 4.9 on 2013-05-22 - revision 199219)

commit 74ecd58ef25bddeb1f11990144938d63f1855774
2012-05-18  Olivier Hainque  <hainque@adacore.com>

	* config/vx-common.h (TARGET_EXECUTABLE_SUFFIX): Define.

[FA09-013: default executable extensions on vxworks]
(Superseded by change on gcc-4.9 branch)

revert-by 028944ee4602b5e0d9f400cb75ac127134edebe9
commit d47a7e884620d5acb5dfc69884a313b6f6fd56bc
2012-05-18  Olivier Hainque  <hainque@adacore.com>

	* Makefile.in (FLAGS_TO_PASS): Pass $(libexecsubdir) instead of
	$(libsubdir) as libexecsubdir.

[J317-010: install-no-fixedincludes breakage]
[JA29-016: install-no-fixedincludes breakage]
(Installed in GCC 4.7 on 2012-05-18 - revision 187659)

revert-by 64cfd417c66b6f52ab6963e71efd46391265e478
commit 97d1e5b1d834f78a972777e7400e6cf20a6eec82
2012-05-16  Eric Botcazou  <ebotcazou@adacore.com>

	* config.gcc (i[34567]86-*-mingw* | x86_64-*-mingw*): Set gas and
	gnu_ld variables to yes.
	* configure.ac (HAVE_GNU_LD): Move to after config.gcc inclusion.
	(HAVE_GNU_AS): Likewise.
	* config.in: Regenerate.
	* configure: Likewise.

[L514-040: use proper response file with GNU linker]
(Installed in GCC 4.7 on 2012-05-25 - revision 187877)

commit 8e6ca915587e423fd77a5486c1ef989208fcddf5
commit 062ec54764942e985cc833ce2fe2bb9af179fe3c
2012-05-16  Olivier Hainque  <hainque@adacore.com>

	* config/rs6000/rs6000-opts.h (enum processor_type): Add
	PROCESSOR_PPC8548.
	* config/rs6000/rs6000-cpus.def: Reference it for cpu="8548".
	* config/rs6000/rs6000.md (cpu attribute definition): Add ppc8548.
	* config/rs6000/8540.md: indicate that the units/patterns apply to
	ppc8548 as well.

	* config/rs6000/rs6000.c (rs6000_option_override_internal): Rename
	default_cpu into implicit_cpu, conveying what --with-cpu was passed at
	configure time. Treat implicit_cpu as have_CPU. Pick defaults for SPE
	related flags,  check that what is queried is supported by the selected
	configuration. Rework the single/double_float and MASK_STRING resets to
	hit for all the E500 cores (854x + E500MC variants). Select the ppc8540
	costs for PROCESSOR_PPC8548 as well.
	(rs6000_issue_rate): case CPU_PPC8548 together with CPU_PPC8540.
	(rs6000_use_sched_lookahead): Likewise, rewriting function as a case
	statement instead of a sequence of ifs.

	* config/rs6000/rs6000.h (TARGET_E500): Remove.
	(TARGET_NO_LWSYNC): Adjust accordingly.
	* config/rs6000/e500.h (TARGET_E500): Remove.
	(CHECK_E500_OPTIONS): Adjust accordingly.
	* config/rs6000/eabispe.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Remove.
	(TARGET_DEFAULT): Reformat definition to match the one in linuxspe.h.
	* config/rs6000/linuxspe.h: Likewise.
	* config/rs6000/vxworks.h: Remove bogus TARGET_E500 overrides and
	superfluous comments.
	* config/rs6000/e500-double.h: Remove.

	* config.gcc (pick a default with_cpu): For powerpc*-*-*spe*,
	default to with_cpu=8548 if --enable-e500-double, and to 8540
	otherwise.
	(set misc flags section): For powerpc*|rs6000*, remove inclusion
	of e500-double.h for --enable-e500-double.

[L504-017: transition to gcc-4.7, ppc/e500-vxworks]
(Installed in GCC 4.8 on 2012-05-16 - revision 187581)

commit 062ec54764942e985cc833ce2fe2bb9af179fe3c
2012-05-15  Olivier Hainque  <hainque@adacore.com>

	Revert changes introduced in fsf revision 124006:
	* config/rs6000/sysv4.h (STARTFILE_DEFAULT_SPEC): Include
	ecrti.o and crtbegin.o.
	(LIB_DEFAULT_SPEC): Include -lc.
	(ENDFILE_DEFAULT_SPEC): Include crtend.o and ecrtn.o.

[L511-016: e500 bareboard transition to gcc 4.7]
(Not to be submitted, local setting)

commit ccdb1d34c470eddbf697dbf4dabd2ee4899c9921
2012-05-14  Nicolas Roche  <roche@adacore.com>

	* preprocess_sources.sh: Don't remove anymore non needed front-ends.
	Toplevel configure is now reading information in all front-ends

[L511-026: configure confused by absence of front-end directories]
(To be ported)

commit 63fd6682fb9a4eecf49f92d54f1d3264db7b0e19
commit ceed542bba3b5a479bd38e80b79188ed4fb98267
commit 90ff5fcc6f7ea7c6392755c731fb3ca3279c18ec
2012-05-14  Tristan Gingold  <gingold@adacore.com>

libstdc++-v3/
	* libsupc++/eh_personality.cc (__gxx_personality_seh0): New function.
	Adjust for SEH.
	* config/abi/pre/gnu.ver: Add __gxx_personality_seh0.
libobjc/
	* exception.c (__gnu_objc_personality_seh0): New function.
libjava/
	* libgcj.ver: Add __gcj_personality_seh0.
	* exception.cc (__gcj_personality_seh0): New function.
	Adjust for SEH.
libgcc/
	* unwind-seh.c: New file.
	* unwind-generic.h: Include windows.h for SEH.
	(_Unwind_Exception): Use 6 private fields for SEH.
	(_GCC_specific_handler): Declare.
	* unwind-c.c (__gcc_personality_seh0): New function.
	Adjust for SEH.
	* config/i386/libgcc-cygming.ver: New file.
	* config/i386/t-seh-eh: New file.
	* config.host (x86_64-*-mingw*): Default to seh.
gcc/
	* opts.c (finish_options): Handle UI_SEH.
	* expr.c (build_personality_function): Handle UI_SEH.
	* dwarf2out.c (dwarf2out_begin_prologue): Handle UI_SEH.
	* coretypes.h (unwind_info_type): Add UI_SEH.
	* config/i386/winnt.c (i386_pe_seh_emit_except_personality):
	New function.
	(i386_pe_seh_init_sections): Likewise.
	* config/i386/cygming.h (TARGET_ASM_EMIT_EXCEPT_PERSONALITY): Define.
	(TARGET_ASM_INIT_SECTIONS): Define.
	* common/config/i386/i386-common.c (TARGET_EXCEPT_UNWIND_INFO): Define.
	(i386_except_unwind_info): New function.
	* common/config/ia64/ia64-common.c (ia64_except_unwind_info): Fix typo.

[L427-009: move to native SEH on x86_64-windows]
(Installed in GCC 4.8 on 2012-07-19 - revision 189644)

revert-by 4dee65b4df8c218b7b237d50a974e81dd1a09727
commit dd9b66995b73ed7f22323f67243c048a87e089cb
2012-05-13  Eric Botcazou  <ebotcazou@adacore.com>

	* combine-stack-adj.c (can_move_args_size_note): New predicate.
	(maybe_move_args_size_note): Rename parameters.
	(combine_stack_adjustments_for_block): Compute the new adjustment
	early and call can_move_args_size_note before trying to combine.

[L510-046: internal error at -Os with GCC 4.7]
(Obsolete for GCC 4.7)

revert-by 554c3a75821ed9cf28d2f2a3a95e82b91222b71a
commit 1e191898a0dc6c1ae7607bdbb0847a4423de21b6
2012-05-11  Eric Botcazou  <ebotcazou@adacore.com>

	* function.c (requires_stack_frame_p): Return true if the insn can
	throw internally.

[L511-034: failure of F420_021 on PowerPC/Linux with GCC 4.7]
(Installed in GCC 4.7 on 2012-05-12 - revision 187430)

commit bd93e6bdc04bb50c1f70a0d45ee55f021c395ca8
2012-05-11  Olivier Hainque  <hainque@adacore.com>

libgcc/
	* config/rs6000/aix-unwind.h (ucontext_for): Helper for ...
	(ppc_aix_fallback_frame_state): New, implementation of ...
	(MD_FALLBACK_FRAME_STATE_FOR): Define.

[L411-039: gcc-4.7 transition, ppc-aix]
(Installed in GCC 4.8 on 2012-05-15 - revision 187540)

commit b5aebeef4aad911b9adf9b22995fdb5d06507bfb
2012-05-10  Tristan Gingold  <gingold@adacore.com>

	* config/rs6000/lynx-xcoff.h (JUMP_TABLES_IN_TEXT_SECTION): Define.

[L508-007: put jump tables in text section on lynx178]
(To be merged with other changes for ppc-lynx178)

revert-by 8adb0624461f979dc63622eef11dba902f1c9837
commit 84643957bff318a3833084ee95537c7880059cbb
commit 4db46e7398e4a1d7b86e7faab067d2a2242e9442
2012-05-10  Tristan Gingold  <gingold@adacore.com>

	* config/i386/winnt.c (i386_pe_seh_end_prologue): Move code to ...
	(seh_cfa_adjust_cfa): ... here.
	(seh_emit_stackalloc): Add a guard.
	* config/i386/i386.h (SEH_MAX_FRAME_SIZE): New macro.
	* config/i386/i386.c (ix86_frame_pointer_required): Return
	true for extra large frames on win64.
	(ix86_compute_frame_layout): Add a guard for extra large frames.
	(ix86_expand_prologue): Add sse_registers_saved.  With extra large
	frames, allocate the sse area and save them early.
	(ix86_expand_epilogue): Deallocate the frame using the frame
	pointer for frames > 2GB on win64.
	(struct ix86_frame): Remove unused frame field.

[L507-009: .seh_stackalloc offset too large]
(Already in GCC 4.8)

revert-by ac75a373632dd8e7d0a6ba93af6faf8107e72509
commit 2b5a653eb140e8dd701a4e10f401898e64681c16
commit eff73b3b32fd3bf732e0f29420e82b5c101c2c8c
commit 05100d9b4718a2fedf885f74d6e070ee2f3562c5
2012-05-07  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-pass.h (pass_fast_rtl_dce_no_opt): Declare.
	* dce.c (insn_is_nop): New function.
	(delete_unmarked_insns): Do not delete NOPs at -O0.
	(gate_fast_dce_no_opt): New gate function.
	(pass_fast_rtl_dce_no_opt): New pass.
	* passes.c (init_optimization_passes): Register it.

[L507-026: port fast RTL DCE pass to GCC 4.7]
(Obsolete for GCC 4.7)

commit 3bd86cbc0e17bd2705eb1632766c1ac94d662490
2012-05-06  Eric Botcazou  <ebotcazou@adacore.com>

	* gimplify.c (gimplify_init_constructor): Do a block move for very
	small objects as well.

[I312-039: inefficient code for aggregates with atomic objects]
(Installed in GCC 4.8 on 2012-05-15 - revision 187498)

commit 7065d16c2156c0c1afb48338bbb0d69df3c9dddc
2012-05-05  Eric Botcazou  <ebotcazou@adacore.com>

	* doc/tm.texi.in (Storage Layout) <ROUND_TYPE_ALIGN>: Update.
	* doc/tm.texi (Storage Layout) <ROUND_TYPE_ALIGN>: Likewise.
	* stor-layout.c (finalize_type_align): New static function.
	(finalize_record_size): Call it instead of computing the alignment,
	but not on packed types.
	(finalize_type_size): Likewise.
	(layout_type) <ARRAY_TYPE>: Likewise.

[D311-005: we should allow unaligned records]
(To be ported)

commit 46415718eee6f0febc41488a334d80bec9a1b1c2
commit 0d97a9d9003adeb8b436dd00ced3aef9d8c92792
2012-05-04  Tristan Gingold  <gingold@adacore.com>

	* config/ia64/hpux.h (TARGET_DEFAULT_ILP32): Define.
	(SPEC32_OPT, SPEC64_OPT): New macro.
	(STARTFILE_SPEC, LIB_SPEC, ASM_EXTRA_SPEC): Use them.
	(MULTILIB_DEFAULTS): Define according to TARGET_DEFAULT_ILP32.
	(TARGET_DEFAULT): Use TARGET_DEFAULT_ILP32.
	* config/ia64/hpux-unix2003.h (STARTFILE_SPEC): Adjust.
	* config/ia64/hpux-lp64.h: New file.
	* config.gcc (ia64*-*-hpux*): Handle --with-abi

[L427-021: default to lp64 model on hpux]
(To be submitted)

commit ba758a98a76e789de579bdc0d324d2c6e50f41a5
2012-05-04  Tristan Gingold  <gingold@adacore.com>

libgcc/
	* config/i386/cygwin.S: Add ___gnu_chkstk alias.
	* config.host (x86_64-*-mingw*): Add i386/t-cygming.
	Add crtbegin.o and crtend.o

[L424-013: fix initial build for x86-64 windows]
(To be submitted)

commit b4bf3490684a69783fe14ef752fd43dd130faf48
2012-05-03  Olivier Hainque  <hainque@adacore.com>

	* gcc.c (eval_spec_function): Finalize/restore the current string
	obstack state as part of the context push/pop operations.

[J831-021: gcc spec functions not parsed correctly]
(Installed in GCC 4.8 on 2012-05-04, revision 187146)

commit b751fed15349057ffeda9a2cf767b21ef48f3250
2012-05-03 Hristian Kirtchev <kirtchev@adacore.com>

	* config/rs6000/lynx-xcoff.h (TARGET_AIX): Redefine to 1.
	* config/rs6000/rs6000.c (rs6000_output_addr_const_extra): Remove
	now redundant part of guard expression.

[L420-020: minor adjustements to the ppc-lynx178 port]
(To be merged with other changes for ppc-lynx178)

commit 3edd5208588d307612373a8b3132115d3effd32e
2012-05-03  Richard Kenner  <kenner@adacore.com>
            Olivier Hainque  <hainque@adacore.com>

	* common.opt (-fdump-scos): New option.
	* doc/invoke.texi (Debugging options): Document it.
	* gimplify.c: Include scos.h.
	(gimplify_body): If -fdump-scos is specified, generate SCOs.
	* scos.h, scos.c: New files.
	* Makefile.in (OBJS-common): Add scos.o.
	(gimplify.o): Add dependency on scos.o.
	(scos.o): New rule.

[IC06-008: generating SCOs for C]
(To be submitted)

commit e483a984d80132401b9b82ffe8cc05cd2d4fd17f
2012-04-30  Joel Brobecker  <brobecker@adacore.com>

	* config/rs6000/lynx-xcoff.h (DWARF2_DEBUGGING_INFO): Define.
	(PREFERRED_DEBUGGING_TYPE): Undefine and then define as
	DWARF2_DEBUG.
	* config/rs6000/rs6000.c: Use .vbyte pseudo-ops for LynxOS.

[L423-024 Enable DWARF on powerpc-xcoff-lynx, and make it the default]
(To be merged with other changes for ppc-lynx178)

commit 81423f8402772c49a9a4d08bda17a2cad08c7f7d
2012-04-30  Joel Brobecker  <brobecker@adacore.com>

	* config.gcc: Use the the OS name to identify the type/version
	of LynxOS system, rather than the vendor name.

[L420-020 Minor adjustements to the ppc-lynx178 port]
(To be merged with other changes for ppc-lynx178)

commit 881151f7a4454fba14042b6e8468396ce53dfb3c
2012-04-30  Tristan Gingold  <gingold@adacore.com>

	* config/i386/i386.c (ix86_compute_frame_layout): Use
	HOST_WIDE_INT for preferred_alignment and stack_alignment_needed.

[L403-016: gcc-4.7 transition, x86_64-darwin]
(Already in GCC 4.8)

commit 130f0b168b2cedf46c3d4e54cdc63dbb0b1aa644
2012-04-27  Olivier Hainque  <hainque@adacore.com>

	* Makefile.in (s-header-vars): Resort to -n instead of trailing
	-e d in sed invocation.

[JA14-005: install-no-fixedincludes failure on ia64-hpux]
(Installed in GCC 4.8 on 2012-05-16 - revision 187580)

commit 949fcad0771be615f9f71b50fb6e9686e84da28b
2012-04-27  Olivier Hainque  <hainque@adacore.com>

	* collect2.c (may_unlink_output_file): New global.
	(maybe_unlink): Honor it.
	* collect2.h: Add extern for it.
	* tlink.c (do_tlink): Set it to true if the link succeeded.

[H122-008: link fails on AIX if a write-protected exec exists]
(Installed in GCC 4.8 on 2012-05-04, revision 187148)

commit 8e3da6589029307bebc5de277d5ac87e848cddcf
2012-04-25  Hristian Kirtchev <kirtchev@adacore.com>

	* config.sub: Add specific OS type for Lynx 5 and 178.
	* config.gcc: Add a configuration set for LynxOS-178.
gcc/
	* config/i386/lynx.h (STACK_CHECK_STATIC_BUILTIN): Define.
	* config/lynx.h (CPP_OS_LYNX_SPEC): Adjust to use the environment
	prefix.
	(ENDFILE_OS_LYNX_SPEC): Likewise.
	(LINK_OS_LYNX_SPEC): Likewise.
	(STARTFILE_OS_LYNX_SPEC): Likewise.
	(TARGET_LYNXOS): Likewise.
	Enable DWARF2 on LynxOS-178.
	* config/rs6000/lynx-xcoff.h: New file.
	* config/rs6000/lynx-xcoff.opt: New file.
	* config/rs6000/lynx.h (FP_SAVE_INLINE): Define.
	(GP_SAVE_INLINE): Likewise.
	(STACK_CHECK_STATIC_BUILTIN): Likewise.
	* config/rs6000/rs6000.c: Use .vbyte in all XCOFF formats except
	on Lynx.
	(rs6000_output_addr_const_extra): Do not add the TOC in XCOFF
	LYNXOS mode.
	* config/rs6000/rs6000.h (TARGET_LYNXOS): Define.
libgcc/
	* config.host: Add entries for xcoff-lynxos.

[L420-020: LynxOS-178 GCC 4.7 merge]
(To be submitted)

commit 1bb8aa7ba81dd93816e78ece36e9395623f694fa
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* config/rs6000/xcoff.h (ASM_DECLARE_FUNCTION_NAME): Adjust condition
	to call xcoffout_declare_function.
	* config/rs6000/rs6000.c (rs6000_xcoff_asm_named_section): Special-case
	debug sections.
	* dwarf2out.c (output_fde): ASM_OUTPUT_DWARF_TABLE_REF for eh only.

[J602-027: test GNU ld again on ppc-aix]
(To be submitted)

commit 90249e1ab81fd9140e22c944a6bc8c80f2034dff
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* final.c (final_scan_insn): Move call to end_prologue.

[L425-019 transition to gcc-47 for VMS]
(To be submitted)

commit 9642ff6848e6bcc1ac2683f74d39a44bf20703be
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* config/alpha/alpha.c (alpha_in_small_data_p): Compile only for ELF
	(TARGET_IN_SMALL_DATA_P): Define only for ELF.

[L425-019 transition to gcc-47 for VMS]
(To be reworked and submitted)

commit 2aa5580abd2467a5da778d273a0cadae32be7f20
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* dwarf2out.c (add_byte_size_attribute): Omit DW_AT_byte_size
	for a DIE size -1.

[L425-019 transition to gcc-47 for VMS]
(Installed in GCC 4.9 on 2013-11-13 - revision 204736)

commit 7dc02498f232607b7e6d62d17d1b1604951cf384
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* config/ia64/vms.h (DWARF2_VMS_TRACEBACK): Define.
	* dwarf2out.c (trace_abbrev_section, trace_info_section)
	(trace_aranges_section): New variables.
	(output_aranges): Add is_traceback argument.
	(TRACE_ABBREV_SECTION, TRACE_INFO_SECTION)
	(TRACE_ARRANGES_SECTION): Define.
	(TRACE_ABBREV_SECTION_LABEL, TRACE_INFO_SECTION_LABEL): Define.
	(trace_abbrev_section_label, trace_info_section_label): Declare.
	(output_trace_abbrev_section): New function.
	(subprogram_trace_attrs): New struct type.
	(get_subprogram_trace_attrs): New function.
	(output_subprogram_die_trace)
	(calc_subprogram_die_sizes_trace): Likewise.
	(comp_unit_trace_attrs): New struct type.
	(get_comp_unit_attrs_trace, output_comp_unit_die_trace)
	(calc_comp_unit_die_sizes_trace)
	(output_compilation_unit_header_trace)
	(output_comp_unit_trace, vms_get_module_name): New function.
	(gen_compile_unit_die): Generate unit_name die.
	(dwarf2out_init): Initialize trace sections.  Generate unit_name
	and traces.

[L425-019 transition to gcc-47 for VMS]
(To be reworked)

commit c469879daaf980727dd0cfc5bc4f7249c1f7189e
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* config/vms/vms.h (DWARF2_LOCATION_LISTS_SUPPORT_MISSING_ON_TARGET):
	Define.
	* doc/tm.texi.in: Document it.
	* doc/tm.texi: Regenerate.
	* dwarf2out.c (gen_subprogram_die): Handle it.

[L425-019 transition to gcc-47 for VMS]
(To be reworked)

commit 299a01cebdd115487c3136736e611a7b6b5eaefb
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* config/ia64/ia64.c (ia64_function_arg_1): Move code around.
	(ia64_function_arg_advance): Likewise.

[L425-019 transition to gcc-47 for VMS]
(Installed in GCC 4.8 on 2012-03-12 - revision 185246)

commit 3c5193bb08685aeefcb94bbb4e3fb20590c240fd
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* config/ia64/ia64.c (ia64_section_type_flags): Remove
	common_object attribute handling.
	(SECTION_VMS_OVERLAY): Remove
	(ia64_vms_common_object_attribute): Replace abort with an assert.
	Do not set DECL_SECTION_NAME.
	(ia64_vms_output_aligned_decl_common): Handle common_object
	attribute.
	(ia64_vms_elf_asm_named_section): Remove.
	* config/ia64/vms.h (TARGET_ASM_NAMED_SECTION): Remove

[L425-019 transition to gcc-47 for VMS]
(Installed in GCC 4.8 on 2012-03-30 - revision 186010)

commit 973896771f770664a1f4c596d767092ceb4b578e
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* varasm.c (remove_unreachable_alias_pairs): Deal with numeric
	aliases for VMS.

[L425-019 transition to gcc-47 for VMS]
(To be reworked - I829-004)

commit 7bdb7eb8e822f1a1d387d4a4df7f9355195d4fff
2012-04-25  Tristan Gingold  <gingold@adacore.com>

libgcc/
	* config/t-slibgcc-vms: Create fake shared libraries.

[L425-019 transition to gcc-47 for VMS]
(To be reworked)

commit 278a66ad1e2bfadd4cf1418bd9a9956f9ee67e21
2012-04-25  Tristan Gingold  <gingold@adacore.com>

	* expr.c (expand_expr_real_2): Add convertion for POINTER_PLUS_EXPR.

[L425-019 transition to gcc-47 for VMS]
(Installed in GCC 4.8 on 2012-04-04 - revision 186133)

commit f81732a2aba232e6b7a4a6685c4f5ee776c2bfad
2012-04-25  Olivier Hainque  <hainque@adacore.com>

	* tree-sra.c (create_access): Additional IN_VCE argument, telling
	if EXPR is VIEW_CONVERT_EXPR input.  Disqualify base if access size
	is not that of an integer mode in this case.
	(build_access_from_expr_1): Adjust caller.

[BA15-010: wrong record components, packed record gnat5/o2]
[J615-028: BA15_010 crash on sparc-solaris with gcc 4.5]
(Submitted at http://gcc.gnu.org/ml/gcc-patches/2012-04/msg01576.html)

commit 3d64aae67621b921a9f7838157923b6bc1b78e4c
2012-04-24  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/cygming.h (USE_IX86_FRAME_POINTER): Define.

[L424-029: segv in unwinder with GCC 4.7 on Windows]
(Superseded by change on gcc-4.9 branch)

commit 91e13f6931157d10a54d20b25bb3bd7366256fc6
2012-04-24  Olivier Hainque  <hainque@adacore.com>

	* target.def (TARGET_MAY_NARROW_ACCESS_TO): New hook.
	* doc/tm.texi[.in] (TARGET_MAY_NARROW_ACCESS_TO): Document.
	* targhooks.c (default_may_narrow_access_to): Default implementation.
	* targhooks.h (default_may_narrow_access_to): Declare.
	* config/rs6000/rs6000.c (rs6000_may_narrow_access_to): Specific
	implementation.
	(rs6000_mode_dependent_address): Stop lying for + const_int.
	(rs6000_offsettable_memref_p): Adjust comments accordingly.
	* expr.c (convert_move): Use may_narrow_access_to instead of
	mode_dependent_address_p where appropriate.
	* recog.c (offsettable_address_addr_space_p): Likewise.
	(valid_access_mode_change_p): New function.
	* recog.h (valid_access_mode_change_p): Declare.
	* simplify-rtx.c (simplify_subreg): Use it instead of
	mode_dependent_address_p where appropriate.

[G308-025: ppc compiler crash on access to mem+32760]
(Obsolete for GCC 4.9, see http://gcc.gnu.org/ml/gcc/2012-07/msg00142.html)

commit 2c0471556e20172173dfafe3f2dca7fc29413993
2012-04-24  Vasiliy Fofanov  <fofanov@adacore.com>

	* ginclude/float.h: For MINGW32 target, include system version as well.

[K426-014: gcc float.h misses mingw32 macros]
(To be submitted, http://gcc.gnu.org/ml/gcc-patches/2010-06/msg00387.html)

commit 6c93626058b0a209c01d9884a1857dd6eee56776
commit f48db4c8522d0f9b8d41b14ab98c30ee48a49601
2012-04-24  Tristan Gingold  <gingold@adacore.com>

	* config/i386/i386.c (ix86_reorg): Prepend a nop for Darwin unwinder.

[L418-009: darwin unwinder failure]
(To be submitted)

commit [dump-xref]
2012-04-24  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c (is_system_include, skip_xref_macro): New functions.
	(skip_xref): Use is_system_include.

[L406-004: dump-xref regressions on null trees]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-04-24  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c (skip_xref): Take null trees into account.
cp/
	* call.c (perform_implicit_conversion_flags): Make fdump-xref
	changes unintrusive.

[L406-004: dump-xref regressions on C++ front-end and macros]
(Superseded by change on gcc-4.9 branch)

commit 6807d6b67e8f5bb516aa6c729f613719351ada69
2012-04-16  Tristan Gingold  <gingold@adacore.com>

	* config/darwin.h (REAL_LIBGCC_SPEC): Remove -lgcc_eh.

[L413-009: gnatmake crashes on x86_64-darwin]
(Not to be submitted - local setting)

commit 93b1dca324ecff1e51216e8cc3dd0d041a97859f
commit 0ab8ec1483c554d522957ffd4364e8bb8ae09bad
commit ee357caa008a8c386c70639822630c2240b9e097
2012-04-15  Eric Botcazou  <ebotcazou@adacore.com>

	* configure.ac (PLUGIN_LD): Rename into...
	(PLUGIN_LD_SUFFIX): ...this and strip the target_alias triplet.
	* config.in: Regenerate.
	* configure: Likewise.
	* collect2.c (main): Set plugin_ld_suffix to PLUGIN_LD_SUFFIX.

[L415-004: linker plugin breaks LTO with cross-native build]
(Installed in GCC 4.8 on 2012-05-07 - revision 187269)

commit 30b062658c8752a3ccaf52fb74519186bd2a3429
2012-04-13  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (gen_compile_unit_die): Emit all DW_LANG_* values in
	strict mode as well.

[J921-034: darwin/gcc-45/dwarf: wrong language for Ada units]
(To be ported)

revert-by 0845148dd23104d19aea843ef57effc2a5e83792
commit 9f8ef3756a29c97ce12ca0896259645cb86571fa
2012-04-13  Eric Botcazou  <ebotcazou@adacore.com>

	* config/i386/i386.c (ix86_handle_struct_attribute): Use the proper
	predicate to discriminate types.

[L410-049: record layout issue on Windows with GCC 4.7]
(Installed in GCC 4.7 on 2012-04-30 - revision 186959)

commit 75e59572546e296a218b962bfb527f5d33290ad1
2012-04-13  Olivier Hainque  <hainque@adacore.com>

	* common.opt (gdwarf-): Initialize dwarf_version to -1.
	* toplev.c (process_options): Default to dwarf_version 2.
	* config/vxworks.c (vxworks_override_options): Default to strict-dwarf
	and dwarf_version 2.

[K914-012: locals not visible from WB - need strict dwarf-2 on vxworks]
[K530-030: default to strict dwarf-3 on VxWorks]
(Installed in GCC 4.8 on 2012-04-24 - revision 186783)

commit 39da18cf1a7bc9a67362619071d18bcf40f64980
2012-04-13  Eric Botcazou  <ebotcazou@adacore.com>

	* config/alpha/sync.md: Add peephole for consecutive memory barriers.

[K606-022: properly implement atomic on all targets]
(To be ported)

commit 39da18cf1a7bc9a67362619071d18bcf40f64980
2012-04-13  Eric Botcazou  <ebotcazou@adacore.com>

	* config/sparc/sync.md: Add peephole for consecutive memory barriers.

[K606-022: properly implement atomic on all targets]
(Installed in GCC 4.9 on 2013-09-29 - revision 203014)

commit 155478e77629e2171b08b7a8f309b3e84b11cda1
2012-04-12  Olivier Hainque  <hainque@adacore.com>

	Backport from GCC 4.8 revision 186397
	PR target/52828
	* config/rs6000/rs6000.c (rs6000_emit_stack_tie): Rewrite with
	tie regs on destination of sets.  Delete forward declaration.
	(rs6000_emit_stack_reset): Update rs6000_emit_stack_tie calls.
	(rs6000_emit_prologue): Likewise.
	(rs6000_emit_epilogue): Likewise.  Use in place of gen_frame_tie
	and gen_stack_tie.
	(is_mem_ref): Use tie_operand to recognise stack ties.
	* config/rs6000/predicates.md (tie_operand): New.
	* config/rs6000/rs6000.md (UNSPEC_TIE): Delete.
	(restore_stack_block): Generate new stack tie rtl.
	(restore_stack_nonlocal): Likewise.
	(stack_tie): Update.
	(frame_tie): Delete.

[K216-032: frame access past sp restore on ppc-vxworks]
(Already in GCC 4.8)

commit 81714dcd80b2459eef3726936c7913769de0b232
commit d34f5d171f1a40b507767d2ef3c4fc2d4472448b
commit d9371d36e2e7bb75a786f0bb891c982062a54a7e
2012-04-12  Eric Botcazou  <ebotcazou@adacore.com>

	* common.opt (-fdelete-dead-exceptions): New switch.
	* doc/invoke.texi (Code Gen Options): Document it.
	* cse.c (count_reg_usage) <CALL_INSN>: Use !insn_nothrow_p in lieu of
	insn_could_throw_p predicate.  Do not skip an insn that could throw
	if dead exceptions can be deleted.
	(insn_live_p): Likewise, do not return true in that case.
	* dce.c (can_alter_cfg): New flag.
	(deletable_insn_p): Do not return false for an insn that can throw if
	the CFG can be altered and dead exceptions can be deleted.
	(init_dce): Set can_alter_cfg to false for fast DCE, true otherwise.
	* dse.c (scan_insn): Use !insn_nothrow_p in lieu of insn_could_throw_
	predicate. Do not preserve an insn that could throw if dead exceptions
	can be deleted.
	* function.h (struct function): Add can_delete_dead_exceptions flag.
	* function.c (allocate_struct_function): Set it.
	* lto-streamer-in.c (input_struct_function_base): Stream it.
	* lto-streamer-out.c (input_struct_function_base): Likewise.
	* tree-ssa-dce.c (mark_stmt_if_obviously_necessary): Do not mark a
	statement that could throw as necessary if dead exceptions can be
	deleted.
	* tree-inline.c (initialize_cfun): Copy can_delete_dead_exceptions.

[FB16-004: dead instructions elimination in the back-end]
(Installed in GCC 4.8 on 2012-06-15 - revision 188651)

commit 2926851802771b9e0580d437e072984b1338c0d3
2012-04-12  Olivier Hainque  <hainque@adacore.com>

	* emit-rtl.c (set_unique_reg_note): Don't add REG_EQUAL or REG_EQUIV
	on a SET if the destination isn't a REG or a SUBREG of REG.

[J910-007: F420_021 eh optimized away on ppc-aix with gcc 4.5]
(Superseded by change on gcc-4.9 branch)

commit d45d24183ff35c5aa4c15d83bdfcca699e0467c2
2012-04-12  Olivier Hainque  <hainque@adacore.com>

	Support for subtarget default flags on ppc:
	* config/rs6000/rs6000.h (SUBTARGET_DEFAULT): New macro.  Extra
	default flags to be set on a per subtarget basis.  Default to 0.
	* common/config/rs6000/rs6000-common.c (TARGET_DEFAULT_TARGET_FLAGS):
	Honor it.

[FA20-003: default to -mstrict-align on ppc cross ports]
(Obsolete for GCC 4.9, now using self specs to force -mstrict-align)

commit 733eea8b6bc823abe2dd1b597189a3b7ac21dc3d
2012-04-11  Olivier Hainque  <hainque@adacore.com>

	* gcc.c (process_command): Update warranty notice for AdaCore use.

[FC03-002: gcc warranty notice for GNAT Pro]
(Superseded by change on gcc-4.9 branch)

commit 3bd52fbf4f6db0b6d99016dc971c828beddc686e
2012-04-05  Olivier Hainque  <hainque@adacore.com>

	Part of support for pragma Persistent_BSS
	* varasm.c (default_section_type_flags): Flag .persistent.bss
	sections as SECTION_BSS too.

[C109-015: persistent data]
(Superseded by change on gcc-4.9 branch)

commit 8b4f541fab41a904c866a5350691323ccba03236
2012-04-11  Olivier Hainque  <hainque@adacore.com>

	* config/mh-ppc-aix (LDFLAGS): Quote $(CC).

[F914-006: gnattools build failure on ppc-aix]
(Installed in GCC 4.8 on 2012-05-03 - revision 187100)

commit 2ef876e0f257f3bacaa54ca1634ea24ce8d7dc2a
2012-04-05  Olivier Hainque  <hainque@adacore.com>

	* config/ia64/linux.h (WIDEST_HARDWARE_FP_SIZE): Define.

[L328-019: gcc-4.7 transition, WIDEST_HARDWARE_FP_SIZE]
(To be ported)

commit 323ae59841cd93a274361659e35ad6e51dafe846
commit 589c7c8f7354760a482f024ba63df4017a59c75b
2012-04-05  Olivier Hainque  <hainque@adacore.com>

libgcc/
	* config/rs6000/vxworks/tramp.S (trampoline_setup): Use a longcall
	sequence in the non pic case on VxWorks.

[G212-025: issues with short calls by default on ppc-vxworks]
(Installed in GCC 4.8 on 2012-05-25 - revision 187871)

commit 037d3c590c72b567863385c33e7e1070beed56b0
2012-04-05  Olivier Hainque  <hainque@adacore.com>

	* config/i386/cygming.h (MALLOC_OBSERVABLE_ALIGNMENT): Define.

[JB06-002: gprbuild broken on x86-64 windows]
(Superseded by change on gcc-4.9 branch)

commit 2d7e2ade4bf718b3f1a32f95c0580d37cd215a7c
2012-04-06  Olivier Hainque  <hainque@adacore.com>

	* gcc.c: Adapt messages to our bug_report_url.
	* gcov.c: Likewise.
	* diagnostic.c: Likewise.

[FC14-009: update URL displayed in bug boxes]
(Superseded by change on gcc-4.9 branch)

commit 6d4dde6c335cf1f732116de44c6e9bf92d984bf6
2012-04-05  Eric Botcazou  <ebotcazou@adacore.com>

	* c-parser.c (c_parser_type_name): Guard against error_mark_node.
	* tree-xref.c (skip_xref): Adjust latest change.

[L302-022: tree checking failure in tree-xref.c with GCC 4.7]
(Superseded by change on gcc-4.9 branch)

commit 1dccf02296cd7e225354398f4788fc67fe04fe07
commit 4abacff8bfc5d128097282c0c939a26efbe22102
commit 3af3c4ff1b6bf2c9abecaf43bc314ddd552fb93e
commit 7d0eb037fc291396284754c9ece16a8a240f8f12
commit 78b6f3604204c2c22405f4df65dbc0539dc5a926
commit 7f90c4fd3bcbff4c7491091926a4d6f78789f587
2012-04-04  Eric Botcazou  <ebotcazou@adacore.com>

	Callgraph info support
	* common.opt (-fcallgraph-info[=]): New option.
	* doc/invoke.texi (Debugging options): Document it.
	* opts.c (common_handle_option): Handle it.
	* flag-types.h (enum callgraph_info_type): New type.
	* builtins.c (set_builtin_user_assembler_name): Do not initialize
	memcpy_libfunc and memset_libfunc.
	* calls.c (expand_call): If -fcallgraph-info, record the call.
	(emit_library_call_value_1): Likewise.
	* cgraph.h (struct cgraph_final_info): New structure.
	(struct cgraph_dynamic_alloc): Likewise.
	(cgraph_final_edge): Likewise.
	(cgraph_node): Add 'final' field.
	(dump_cgraph_final_vcg): Declare.
	(cgraph_final_record_call): Likewise.
	(cgraph_final_record_dynamic_alloc): Likewise.
	(cgraph_final_info): Likewise.
	* cgraph.c: Include expr.h.
	(cgraph_create_node_1): Initialize 'final' field.
	(final_create_edge): New static function.
	(cgraph_final_record_call): New global function.
	(cgraph_final_record_dynamic_alloc): Likewise.
	(cgraph_final_info): Likewise.
	(dump_cgraph_final_indirect_call_node_vcg): New static function.
	(dump_cgraph_final_edge_vcg): Likewise.
	(dump_cgraph_final_node_vcg): Likewise.
	(external_node_needed_p): Likewise.
	(dump_cgraph_final_vcg): New global function.
	* expr.c (emit_block_move_via_libcall): Set input_location on the call.
	(set_storage_via_libcall): Likewise.
	(block_move_fn): Make global.
	Do not include gt-expr.h.
	* expr.h (block_move_fn): Declare.
	* gimplify.c (gimplify_decl_expr): Record dynamically-allocated object
	by calling cgraph_final_record_dynamic_alloc if -fcallgraph-info=da.
	* libfuncs.h (enum libfunc_index): Delete LTI_memcpy and LTI_memset.
	(memcpy_libfunc): Delete.
	(memset_libfunc): Likewise.
	* optabs.c (init_one_libfunc): Do not zap the SYMBOL_REF_DECL.
	(init_optabs): Do not initialize memcpy_libfunc and memset_libfunc.
	* print-tree.c (print_decl_identifier): New function.
	* output.h (enum stack_usage_kind_type): New type.
	(stack_usage_qual): Declare.
	* toplev.c (callgraph_info_file): New global variable.
	(stack_usage_qual): Likewise.
	(output_stack_usage): If -fcallgraph-info=su, set stack_usage_kind
	and stack_usage of associated callgraph node.  If -fstack-usage, use
	print_decl_identifier for pretty-printing.
	(lang_dependent_init): Open file if -fcallgraph-info.
	(finalize): If callgraph_info_file is not null, invoke dump_cgraph_vcg
	and close file.
	* tree.h (print_decl_identifier): Declare.
	(PRINT_DECL_ORIGIN, PRINT_DECL_NAME, PRINT_DECL_UNIQUE_NAME): New.
	* Makefile.in (expr.o): Remove gt-expr.h.
	(cgraph.o): Add $(EXPR_H).
	* config/picochip/picochip.c: Adjust comment.

[H713-004: port -fcallgraph-info to GCC 4.3]
(Superseded by change on gcc-4.9 branch)

commit 79002f73d0fd99ca82d7f6e39d13fdfce705f36d
2012-04-04  Matthew Gingell  <gingell@adacore.com>

	* tree-xref.c (skip_xref): Guard against error_mark_node case.

[L302-022: tree checking failure in tree-xref.c with GCC 4.7]
(Superseded by change on gcc-4.9 branch)

revert-by 026c201851db3e4c78f1fd056de6011d1440c8bc
commit 0508e56caf4fe64db3d5cb3a0aa1d547ed1d05a6
2012-04-04  Olivier Hainque  <hainque@adacore.com>

libgcc/
	* Makefile.in (install-unwind_h): Rename into ...
	(install-unwind_h-forbuild): New target.
	(all): Use it instead of the former install-unwind_h.
	(install-unwind_h): Reinstate, copy to user install destination
	for include files, not to the internal gcc object directory one.
	(install-leaf): Depend on it.

[L404-011: unwind.h missing from install-no-fixedincludes]
(Installed in GCC 4.7 on 2012-05-16 - revision 187600)

reverty-by 96eda500cf33852deb321f2f4814907ed8bbe6e6
commit 7064a64e04a2b338b096ec1da79c87e8f102aacb
2012-04-05  Olivier Hainque  <hainque@adacore.com>

	* Makefile.tpl (gcc-no-fixedincludes): Rename into ...
	(gcc-install-no-fixedincludes): Forwarder to local target in gcc/
	* Makefile.in: Regenerate.
gcc/
	* Makefile.in (install-no-fixedincludes): New target.  Former toplevel
	gcc-no-fixedincludes, interlacing stmp-int-hdrs and install with ...
	(stash-maybefixed-headers, restore-header-stamps,
	 restore-maybefixed-headers): New subtargets. Add -p to cp syslimits.h.
	Stash and restore include-fixed as well as include.
	(stmp-int-hdrs): Use move-if-change + cp -p to setup fix_dir/limits.h.

[J317-010: install-no-fixedincludes breakage]
[JA29-016: install-no-fixedincludes breakage]
(Installed in GCC 4.7 on 2012-05-16 - revision 187601)

revert-by 1bc51d71f6ec70d0871e3af1ef13aecbba97e526
commit aea1799e3cf4a0cce97d6c871184ee2fe1e433cf
2012-04-04  Nicolas Roche  <roche@adacore.com>

	* config/i386/mingw32.h: Enable auto-import & pseudo-reloc by default.

[L308-011: x86-windows port]
(Obsolete for GCC 4.7)

commit f17fd179b9720d9aa324b87cb6614a17b2304dc3
2012-04-03  Nicolas Roche  <roche@adacore.com>

libgcc/
	* config/i386/cygwin.S: Ensure gnu_chkstk is defined.

[L308-011: x86-windows port]
(To be refined)

commit f22050a7fc7498c5eff96f3b350590ae6fb96376
2012-04-03  Olivier Hainque  <hainque@adacore.com>

	* expr.c (convert_move): Latch mem integer inputs into a
	register before expanding a multi-instructions sequence.

[9904-010: GAP: -gnato with racing tasks reports CONSTRAINT_ERROR]
[G308-039: overflow checks over atomic operations ?]
(Installed in GCC 4.8 on 2012-06-28)

commit c39f60001e254b4fee93cd87e915ae739e920c3c
2012-04-03  Olivier Hainque  <hainque@adacore.com>

	* doc/invoke.texi (Overall Options): Document IDL input language.
	* c.opt (lang-idl): New option.
	* c-opts.c (c_common_init_options): Enable C++ options for -lang-idl.
	(c_common_handle_option) <OPT_lang_idl>: New case.
	* gcc.c (default_compilers): Add IDL input language.

[FC18-009: support for IDL preprocessing without a C++ compiler]
(Superseded by change on gcc-4.9 branch)

commit e7df0e6a51b8fce393014c1ac5fa91b1513f7db4
2012-03-18  Eric Botcazou  <ebotcazou@adacore.com>

	* function.c (rest_of_handle_thread_prologue_and_epilogue): Clean up
	the CFG before generating prologue/epilogue even when not optimizing.

[IB23-026: unexpected conditional branch at -O0]
(Submitted at http://gcc.gnu.org/ml/gcc-patches/2012-04/msg00423.html)

commit 880e58f965a2ebdf08a3c328f5c4b10228b2591d
2012-03-17  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (add_byte_size_attribute) <RECORD_TYPE>: Handle variable
	reference as size attribute.

[J328-002: attach XVZ variable to XVS type]
(Installed in GCC 4.8 on 2012-05-10 - revision 187384)

commit 63cd481db944c77a948e959ff146c4c1a72f8b3b
commit dbd13f46741bfa818d9f038576d953d15ebf1239
commit 8ea030524a3281404cb41a038488c5ad25cf827b
commit 498aff62dd56bcf2fad9019998e427b1c0b56e59
commit 8556da574258a6e793b63f66fa929d6b82927883
commit e3c8bd995248915910d178a746035bcbeae5c146
2012-03-17  Eric Botcazou  <ebotcazou@adacore.com>

	Elimination of stack trampolines
	* common.opt (-ftrampolines): New option.
	* doc/invoke.texi (Code Gen Options): Document it.
	* doc/tm.texi.in (Trampolines): Document USE_RUNTIME_DESCRIPTORS.
	* doc/tm.texi (Trampolines): Likewise.
	* builtins.def: Add init_descriptor and adjust_descriptor.
	* builtins.c (expand_builtin_init_trampoline): Do not issue a warning
	on platforms with descriptors.
	(expand_builtin_init_descriptor): New function.
	(expand_builtin_adjust_descriptor): Likewise.
	(expand_builtin) <BUILT_IN_INIT_DESCRIPTOR>: New case.
	<BUILT_IN_ADJUST_DESCRIPTOR>: Likewise.
	* calls.c (prepare_call_address): Change purpose of first and last
	parameters.  Deal with indirect calls by descriptor.
	(call_expr_flags): Set ECF_BY_DESCRIPTOR for calls by descriptor.
	(expand_call): Likewise.  Adjust call to prepare_call_address.
	* cfgexpand.c (expand_call_stmt): Reinstate CALL_EXPR_BY_DESCRIPTOR.
	* gimple.h (enum gf_mask): New GF_CALL_BY_DESCRIPTOR value.
	(gimple_call_set_by_descriptor): New setter.
	(gimple_call_by_descriptor_p): New getter.
	* gimple.c (gimple_build_call_from_tree): Set CALL_EXPR_BY_DESCRIPTOR.
	(gimple_call_flags): Deal with GF_CALL_BY_DESCRIPTOR.
	* tree.h (FUNC_ADDR_BY_DESCRIPTOR): New flag on ADDR_EXPR.
	(CALL_EXPR_BY_DESCRIPTOR): New flag on CALL_EXPR.
	(ECF_BY_DESCRIPTOR): New mask.
	* tree.c (make_node_stat): Force alignment of functions to double unit
	at least if USE_RUNTIME_DESCRIPTORS is 1.
	(build_common_builtin_nodes): Initialize init_descriptor and
	adjust_descriptor.
	* tree-nested.c (struct nesting_info): Add 'any_descr_created' field.
	(get_descriptor_type): New function.
	(lookup_element_for_decl): Likewise.
	(create_field_for_decl): Likewise.
	(lookup_tramp_for_decl): Factor out code into above functions.
	(lookup_descr_for_decl): New function.
	(convert_tramp_reference_op): Deal with descriptors.
	(build_init_call_stmt): New function.
	(finalize_nesting_tree_1): Factor out code into above function.
	Deal with descriptors.
	* defaults.h (USE_RUNTIME_DESCRIPTORS): Define if not defined.
	(TRAMPOLINE_ALIGNMENT): Force to double unit alignment at least if
	USE_RUNTIME_DESCRIPTORS is 1.
	* config/alpha/vms.h (USE_RUNTIME_DESCRIPTORS): Define to 0.
	* config/arm/arm.h (USE_RUNTIME_DESCRIPTORS): Define to 1.
	* config/i386/i386.h (USE_RUNTIME_DESCRIPTORS): Define to 1.
	* config/ia64/ia64.h (USE_RUNTIME_DESCRIPTORS): Define to 0.
	* config/rs6000/rs6000.h (USE_RUNTIME_DESCRIPTORS): Define to 1.
	* config/rs6000/aix.h (USE_RUNTIME_DESCRIPTORS): Redefine to 0.
	* config/rs6000/lynx-xcoff.h (USE_RUNTIME_DESCRIPTORS): Define to 0.
	* config/sparc/sparc.h (USE_RUNTIME_DESCRIPTORS): Define to 1.

[L317-001: port runtime descriptors support to GCC 4.7]
[L508-010: LynxOS-178: uplevel ref to different task stack fails]
[M506-002: arm-vx6: failure during activating Tasking_Error]
(Superseded by change on gcc-4.9 branch)

commit bb81124592aafd98b17e0e1fd3b9ac96ce785516
commit cf154f2d6e2f0c56f188971b4d9bbb5d56ca9775
2012-03-16  Eric Botcazou  <ebotcazou@adacore.com>

libgcc/
	* config/ia64/unwind-ia64.c (uw_install_context): Manually save LC
	if it hasn't been previously saved.

[L316-012: failure of 6920_007 on IA-64 with GCC 4.7]
(Installed in GCC 4.7 on 2012-03-31 - revision 186046)

commit 280e90395269d8f5a26e119b73af723a3824d6d5
2012-03-13  Eric Botcazou  <ebotcazou@adacore.com>

	Backport from GCC 4.8 revision 185334
	* fold-const.c (fold_binary_loc): Fold (X * Y) & -(1 << CST) to X * Y
	if Y is a constant multiple of 1 << CST.

[L313-039: backport fix for PR middle-end/52134 to gcc-4.7]
(Already in GCC 4.8)

commit [dump-xref]
2012-03-13  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c (output_references): Fix handling of pointer and array
	objects.

[L313-003: dump-xref missing type on pointer object]
[L313-008: dump-xref missing type on array object]
(Superseded by change on gcc-4.9 branch)

revert-by 65f090736e836f6faecd23749a23343d5990000d
commit 30442b61a85d58177ed28a52840f6232a487db9a
2012-03-11  Eric Botcazou  <ebotcazou@adacore.com>

	* reload1.c (reload_as_needed): Comment out code that issues an error
	on invalid reload insns for an asm.

[L311-005: GMP build failure with GCC 4.7 on IA-64/Linux]
(Obsolete for GCC 4.7)

commit 61e36de7409a1747ea314ac8ecf30003fa2c82cc
commit 24ef1c386acebdf76c18abbc93db7dedaf3e4eb2
2012-03-10  Eric Botcazou  <ebotcazou@adacore.com>

	* tree-cfg.c (call_can_make_abnormal_goto): New predicate.
	(stmt_can_make_abnormal_goto): Use it.
	(is_ctrl_altering_stmt): Likewise.

[L310-003: internal error during inlining with SJLJ and GCC 4.7]
(Installed in GCC 4.7 on 2012-03-31 - revision 186048)

commit ab29a9b8c36cfc80808938a2a798aaa1b970b601
commit 4bef28cc3befdfa0b0034557cb1413c386909364
2012-03-09  Eric Botcazou  <ebotcazou@adacore.com>

	* varasm.c (initializer_constant_valid_for_bitfield_p): Return true
	for REAL_CST as well.
	(output_constructor): Use RECORD_OR_UNION_TYPE_P predicate.
	In the bitfield case, if the value is a REAL_CST, convert it first to
	an INTEGER_CST.

[BB25-010 : bitfields should not result in junk elab code]
(Installed in GCC 4.8 on 2012-04-03 - revision 186100)

commit f7e895503766d9f8642d55134856863b5b09b3f0
revert-by 1c207096f1761e1c92a6c3a7a109fa39bdb3bdcf
commit 5a1339129df877e29087d1a2a1654600f1cf917b
2012-03-06  Eric Botcazou  <ebotcazou@adacore.com>

	* alias.c (memrefs_conflict_p) <PLUS>: Correct wrong assumption about
	canonicalization of address expressions.

[L305-023: bootstrap comparison failure on IA-64/Linux with GCC 4.7]
(To be ported)

commit e4edfdc6f0ef68ca44534828b0d9f5a2ff252375
commit 8fd140bd8f06258596ba994777343899dd345f89
commit e166ce68ea7b2cd3f2045b4672511657d865ca7e
2012-03-02  Eric Botcazou  <ebotcazou@adacore.com>

	* dwarf2out.c (function_possibly_abstracted_p): New static function.
	(gen_subprogram_die): Use it function_possibly_abstracted_p in lieu of
	cgraph_function_possibly_inlined_p.
	(gen_inlined_subroutine_die): Return if the origin is to be ignored.
	(process_scope_var): Do not emit concrete instances of abstracted
	nested functions from here.
	(gen_decl_die): Emit the abstract instance if the function is possibly
	abstracted and not only possibly inlined.
	(dwarf2out_finish): Find the first non-abstract parent instance and
	attach concrete instances on the limbo list to it.

[J211-025: cycle related to inlining and abstract origin in DWARF]
(Obsolete for GDB 7.7)

commit 95da4577dfc800d1f49a7d9a492fea5b68a41998
commit 39154355146be72698fc8bb0b64e6097c6a05885
commit 27dbc53b75bb31fae1c579af70d8c931b496acad
commit 6745727f96e10a84b6fada2923fa075b60f30100
commit 2cf2b4b3ad8c09cbd01f1b7ec61bdacda8c9a5d7
commit 0285a408eaa5237a5f06d72ad8349a7255bae2f8
commit abd987eed74dd6631c3d0d2fc6933da8ad597f3d
commit 1d7888073052546dcf9f1c43e45c6c59bdad5ab8
2012-02-28  Eric Botcazou  <ebotcazou@adacore.com>

	* Makefile.in (tree-nested.o): Add $(DIAGNOSTIC_H).
	* gimplify.c (nonlocal_vlas): Delete.
	(gimplify_var_or_parm_decl): Do not add debug VAR_DECLs for non-local
	referenced VLAs.
	(gimplify_body): Do not create and destroy nonlocal_vlas.
	* tree-nested.c: Include diagnostic.h.
	(use_pointer_in_frame): Tweak.
	(lookup_field_for_decl): Add assertion.  For a variable, create a new
	DECL which points to the field in the frame.  For a parameter, just
	declare the transformation.
	(convert_nonlocal_reference_op) <PARM_DECL>: Rework and issue an
	internal error when the reference is in a wrong context.  Do not
	create a debug decl by default.
	(note_nonlocal_block_vlas): Delete.
	(convert_nonlocal_reference_stmt) <GIMPLE_BIND>: Likewise.
	(convert_local_reference_op) <PARM_DECL>: Skip the frame decl.  Do not
	create a debug decl by default.
	(convert_all_function_calls): Always create the static chain for nested
	functions if not optimizing.
	(finalize_nesting_tree_1): Adjust comment.
	* function.c (instantiate_decls): Process the saved static chain.
	(expand_function_start): If not optimizing, save the static chain
	onto the stack.
	* rtl.h (non_final_source_line): Declare.
	* cfglayout.c (non_final_source_line): New function.
	* final.c (force_source_line): Do not initialize it there...
	(final_start_function): ...but here instead.
	(final_scan_insn): Do not force a source line after the prologue if
	that of the next instruction is not the final one.
testsuite/
	* gcc.dg/debug/dwarf2/pr37726.c: Adjust.

[L228-031: support for up-level references in GCC 4.7]
(Superseded by change on gcc-4.9 branch)

commit 1784c2f4cf6893a35297572afcbcf3d42fb8ece0
commit ae6c2e6e8e23e6f54ebeb72c2a1806d4986e7462
2012-02-22  Eric Botcazou  <ebotcazou@adacore.com>

	* config/ia64/ia64.c (ia64_load_pair_ok): Return 0 if the second member
	of the destination isn't also a FP_REGS register.

[L222-033: failure of F107_003 on IA-64/VMS with GCC 4.7]
(Installed in GCC 4.7 on 2012-04-06 - revision 186178)

commit [dump-xref]
2012-02-17  Arnaud Charlet  <charlet@adacore.com>

testsuite/
	* g++.dg/warn/pr26785.C, g++.old-deja/g++.brendan/crash16.C,
	g++.old-deja/g++.law/ctors5.C: Update column numbers.

[L216-028: dump-xref causes regressions in C++ test suite]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-02-10  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c (skip_xref): Ignore references to command line
	(RESERVED_LOCATION_COUNT+1) to avoid e.g. spurious refs to
	-D_GNU_SOURCE on linux.
c-family/
	* c-lex.c (cb_define_xref, cb_undef_xref, cb_used_xref): Fix thinko.

[L201-021: missing include refs]
(Superseded by change on gcc-4.9 branch)

commit 20cacec37094c141994a41f541f39b8004ad38be
commit 110232af6348ce7eba98bb49376cd0df5125340e
commit b6e7fe90db78a2e29e724bd1b792f313eb580759
2012-02-08  Eric Botcazou  <ebotcazou@adacore.com>

testsuite/
	* lib/gnat.exp (gnat_target_compile): Do not use libada.

[KB18-008: adjust gnat.dg testsuite to GNAT Pro]
(Superseded by change on gcc-4.9 branch)

commit bd58f00811ec9cd7fb68dfc47d913552362f4b65
commit 4242b10d962561e8ce8dc05d641a1a195990410c
2012-02-07  Eric Botcazou  <ebotcazou@adacore.com>
            Tristan Gingold  <gingold@adacore.com>

	* doc/md.texi (Standard Names): Document probe_stack_address.
	* explow.c (emit_stack_probe): Handle probe_stack_address.
	* config/ia64/ia64.md (UNSPECV_PROBE_STACK_ADDRESS): New constant.
	(UNSPECV_PROBE_STACK_RANGE): Likewise.
	(probe_stack_address): New insn.
	(probe_stack_range): Likewise.
	* config/ia64/ia64.c: Include common/common-target.h.
	(ia64_compute_frame_size): Mark r2 and r3 as used if static stack
	checking is enabled.
	(ia64_emit_probe_stack_range): New function.
	(output_probe_stack_range): Likewise.
	(ia64_expand_prologue): Invoke ia64_emit_probe_stack_range if static
	builtin stack checking is enabled.
	(rtx_needs_barrier) <UNSPEC_VOLATILE>: Handle UNSPECV_PROBE_STACK_RANGE
	and UNSPECV_PROBE_STACK_ADDRESS.
	(unknown_for_bundling_p): New predicate.
	(group_barrier_needed): Use important_for_bundling_p.
	(ia64_dfa_new_cycle): Use unknown_for_bundling_p.
	(issue_nops_and_insn): Likewise.
	(bundling): Likewise.
	(final_emit_insn_group_barriers): Likewise.
	* config/ia64/ia64-protos.h (output_probe_stack_range): Declare.
	* config/ia64/hpux.h (STACK_CHECK_STATIC_BUILTIN): Define.
	(STACK_CHECK_PROTECT): Likewise.
	* config/ia64/linux.h (STACK_CHECK_STATIC_BUILTIN): Likewise.

[L131-025: implement RTL static stack checking on IA-64]
(Installed in GCC 4.8 on 2012-05-10 - revision 187383)

commit [dump-xref]
2012-02-03  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c (traverse_tree_xref): Do not call traverse_tree with a
	null sloc. Instead use same criteria as cp/parser.c.
cp/
	* parser.c (cp_parser_postfix_expression): Update comment.
	Make previous handling of INDIRECT_REF more general.

[L206-014: memory exhaustion in -fdump-xref]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-02-03  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c (tree_slocs): Simplify by using tree_sloc.
	(traverse_tree_xref): Handle all method calls similarly.
cp/
	* parser.c (cp_parser_postfix_open_square_expression): Add special
	handling for INDIRECT_REF.
	* semantics.c (finish_id_expression): Add sloc on decl.

[J905-004: dump-xref: missing ref for x->foo]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-02-01  Arnaud Charlet  <charlet@adacore.com>

cp/
	* parser.c (cp_parser_cast_expression): Remove type ref generation,
	redundant with the one in cp_parser_simple_type_specifier.

[L202-003: dump-xref: extra reference to type]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-02-01  Arnaud Charlet  <charlet@adacore.com>

	* tree-xref.c (traverse_tree_xref): Improve handling of
	ARRAY_REF, DECL_EXPR, CALL_EXPR.
cp/
	* parser.c (cp_parser_postfix_open_square_expression): Add extra
	locations for array refs (e.g. a[i]).
	(cp_parser_binary_expression): Fix setting of first location.

[L131-023: dump-xref: wrong sloc for binary expression]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-01-31  Arnaud Charlet  <charlet@adacore.com>

libcpp/
	* directives.c (_cpp_macro_location): Fix handling of macro lines
	with \\n.

[L111-013: dump-xref problem with _cpp_macro_location]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-01-31  Arnaud Charlet  <charlet@adacore.com>

c-family/
	* c-lex.c (cb_define_xref, cb_undef_xref, cb_used_xref,
	cb_include_xref): Fix handling of predefined macros.

[L125-026: dump-xref: extra macro refs]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-01-30  Arnaud Charlet  <charlet@adacore.com>

cp/
	* typeck.c (build_c_cast): Simplify setting of location.

[L127-019: dump-xref: wrong column info after a type cast]
(Superseded by change on gcc-4.9 branch)

commit [dump-xref]
2012-01-25  Arnaud Charlet  <charlet@adacore.com>
            Matthew Gingell  <gingell@adacore.com>

	* c-decl.c (c_write_global_declarations): Add handling of -fdump-xref.
	(merge_decls): Generate xrefs to original decl.
	(finish_enum): Generate xref to enum values.
	(finish_function): Update call to c_finish_return. Add call to
	traverse_tree_xref and generate_reference.
	(build_function_declarator): Set ret->id_loc.
	(build_enumerator): Add decl_loc argument.
	* c-lex.c (cb_define_xref, cb_used_xref, cb_undef_xref,
	cb_include_xref): New functions.
	(init_c_lex): Connect callbacks for xrefs.
	* gcc.c: Add support -fdump-xref.
	* Makefile.in (OBJS-common): Add tree-xref.o.
	* tree-dump.c (dump_files): Add xref.
	(FIRST_AUTO_NUMBERED_DUMP): Bump to 9.
	* tree-pass.h (tree_dump_index): Add TDI_xref.
	* tree.h, tree.c (stabilize_reference): Copy source location.
	(expr_locations, set_expr_locations, set_expr_location2,
	duplicate_expr_locations, expr_location_n): New functions.
	(SET_EXPR_LOCATION2, SET_EXPR_LOCATIONS): New macros.
	* toplev.c (compile_file): Include call to final_write_globals()
	in -fsyntax-only.
	* c-tree.h (c_finish_return): Add location parameter.
	(build_enumerator): Add decl_loc argument.
	* c-typeck.c (build_external_ref): Generate enum xref.
	(c_finish_return): New parameter loc_expr.
	* c-gimplify.c (c_genericize): Handle -fdump-xref.
	* c-common.c (c_fully_fold_internal): Copy extra locations on new node.
	* c-parser.c (c_parser_declspecs): Generate type xref.
	(c_parser_enum_specifier): Compute proper location for enum values.
	Generate enum type reference.
	(c_parser_struct_or_union_specifier): Generate type reference.
	(c_parser_attributes): Adjust calls to c_parser_expr_list.
	(c_parser_type_name): Generate type reference.
	(c_parser_statement_after_labels): Adjust calls to c_finish_return with
	extra expr location.
	(c_parser_expr_no_commas, c_parser_conditional_expression,
	c_parser_binary_expression, c_parser_unary_expression,
	c_parser_postfix_expression_after_primary, c_parser_expr_list): Set
	extra locations.
	(c_parser_postfix_expression): Remove extra semicolon.
	(c_parser_objc_keywordexpr): Adjust call to c_parser_expr_list.
	* tree-xref.h, tree-xref.c: New files.
	* c-ada-spec.h (cpp_operation): Add IS_TEMPLATE_PARM_INDEX,
	GET_TEMPLATE_PARM_DECL, GET_DECL_TEMPLATE, MAYBE_CLASS.
	* cgraphunit.c (cgraph_finalize_function): Disable garbage collector
	if -fdump-xref is enabled, since we need to keep a handle on original
	nodes to output xrefs.
objc/
	* objc-act.c (objc_synthesize_getter): Update call to c_finish_return.
cp/
	* decl2.c (dump_xref, dump_xrefs): New functions.
	(cp_write_global_declarations): Add handling of -fdump-xref.
	(cpp_check): Add handling of IS_TEMPLATE_PARM_INDEX,
	GET_TEMPLATE_PARM_DECL, GET_DECL_TEMPLATE, MAYBE_CLASS.
	* decl.c (duplicate_decls): Generate xref to original prototype.
	(finish_enum): Generate enum xref.
	* parser.c (cp_parser_primary_expression): Add enum xref.
	(cp_parser_parenthesized_expression_list, cp_parser_unary_expression,
	cp_parser_binary_expression, cp_parser_question_colon_clause,
	cp_parser_assignment_expression, cp_parser_enumerator_definition): Set
	extra locations.
	(cp_parser_postfix_expression): Ditto. Generate ref to "object"
	in object->method expressions when possible.  Update calls to
	build_new_method_call and finish_call_expr.
	(cp_parser_new_placement, cp_parser_new_initializer,
	cp_parser_mem_initializer, cp_parser_initializer,
	cp_parser_attribute_list, cp_parser_functional_cast): Adjust call to
	cp_parser_parenthesized_expression_list.
	(cp_parser_namespace_definition): Generate references
	to namespace start/end.
	(cp_parser_direct_declarator): Add ref to qualifying_scope.
	(cp_parser_base_specifier): Add ref to base classes.
	(cp_parser_elaborated_type_specifier): Add ref to type.
	(cp_parser_simple_type_specifier): Add ref to type (e.g.
	struct or class) name.
	(cp_parser_class_specifier): Generate end type reference.
	(cp_parser_id_expression, cp_parser_declarator_id): New parameter
	location_t *. Set location to proper sloc for class::method
	declarations.
	(cp_parser_nested_name_specifier_opt): Generate references to
	scopes (e.g. class, namespace).
	* typeck.c (build_c_cast): Ensure line number information is preserved
	over this function.
	* call.c (perform_implicit_conversion_flags): Ensure line number
	information is preserved over this function.
	(build_over_call): New parameter loc.
	Generate xref for dispatching calls.
	(build_new_method_call, build_new_method_call_1, finish_call_expr):
	New parameter loc.
	(build_new_function_call, build_operator_new_call, build_op_call_1,
	build_new_op_1, convert_like_real): Update call to build_over_call.
	(build_special_member_call): Update call to build_new_method_call.
	* cp-gimplify.c (cp_genericize): Add handling of -fdump-xref.
	* class.c (finish_struct_1): Generate references to t and its methods
	(build_self_reference): Update decl location of internal type.
	* cp-tree.h (build_new_method_call, finish_call_expr): New parameter
	loc.
	* pt.c (tsubst_copy_and_build): Update call to build_new_method_call
	and finish_call_expr.
	* init.c (build_new_1, build_dtor_call): Ditto.
	* semantics.c (finish_omp_barrier, finish_omp_flush,
	finish_omp_taskwait): Ditto.
	(finish_call_expr): Ditto. New parameter loc.
	(finish_id_expression): Add sloc on decl.
libcpp/
	* directives.c (_cpp_macro_location): New function.
	(do_define, do_undef, do_include_common, do_ifdef, do_ifndef,
	cpp_pop_definition): Adjust column location by calling
	_cpp_macro_location.
	* files.c (_cpp_stack_include): Implement new stack_include callback.
	* include/cpplib.h (stack_include): New callback.
	* internal.h (cpp_buf_column): New function.
	(CPP_BUF_COLUMN): Use cpp_buf_column.
	* lex.c (cpp_buf_column): New function.
testsuite/
	* g++.dg/gomp/for-19.C: Adjust baseline.
	* g++.dg/parse/error4.C: Adjust expected column.
	* g++.dg/tc1/dr52.C: Update baseline.
	* g++.dg/warn/pr26785.C, g++.old-deja/g++.brendan/crash16.C,
	g++.old-deja/g++.law/ctors5.C: Update column numbers.

[H721-006: GPS 5.0: using GCC to generate xrefs for C/C++]
(Superseded by change on gcc-4.9 branch)

commit 30ca0c6c7c68874685ccb62481b30de3b91b0e14
2012-01-25  Arnaud Charlet  <charlet@adacore.com>

c-family/
	* c-ada-spec.c (dump_number, handle_escape_character): New
	functions.
	(print_ada_macros): Add handling of constant integers and strings.

(Superseded by change on gcc-4.9 branch)
